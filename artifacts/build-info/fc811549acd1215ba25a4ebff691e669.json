{"id":"fc811549acd1215ba25a4ebff691e669","_format":"hh-sol-build-info-1","solcVersion":"0.8.19","solcLongVersion":"0.8.19+commit.7dd6d404","input":{"language":"Solidity","sources":{"@pythnetwork/pyth-sdk-solidity/IPyth.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.0;\n\nimport \"./PythStructs.sol\";\nimport \"./IPythEvents.sol\";\n\n/// @title Consume prices from the Pyth Network (https://pyth.network/).\n/// @dev Please refer to the guidance at https://docs.pyth.network/documentation/pythnet-price-feeds/best-practices for how to consume prices safely.\n/// @author Pyth Data Association\ninterface IPyth is IPythEvents {\n    /// @notice Returns the price of a price feed without any sanity checks.\n    /// @dev This function returns the most recent price update in this contract without any recency checks.\n    /// This function is unsafe as the returned price update may be arbitrarily far in the past.\n    ///\n    /// Users of this function should check the `publishTime` in the price to ensure that the returned price is\n    /// sufficiently recent for their application. If you are considering using this function, it may be\n    /// safer / easier to use `getPriceNoOlderThan`.\n    /// @return price - please read the documentation of PythStructs.Price to understand how to use this safely.\n    function getPriceUnsafe(\n        bytes32 id\n    ) external view returns (PythStructs.Price memory price);\n\n    /// @notice Returns the price that is no older than `age` seconds of the current time.\n    /// @dev This function is a sanity-checked version of `getPriceUnsafe` which is useful in\n    /// applications that require a sufficiently-recent price. Reverts if the price wasn't updated sufficiently\n    /// recently.\n    /// @return price - please read the documentation of PythStructs.Price to understand how to use this safely.\n    function getPriceNoOlderThan(\n        bytes32 id,\n        uint age\n    ) external view returns (PythStructs.Price memory price);\n\n    /// @notice Returns the exponentially-weighted moving average price of a price feed without any sanity checks.\n    /// @dev This function returns the same price as `getEmaPrice` in the case where the price is available.\n    /// However, if the price is not recent this function returns the latest available price.\n    ///\n    /// The returned price can be from arbitrarily far in the past; this function makes no guarantees that\n    /// the returned price is recent or useful for any particular application.\n    ///\n    /// Users of this function should check the `publishTime` in the price to ensure that the returned price is\n    /// sufficiently recent for their application. If you are considering using this function, it may be\n    /// safer / easier to use either `getEmaPrice` or `getEmaPriceNoOlderThan`.\n    /// @return price - please read the documentation of PythStructs.Price to understand how to use this safely.\n    function getEmaPriceUnsafe(\n        bytes32 id\n    ) external view returns (PythStructs.Price memory price);\n\n    /// @notice Returns the exponentially-weighted moving average price that is no older than `age` seconds\n    /// of the current time.\n    /// @dev This function is a sanity-checked version of `getEmaPriceUnsafe` which is useful in\n    /// applications that require a sufficiently-recent price. Reverts if the price wasn't updated sufficiently\n    /// recently.\n    /// @return price - please read the documentation of PythStructs.Price to understand how to use this safely.\n    function getEmaPriceNoOlderThan(\n        bytes32 id,\n        uint age\n    ) external view returns (PythStructs.Price memory price);\n\n    /// @notice Update price feeds with given update messages.\n    /// This method requires the caller to pay a fee in wei; the required fee can be computed by calling\n    /// `getUpdateFee` with the length of the `updateData` array.\n    /// Prices will be updated if they are more recent than the current stored prices.\n    /// The call will succeed even if the update is not the most recent.\n    /// @dev Reverts if the transferred fee is not sufficient or the updateData is invalid.\n    /// @param updateData Array of price update data.\n    function updatePriceFeeds(bytes[] calldata updateData) external payable;\n\n    /// @notice Wrapper around updatePriceFeeds that rejects fast if a price update is not necessary. A price update is\n    /// necessary if the current on-chain publishTime is older than the given publishTime. It relies solely on the\n    /// given `publishTimes` for the price feeds and does not read the actual price update publish time within `updateData`.\n    ///\n    /// This method requires the caller to pay a fee in wei; the required fee can be computed by calling\n    /// `getUpdateFee` with the length of the `updateData` array.\n    ///\n    /// `priceIds` and `publishTimes` are two arrays with the same size that correspond to senders known publishTime\n    /// of each priceId when calling this method. If all of price feeds within `priceIds` have updated and have\n    /// a newer or equal publish time than the given publish time, it will reject the transaction to save gas.\n    /// Otherwise, it calls updatePriceFeeds method to update the prices.\n    ///\n    /// @dev Reverts if update is not needed or the transferred fee is not sufficient or the updateData is invalid.\n    /// @param updateData Array of price update data.\n    /// @param priceIds Array of price ids.\n    /// @param publishTimes Array of publishTimes. `publishTimes[i]` corresponds to known `publishTime` of `priceIds[i]`\n    function updatePriceFeedsIfNecessary(\n        bytes[] calldata updateData,\n        bytes32[] calldata priceIds,\n        uint64[] calldata publishTimes\n    ) external payable;\n\n    /// @notice Returns the required fee to update an array of price updates.\n    /// @param updateData Array of price update data.\n    /// @return feeAmount The required fee in Wei.\n    function getUpdateFee(\n        bytes[] calldata updateData\n    ) external view returns (uint feeAmount);\n\n    /// @notice Returns the required fee to update a TWAP price.\n    /// @param updateData Array of price update data.\n    /// @return feeAmount The required fee in Wei.\n    function getTwapUpdateFee(\n        bytes[] calldata updateData\n    ) external view returns (uint feeAmount);\n\n    /// @notice Parse `updateData` and return price feeds of the given `priceIds` if they are all published\n    /// within `minPublishTime` and `maxPublishTime`.\n    ///\n    /// You can use this method if you want to use a Pyth price at a fixed time and not the most recent price;\n    /// otherwise, please consider using `updatePriceFeeds`. This method may store the price updates on-chain, if they\n    /// are more recent than the current stored prices.\n    ///\n    /// This method requires the caller to pay a fee in wei; the required fee can be computed by calling\n    /// `getUpdateFee` with the length of the `updateData` array.\n    ///\n    ///\n    /// @dev Reverts if the transferred fee is not sufficient or the updateData is invalid or there is\n    /// no update for any of the given `priceIds` within the given time range.\n    /// @param updateData Array of price update data.\n    /// @param priceIds Array of price ids.\n    /// @param minPublishTime minimum acceptable publishTime for the given `priceIds`.\n    /// @param maxPublishTime maximum acceptable publishTime for the given `priceIds`.\n    /// @return priceFeeds Array of the price feeds corresponding to the given `priceIds` (with the same order).\n    function parsePriceFeedUpdates(\n        bytes[] calldata updateData,\n        bytes32[] calldata priceIds,\n        uint64 minPublishTime,\n        uint64 maxPublishTime\n    ) external payable returns (PythStructs.PriceFeed[] memory priceFeeds);\n\n    /// @notice Parse `updateData` and return price feeds of the given `priceIds` if they are all published\n    /// within `minPublishTime` and `maxPublishTime,` but choose to store price updates if `storeUpdatesIfFresh`.\n    ///\n    /// You can use this method if you want to use a Pyth price at a fixed time and not the most recent price;\n    /// otherwise, please consider using `updatePriceFeeds`. This method may store the price updates on-chain, if they\n    /// are more recent than the current stored prices.\n    ///\n    /// This method requires the caller to pay a fee in wei; the required fee can be computed by calling\n    /// `getUpdateFee` with the length of the `updateData` array.\n    ///\n    /// This method will eventually allow the caller to determine whether parsed price feeds should update\n    /// the stored values as well.\n    ///\n    /// @dev Reverts if the transferred fee is not sufficient or the updateData is invalid or there is\n    /// no update for any of the given `priceIds` within the given time range.\n    /// @param updateData Array of price update data.\n    /// @param priceIds Array of price ids.\n    /// @param minAllowedPublishTime minimum acceptable publishTime for the given `priceIds`.\n    /// @param maxAllowedPublishTime maximum acceptable publishTime for the given `priceIds`.\n    /// @param storeUpdatesIfFresh flag for the parse function to\n    /// @return priceFeeds Array of the price feeds corresponding to the given `priceIds` (with the same order).\n    function parsePriceFeedUpdatesWithConfig(\n        bytes[] calldata updateData,\n        bytes32[] calldata priceIds,\n        uint64 minAllowedPublishTime,\n        uint64 maxAllowedPublishTime,\n        bool checkUniqueness,\n        bool checkUpdateDataIsMinimal,\n        bool storeUpdatesIfFresh\n    )\n        external\n        payable\n        returns (\n            PythStructs.PriceFeed[] memory priceFeeds,\n            uint64[] memory slots\n        );\n\n    /// @notice Parse time-weighted average price (TWAP) from two consecutive price updates for the given `priceIds`.\n    ///\n    /// This method calculates TWAP between two data points by processing the difference in cumulative price values\n    /// divided by the time period. It requires exactly two updates that contain valid price information\n    /// for all the requested price IDs.\n    ///\n    /// This method requires the caller to pay a fee in wei; the required fee can be computed by calling\n    /// `getUpdateFee` with the updateData array.\n    ///\n    /// @dev Reverts if:\n    /// - The transferred fee is not sufficient\n    /// - The updateData is invalid or malformed\n    /// - The updateData array does not contain exactly 2 updates\n    /// - There is no update for any of the given `priceIds`\n    /// - The time ordering between data points is invalid (start time must be before end time)\n    /// @param updateData Array containing exactly two price updates (start and end points for TWAP calculation)\n    /// @param priceIds Array of price ids to calculate TWAP for\n    /// @return twapPriceFeeds Array of TWAP price feeds corresponding to the given `priceIds` (with the same order)\n    function parseTwapPriceFeedUpdates(\n        bytes[] calldata updateData,\n        bytes32[] calldata priceIds\n    )\n        external\n        payable\n        returns (PythStructs.TwapPriceFeed[] memory twapPriceFeeds);\n\n    /// @notice Similar to `parsePriceFeedUpdates` but ensures the updates returned are\n    /// the first updates published in minPublishTime. That is, if there are multiple updates for a given timestamp,\n    /// this method will return the first update. This method may store the price updates on-chain, if they\n    /// are more recent than the current stored prices.\n    ///\n    ///\n    /// @dev Reverts if the transferred fee is not sufficient or the updateData is invalid or there is\n    /// no update for any of the given `priceIds` within the given time range and uniqueness condition.\n    /// @param updateData Array of price update data.\n    /// @param priceIds Array of price ids.\n    /// @param minPublishTime minimum acceptable publishTime for the given `priceIds`.\n    /// @param maxPublishTime maximum acceptable publishTime for the given `priceIds`.\n    /// @return priceFeeds Array of the price feeds corresponding to the given `priceIds` (with the same order).\n    function parsePriceFeedUpdatesUnique(\n        bytes[] calldata updateData,\n        bytes32[] calldata priceIds,\n        uint64 minPublishTime,\n        uint64 maxPublishTime\n    ) external payable returns (PythStructs.PriceFeed[] memory priceFeeds);\n}\n"},"@pythnetwork/pyth-sdk-solidity/IPythEvents.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.0;\n\n/// @title IPythEvents contains the events that Pyth contract emits.\n/// @dev This interface can be used for listening to the updates for off-chain and testing purposes.\ninterface IPythEvents {\n    /// @dev Emitted when the price feed with `id` has received a fresh update.\n    /// @param id The Pyth Price Feed ID.\n    /// @param publishTime Publish time of the given price update.\n    /// @param price Price of the given price update.\n    /// @param conf Confidence interval of the given price update.\n    event PriceFeedUpdate(\n        bytes32 indexed id,\n        uint64 publishTime,\n        int64 price,\n        uint64 conf\n    );\n\n    /// @dev Emitted when the TWAP price feed with `id` has received a fresh update.\n    /// @param id The Pyth Price Feed ID.\n    /// @param startTime Start time of the TWAP.\n    /// @param endTime End time of the TWAP.\n    /// @param twapPrice Price of the TWAP.\n    /// @param twapConf Confidence interval of the TWAP.\n    /// @param downSlotsRatio Down slot ratio of the TWAP.\n    event TwapPriceFeedUpdate(\n        bytes32 indexed id,\n        uint64 startTime,\n        uint64 endTime,\n        int64 twapPrice,\n        uint64 twapConf,\n        uint32 downSlotsRatio\n    );\n}\n"},"@pythnetwork/pyth-sdk-solidity/PythStructs.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.0;\n\ncontract PythStructs {\n    // A price with a degree of uncertainty, represented as a price +- a confidence interval.\n    //\n    // The confidence interval roughly corresponds to the standard error of a normal distribution.\n    // Both the price and confidence are stored in a fixed-point numeric representation,\n    // `x * (10^expo)`, where `expo` is the exponent.\n    //\n    // Please refer to the documentation at https://docs.pyth.network/documentation/pythnet-price-feeds/best-practices for how\n    // to how this price safely.\n    struct Price {\n        // Price\n        int64 price;\n        // Confidence interval around the price\n        uint64 conf;\n        // Price exponent\n        int32 expo;\n        // Unix timestamp describing when the price was published\n        uint publishTime;\n    }\n\n    // PriceFeed represents a current aggregate price from pyth publisher feeds.\n    struct PriceFeed {\n        // The price ID.\n        bytes32 id;\n        // Latest available price\n        Price price;\n        // Latest available exponentially-weighted moving average price\n        Price emaPrice;\n    }\n\n    struct TwapPriceFeed {\n        // The price ID.\n        bytes32 id;\n        // Start time of the TWAP\n        uint64 startTime;\n        // End time of the TWAP\n        uint64 endTime;\n        // TWAP price\n        Price twap;\n        // Down slot ratio represents the ratio of price feed updates that were missed or unavailable\n        // during the TWAP period, expressed as a fixed-point number between 0 and 1e6 (100%).\n        // For example:\n        //   - 0 means all price updates were available\n        //   - 500_000 means 50% of updates were missed\n        //   - 1_000_000 means all updates were missed\n        // This can be used to assess the quality/reliability of the TWAP calculation.\n        // Applications should define a maximum acceptable ratio (e.g. 100000 for 10%)\n        // and revert if downSlotsRatio exceeds it.\n        uint32 downSlotsRatio;\n    }\n\n    // Information used to calculate time-weighted average prices (TWAP)\n    struct TwapPriceInfo {\n        // slot 1\n        int128 cumulativePrice;\n        uint128 cumulativeConf;\n        // slot 2\n        uint64 numDownSlots;\n        uint64 publishSlot;\n        uint64 publishTime;\n        uint64 prevPublishTime;\n        // slot 3\n        int32 expo;\n    }\n}\n"},"contracts/BotDetector.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nimport \"@pythnetwork/pyth-sdk-solidity/IPyth.sol\";\r\nimport \"@pythnetwork/pyth-sdk-solidity/PythStructs.sol\";\r\n\r\ncontract BotDetectorWithPyth {\r\n    IPyth public pyth;\r\n    address public admin;\r\n    address public botAnalyzer;\r\n\r\n    // Bot categories\r\n    enum BotCategory {\r\n        HUMAN, // Score 0-39\r\n        GOOD_BOT, // Score 40-59 (Market Makers, Arbitrage)\r\n        BAD_BOT // Score 60+ (Manipulative, Front-running)\r\n    }\r\n\r\n    struct TradeRecord {\r\n        address user;\r\n        uint256 timestamp;\r\n        uint256 amount;\r\n        uint256 blockNumber;\r\n        int64 btcPriceAtTrade;\r\n        uint64 pricePublishTime;\r\n    }\r\n\r\n    struct BotEvidence {\r\n        address user;\r\n        uint256 tradeTimestamp;\r\n        uint256 pricePublishTime;\r\n        int64 priceAtTrade;\r\n        uint256 reactionTimeMs;\r\n        uint256 botScore;\r\n        BotCategory category;\r\n        string botType; // \"Market Maker\", \"Arbitrage Bot\", \"Manipulative\", etc.\r\n        uint256 liquidityProvided;\r\n    }\r\n\r\n    struct BotInfo {\r\n        bool isFlagged;\r\n        uint256 score;\r\n        BotCategory category;\r\n        string botType;\r\n        uint256 liquidityProvided;\r\n        uint256 flaggedAt;\r\n    }\r\n\r\n    // Storage\r\n    mapping(address => TradeRecord[]) public userTrades;\r\n    mapping(address => BotInfo) public botRegistry;\r\n    mapping(address => BotEvidence) public botEvidenceProof;\r\n\r\n    // Separate tracking for good and bad bots\r\n    address[] public goodBots;\r\n    address[] public badBots;\r\n\r\n    mapping(address => bool) private isGoodBot;\r\n    mapping(address => bool) private isBadBot;\r\n\r\n    // Events\r\n    event TradeExecuted(\r\n        address indexed user,\r\n        uint256 timestamp,\r\n        uint256 amount,\r\n        uint256 blockNumber,\r\n        int64 btcPrice\r\n    );\r\n\r\n    event GoodBotFlagged(\r\n        address indexed user,\r\n        uint256 score,\r\n        string botType,\r\n        uint256 liquidityProvided,\r\n        string reason,\r\n        int64 priceUsed,\r\n        uint256 reactionTimeMs\r\n    );\r\n\r\n    event BadBotFlagged(\r\n        address indexed user,\r\n        uint256 score,\r\n        string riskLevel,\r\n        string reason,\r\n        int64 priceUsed,\r\n        uint256 reactionTimeMs\r\n    );\r\n\r\n    event BotUnflagged(address indexed user, BotCategory previousCategory);\r\n\r\n    modifier onlyAnalyzer() {\r\n        require(\r\n            msg.sender == botAnalyzer || msg.sender == admin,\r\n            \"Not authorized\"\r\n        );\r\n        _;\r\n    }\r\n\r\n    constructor(address _pythContract, address _botAnalyzer) {\r\n        pyth = IPyth(_pythContract);\r\n        admin = msg.sender;\r\n        botAnalyzer = _botAnalyzer;\r\n    }\r\n\r\n    /**\r\n     * Execute a trade (basic version)\r\n     */\r\n    function executeTrade(uint256 amount) external {\r\n        BotInfo memory botInfo = botRegistry[msg.sender];\r\n\r\n        // Block bad bots from trading\r\n        require(\r\n            botInfo.category != BotCategory.BAD_BOT,\r\n            \"Bad bot detected - trading blocked!\"\r\n        );\r\n        require(amount > 0, \"Invalid amount\");\r\n\r\n        userTrades[msg.sender].push(\r\n            TradeRecord({\r\n                user: msg.sender,\r\n                timestamp: block.timestamp,\r\n                amount: amount,\r\n                blockNumber: block.number,\r\n                btcPriceAtTrade: 0,\r\n                pricePublishTime: 0\r\n            })\r\n        );\r\n\r\n        emit TradeExecuted(\r\n            msg.sender,\r\n            block.timestamp,\r\n            amount,\r\n            block.number,\r\n            0\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Execute a trade with Pyth price proof\r\n     */\r\n    function executeTradeWithPriceProof(\r\n        uint256 amount,\r\n        bytes[] calldata priceUpdateData,\r\n        bytes32 priceId\r\n    ) external payable {\r\n        BotInfo memory botInfo = botRegistry[msg.sender];\r\n\r\n        // Block bad bots\r\n        require(\r\n            botInfo.category != BotCategory.BAD_BOT,\r\n            \"Bad bot detected - trading blocked!\"\r\n        );\r\n        require(amount > 0, \"Invalid amount\");\r\n\r\n        uint fee = pyth.getUpdateFee(priceUpdateData);\r\n        require(msg.value >= fee, \"Insufficient fee\");\r\n\r\n        pyth.updatePriceFeeds{value: fee}(priceUpdateData);\r\n        PythStructs.Price memory price = pyth.getPriceNoOlderThan(priceId, 60);\r\n\r\n        userTrades[msg.sender].push(\r\n            TradeRecord({\r\n                user: msg.sender,\r\n                timestamp: block.timestamp,\r\n                amount: amount,\r\n                blockNumber: block.number,\r\n                btcPriceAtTrade: price.price,\r\n                pricePublishTime: uint64(price.publishTime)\r\n            })\r\n        );\r\n\r\n        emit TradeExecuted(\r\n            msg.sender,\r\n            block.timestamp,\r\n            amount,\r\n            block.number,\r\n            price.price\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Flag GOOD BOTS with Pyth proof (Market Makers & Arbitrage)\r\n     */\r\n    function flagGoodBotsWithPythProof(\r\n        address[] calldata users,\r\n        uint256[] calldata scores,\r\n        string[] calldata botTypes,\r\n        uint256[] calldata liquidityAmounts,\r\n        string[] calldata reasons,\r\n        bytes[] calldata priceUpdateData,\r\n        bytes32 priceId\r\n    ) external payable onlyAnalyzer {\r\n        require(users.length == scores.length, \"Length mismatch\");\r\n        require(users.length == botTypes.length, \"Length mismatch\");\r\n        require(users.length == liquidityAmounts.length, \"Length mismatch\");\r\n        require(users.length == reasons.length, \"Length mismatch\");\r\n\r\n        uint fee = pyth.getUpdateFee(priceUpdateData);\r\n        require(msg.value >= fee, \"Insufficient Pyth fee\");\r\n\r\n        pyth.updatePriceFeeds{value: fee}(priceUpdateData);\r\n        PythStructs.Price memory currentPrice = pyth.getPriceUnsafe(priceId);\r\n\r\n        for (uint i = 0; i < users.length; i++) {\r\n            _flagGoodBot(\r\n                users[i],\r\n                scores[i],\r\n                botTypes[i],\r\n                liquidityAmounts[i],\r\n                reasons[i],\r\n                currentPrice\r\n            );\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Internal function to flag a good bot\r\n     */\r\n    function _flagGoodBot(\r\n        address user,\r\n        uint256 score,\r\n        string calldata botType,\r\n        uint256 liquidityAmount,\r\n        string calldata reason,\r\n        PythStructs.Price memory currentPrice\r\n    ) private {\r\n        // Remove from bad bots if previously flagged\r\n        if (isBadBot[user]) {\r\n            _removeFromBadBots(user);\r\n        }\r\n\r\n        // Add to good bots if not already there\r\n        if (!isGoodBot[user]) {\r\n            goodBots.push(user);\r\n            isGoodBot[user] = true;\r\n        }\r\n\r\n        // Update bot registry\r\n        botRegistry[user] = BotInfo({\r\n            isFlagged: true,\r\n            score: score,\r\n            category: BotCategory.GOOD_BOT,\r\n            botType: botType,\r\n            liquidityProvided: liquidityAmount,\r\n            flaggedAt: block.timestamp\r\n        });\r\n\r\n        // Store evidence\r\n        TradeRecord[] storage trades = userTrades[user];\r\n        if (trades.length > 0) {\r\n            TradeRecord memory lastTrade = trades[trades.length - 1];\r\n\r\n            uint256 reactionTime = lastTrade.timestamp >\r\n                currentPrice.publishTime\r\n                ? (lastTrade.timestamp - currentPrice.publishTime) * 1000\r\n                : 0;\r\n\r\n            botEvidenceProof[user] = BotEvidence({\r\n                user: user,\r\n                tradeTimestamp: lastTrade.timestamp,\r\n                pricePublishTime: currentPrice.publishTime,\r\n                priceAtTrade: currentPrice.price,\r\n                reactionTimeMs: reactionTime,\r\n                botScore: score,\r\n                category: BotCategory.GOOD_BOT,\r\n                botType: botType,\r\n                liquidityProvided: liquidityAmount\r\n            });\r\n\r\n            emit GoodBotFlagged(\r\n                user,\r\n                score,\r\n                botType,\r\n                liquidityAmount,\r\n                reason,\r\n                currentPrice.price,\r\n                reactionTime\r\n            );\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Flag BAD BOTS with Pyth proof (Manipulative & Front-running)\r\n     */\r\n    function flagBadBotsWithPythProof(\r\n        address[] calldata users,\r\n        uint256[] calldata scores,\r\n        string[] calldata riskLevels,\r\n        string[] calldata reasons,\r\n        bytes[] calldata priceUpdateData,\r\n        bytes32 priceId\r\n    ) external payable onlyAnalyzer {\r\n        require(users.length == scores.length, \"Length mismatch\");\r\n        require(users.length == riskLevels.length, \"Length mismatch\");\r\n        require(users.length == reasons.length, \"Length mismatch\");\r\n\r\n        uint fee = pyth.getUpdateFee(priceUpdateData);\r\n        require(msg.value >= fee, \"Insufficient Pyth fee\");\r\n\r\n        pyth.updatePriceFeeds{value: fee}(priceUpdateData);\r\n        PythStructs.Price memory currentPrice = pyth.getPriceUnsafe(priceId);\r\n\r\n        for (uint i = 0; i < users.length; i++) {\r\n            _flagBadBot(\r\n                users[i],\r\n                scores[i],\r\n                riskLevels[i],\r\n                reasons[i],\r\n                currentPrice\r\n            );\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Internal function to flag a bad bot\r\n     */\r\n    function _flagBadBot(\r\n        address user,\r\n        uint256 score,\r\n        string calldata riskLevel,\r\n        string calldata reason,\r\n        PythStructs.Price memory currentPrice\r\n    ) private {\r\n        // Remove from good bots if previously flagged\r\n        if (isGoodBot[user]) {\r\n            _removeFromGoodBots(user);\r\n        }\r\n\r\n        // Add to bad bots if not already there\r\n        if (!isBadBot[user]) {\r\n            badBots.push(user);\r\n            isBadBot[user] = true;\r\n        }\r\n\r\n        // Update bot registry\r\n        botRegistry[user] = BotInfo({\r\n            isFlagged: true,\r\n            score: score,\r\n            category: BotCategory.BAD_BOT,\r\n            botType: \"Manipulative\",\r\n            liquidityProvided: 0,\r\n            flaggedAt: block.timestamp\r\n        });\r\n\r\n        // Store evidence\r\n        TradeRecord[] storage trades = userTrades[user];\r\n        if (trades.length > 0) {\r\n            TradeRecord memory lastTrade = trades[trades.length - 1];\r\n\r\n            uint256 reactionTime = lastTrade.timestamp >\r\n                currentPrice.publishTime\r\n                ? (lastTrade.timestamp - currentPrice.publishTime) * 1000\r\n                : 0;\r\n\r\n            botEvidenceProof[user] = BotEvidence({\r\n                user: user,\r\n                tradeTimestamp: lastTrade.timestamp,\r\n                pricePublishTime: currentPrice.publishTime,\r\n                priceAtTrade: currentPrice.price,\r\n                reactionTimeMs: reactionTime,\r\n                botScore: score,\r\n                category: BotCategory.BAD_BOT,\r\n                botType: \"Manipulative\",\r\n                liquidityProvided: 0\r\n            });\r\n\r\n            emit BadBotFlagged(\r\n                user,\r\n                score,\r\n                riskLevel,\r\n                reason,\r\n                currentPrice.price,\r\n                reactionTime\r\n            );\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Regular flagging for good bots (cheaper, no Pyth proof)\r\n     */\r\n    function flagGoodBots(\r\n        address[] calldata users,\r\n        uint256[] calldata scores,\r\n        string[] calldata botTypes,\r\n        uint256[] calldata liquidityAmounts\r\n    ) external onlyAnalyzer {\r\n        require(users.length == scores.length, \"Length mismatch\");\r\n\r\n        for (uint i = 0; i < users.length; i++) {\r\n            // Remove from bad bots if previously flagged\r\n            if (isBadBot[users[i]]) {\r\n                _removeFromBadBots(users[i]);\r\n            }\r\n\r\n            if (!isGoodBot[users[i]]) {\r\n                goodBots.push(users[i]);\r\n                isGoodBot[users[i]] = true;\r\n            }\r\n\r\n            botRegistry[users[i]] = BotInfo({\r\n                isFlagged: true,\r\n                score: scores[i],\r\n                category: BotCategory.GOOD_BOT,\r\n                botType: botTypes[i],\r\n                liquidityProvided: liquidityAmounts[i],\r\n                flaggedAt: block.timestamp\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Regular flagging for bad bots (cheaper, no Pyth proof)\r\n     */\r\n    function flagBadBots(\r\n        address[] calldata users,\r\n        uint256[] calldata scores,\r\n        string[] calldata riskLevels\r\n    ) external onlyAnalyzer {\r\n        require(users.length == scores.length, \"Length mismatch\");\r\n\r\n        for (uint i = 0; i < users.length; i++) {\r\n            // Remove from good bots if previously flagged\r\n            if (isGoodBot[users[i]]) {\r\n                _removeFromGoodBots(users[i]);\r\n            }\r\n\r\n            if (!isBadBot[users[i]]) {\r\n                badBots.push(users[i]);\r\n                isBadBot[users[i]] = true;\r\n            }\r\n\r\n            botRegistry[users[i]] = BotInfo({\r\n                isFlagged: true,\r\n                score: scores[i],\r\n                category: BotCategory.BAD_BOT,\r\n                botType: \"Manipulative\",\r\n                liquidityProvided: 0,\r\n                flaggedAt: block.timestamp\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Remove user from good bots array\r\n     */\r\n    function _removeFromGoodBots(address user) private {\r\n        for (uint i = 0; i < goodBots.length; i++) {\r\n            if (goodBots[i] == user) {\r\n                goodBots[i] = goodBots[goodBots.length - 1];\r\n                goodBots.pop();\r\n                isGoodBot[user] = false;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Remove user from bad bots array\r\n     */\r\n    function _removeFromBadBots(address user) private {\r\n        for (uint i = 0; i < badBots.length; i++) {\r\n            if (badBots[i] == user) {\r\n                badBots[i] = badBots[badBots.length - 1];\r\n                badBots.pop();\r\n                isBadBot[user] = false;\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Unflag a user completely\r\n     */\r\n    function unflagBot(address user) external onlyAnalyzer {\r\n        BotCategory previousCategory = botRegistry[user].category;\r\n\r\n        if (isGoodBot[user]) {\r\n            _removeFromGoodBots(user);\r\n        }\r\n        if (isBadBot[user]) {\r\n            _removeFromBadBots(user);\r\n        }\r\n\r\n        delete botRegistry[user];\r\n        delete botEvidenceProof[user];\r\n\r\n        emit BotUnflagged(user, previousCategory);\r\n    }\r\n\r\n    /**\r\n     * Get user's trade history\r\n     */\r\n    function getUserTrades(\r\n        address user\r\n    ) external view returns (TradeRecord[] memory) {\r\n        return userTrades[user];\r\n    }\r\n\r\n    /**\r\n     * Check if user is flagged and get details\r\n     */\r\n    function isBot(address user) external view returns (bool, uint256) {\r\n        BotInfo memory info = botRegistry[user];\r\n        return (info.isFlagged, info.score);\r\n    }\r\n\r\n    /**\r\n     * Get bot information\r\n     */\r\n    function getBotInfo(address user) external view returns (BotInfo memory) {\r\n        return botRegistry[user];\r\n    }\r\n\r\n    /**\r\n     * Get bot evidence\r\n     */\r\n    function getBotEvidence(\r\n        address user\r\n    ) external view returns (BotEvidence memory) {\r\n        return botEvidenceProof[user];\r\n    }\r\n\r\n    /**\r\n     * Get all good bots\r\n     */\r\n    function getGoodBots() external view returns (address[] memory) {\r\n        return goodBots;\r\n    }\r\n\r\n    /**\r\n     * Get all bad bots\r\n     */\r\n    function getBadBots() external view returns (address[] memory) {\r\n        return badBots;\r\n    }\r\n\r\n    /**\r\n     * Get good bots count\r\n     */\r\n    function getGoodBotsCount() external view returns (uint256) {\r\n        return goodBots.length;\r\n    }\r\n\r\n    /**\r\n     * Get bad bots count\r\n     */\r\n    function getBadBotsCount() external view returns (uint256) {\r\n        return badBots.length;\r\n    }\r\n\r\n    /**\r\n     * Check if user is a good bot\r\n     */\r\n    function isGoodBotAddress(address user) external view returns (bool) {\r\n        return isGoodBot[user];\r\n    }\r\n\r\n    /**\r\n     * Check if user is a bad bot\r\n     */\r\n    function isBadBotAddress(address user) external view returns (bool) {\r\n        return isBadBot[user];\r\n    }\r\n\r\n    /**\r\n     * Set bot analyzer address\r\n     */\r\n    function setBotAnalyzer(address _newAnalyzer) external {\r\n        require(msg.sender == admin, \"Only admin\");\r\n        botAnalyzer = _newAnalyzer;\r\n    }\r\n}\r\n"}},"settings":{"optimizer":{"enabled":true,"runs":200},"viaIR":true,"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"errors":[{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> contracts/BotDetector.sol:417:9:\n    |\n417 |         string[] calldata riskLevels\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":12603,"file":"contracts/BotDetector.sol","start":12575},"type":"Warning"}],"sources":{"@pythnetwork/pyth-sdk-solidity/IPyth.sol":{"ast":{"absolutePath":"@pythnetwork/pyth-sdk-solidity/IPyth.sol","exportedSymbols":{"IPyth":[162],"IPythEvents":[192],"PythStructs":[240]},"id":163,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"39:23:0"},{"absolutePath":"@pythnetwork/pyth-sdk-solidity/PythStructs.sol","file":"./PythStructs.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":163,"sourceUnit":241,"src":"64:27:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@pythnetwork/pyth-sdk-solidity/IPythEvents.sol","file":"./IPythEvents.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":163,"sourceUnit":193,"src":"92:27:0","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":5,"name":"IPythEvents","nameLocations":["397:11:0"],"nodeType":"IdentifierPath","referencedDeclaration":192,"src":"397:11:0"},"id":6,"nodeType":"InheritanceSpecifier","src":"397:11:0"}],"canonicalName":"IPyth","contractDependencies":[],"contractKind":"interface","documentation":{"id":4,"nodeType":"StructuredDocumentation","src":"121:257:0","text":"@title Consume prices from the Pyth Network (https://pyth.network/).\n @dev Please refer to the guidance at https://docs.pyth.network/documentation/pythnet-price-feeds/best-practices for how to consume prices safely.\n @author Pyth Data Association"},"fullyImplemented":false,"id":162,"linearizedBaseContracts":[162,192],"name":"IPyth","nameLocation":"388:5:0","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":7,"nodeType":"StructuredDocumentation","src":"415:669:0","text":"@notice Returns the price of a price feed without any sanity checks.\n @dev This function returns the most recent price update in this contract without any recency checks.\n This function is unsafe as the returned price update may be arbitrarily far in the past.\n Users of this function should check the `publishTime` in the price to ensure that the returned price is\n sufficiently recent for their application. If you are considering using this function, it may be\n safer / easier to use `getPriceNoOlderThan`.\n @return price - please read the documentation of PythStructs.Price to understand how to use this safely."},"functionSelector":"96834ad3","id":15,"implemented":false,"kind":"function","modifiers":[],"name":"getPriceUnsafe","nameLocation":"1098:14:0","nodeType":"FunctionDefinition","parameters":{"id":10,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9,"mutability":"mutable","name":"id","nameLocation":"1130:2:0","nodeType":"VariableDeclaration","scope":15,"src":"1122:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1122:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1112:26:0"},"returnParameters":{"id":14,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13,"mutability":"mutable","name":"price","nameLocation":"1187:5:0","nodeType":"VariableDeclaration","scope":15,"src":"1162:30:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$203_memory_ptr","typeString":"struct PythStructs.Price"},"typeName":{"id":12,"nodeType":"UserDefinedTypeName","pathNode":{"id":11,"name":"PythStructs.Price","nameLocations":["1162:11:0","1174:5:0"],"nodeType":"IdentifierPath","referencedDeclaration":203,"src":"1162:17:0"},"referencedDeclaration":203,"src":"1162:17:0","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$203_storage_ptr","typeString":"struct PythStructs.Price"}},"visibility":"internal"}],"src":"1161:32:0"},"scope":162,"src":"1089:105:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":16,"nodeType":"StructuredDocumentation","src":"1200:423:0","text":"@notice Returns the price that is no older than `age` seconds of the current time.\n @dev This function is a sanity-checked version of `getPriceUnsafe` which is useful in\n applications that require a sufficiently-recent price. Reverts if the price wasn't updated sufficiently\n recently.\n @return price - please read the documentation of PythStructs.Price to understand how to use this safely."},"functionSelector":"a4ae35e0","id":26,"implemented":false,"kind":"function","modifiers":[],"name":"getPriceNoOlderThan","nameLocation":"1637:19:0","nodeType":"FunctionDefinition","parameters":{"id":21,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18,"mutability":"mutable","name":"id","nameLocation":"1674:2:0","nodeType":"VariableDeclaration","scope":26,"src":"1666:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":17,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1666:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":20,"mutability":"mutable","name":"age","nameLocation":"1691:3:0","nodeType":"VariableDeclaration","scope":26,"src":"1686:8:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19,"name":"uint","nodeType":"ElementaryTypeName","src":"1686:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1656:44:0"},"returnParameters":{"id":25,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24,"mutability":"mutable","name":"price","nameLocation":"1749:5:0","nodeType":"VariableDeclaration","scope":26,"src":"1724:30:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$203_memory_ptr","typeString":"struct PythStructs.Price"},"typeName":{"id":23,"nodeType":"UserDefinedTypeName","pathNode":{"id":22,"name":"PythStructs.Price","nameLocations":["1724:11:0","1736:5:0"],"nodeType":"IdentifierPath","referencedDeclaration":203,"src":"1724:17:0"},"referencedDeclaration":203,"src":"1724:17:0","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$203_storage_ptr","typeString":"struct PythStructs.Price"}},"visibility":"internal"}],"src":"1723:32:0"},"scope":162,"src":"1628:128:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":27,"nodeType":"StructuredDocumentation","src":"1762:925:0","text":"@notice Returns the exponentially-weighted moving average price of a price feed without any sanity checks.\n @dev This function returns the same price as `getEmaPrice` in the case where the price is available.\n However, if the price is not recent this function returns the latest available price.\n The returned price can be from arbitrarily far in the past; this function makes no guarantees that\n the returned price is recent or useful for any particular application.\n Users of this function should check the `publishTime` in the price to ensure that the returned price is\n sufficiently recent for their application. If you are considering using this function, it may be\n safer / easier to use either `getEmaPrice` or `getEmaPriceNoOlderThan`.\n @return price - please read the documentation of PythStructs.Price to understand how to use this safely."},"functionSelector":"9474f45b","id":35,"implemented":false,"kind":"function","modifiers":[],"name":"getEmaPriceUnsafe","nameLocation":"2701:17:0","nodeType":"FunctionDefinition","parameters":{"id":30,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29,"mutability":"mutable","name":"id","nameLocation":"2736:2:0","nodeType":"VariableDeclaration","scope":35,"src":"2728:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":28,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2728:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2718:26:0"},"returnParameters":{"id":34,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33,"mutability":"mutable","name":"price","nameLocation":"2793:5:0","nodeType":"VariableDeclaration","scope":35,"src":"2768:30:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$203_memory_ptr","typeString":"struct PythStructs.Price"},"typeName":{"id":32,"nodeType":"UserDefinedTypeName","pathNode":{"id":31,"name":"PythStructs.Price","nameLocations":["2768:11:0","2780:5:0"],"nodeType":"IdentifierPath","referencedDeclaration":203,"src":"2768:17:0"},"referencedDeclaration":203,"src":"2768:17:0","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$203_storage_ptr","typeString":"struct PythStructs.Price"}},"visibility":"internal"}],"src":"2767:32:0"},"scope":162,"src":"2692:108:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":36,"nodeType":"StructuredDocumentation","src":"2806:472:0","text":"@notice Returns the exponentially-weighted moving average price that is no older than `age` seconds\n of the current time.\n @dev This function is a sanity-checked version of `getEmaPriceUnsafe` which is useful in\n applications that require a sufficiently-recent price. Reverts if the price wasn't updated sufficiently\n recently.\n @return price - please read the documentation of PythStructs.Price to understand how to use this safely."},"functionSelector":"711a2e28","id":46,"implemented":false,"kind":"function","modifiers":[],"name":"getEmaPriceNoOlderThan","nameLocation":"3292:22:0","nodeType":"FunctionDefinition","parameters":{"id":41,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38,"mutability":"mutable","name":"id","nameLocation":"3332:2:0","nodeType":"VariableDeclaration","scope":46,"src":"3324:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":37,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3324:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":40,"mutability":"mutable","name":"age","nameLocation":"3349:3:0","nodeType":"VariableDeclaration","scope":46,"src":"3344:8:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":39,"name":"uint","nodeType":"ElementaryTypeName","src":"3344:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3314:44:0"},"returnParameters":{"id":45,"nodeType":"ParameterList","parameters":[{"constant":false,"id":44,"mutability":"mutable","name":"price","nameLocation":"3407:5:0","nodeType":"VariableDeclaration","scope":46,"src":"3382:30:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$203_memory_ptr","typeString":"struct PythStructs.Price"},"typeName":{"id":43,"nodeType":"UserDefinedTypeName","pathNode":{"id":42,"name":"PythStructs.Price","nameLocations":["3382:11:0","3394:5:0"],"nodeType":"IdentifierPath","referencedDeclaration":203,"src":"3382:17:0"},"referencedDeclaration":203,"src":"3382:17:0","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$203_storage_ptr","typeString":"struct PythStructs.Price"}},"visibility":"internal"}],"src":"3381:32:0"},"scope":162,"src":"3283:131:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":47,"nodeType":"StructuredDocumentation","src":"3420:535:0","text":"@notice Update price feeds with given update messages.\n This method requires the caller to pay a fee in wei; the required fee can be computed by calling\n `getUpdateFee` with the length of the `updateData` array.\n Prices will be updated if they are more recent than the current stored prices.\n The call will succeed even if the update is not the most recent.\n @dev Reverts if the transferred fee is not sufficient or the updateData is invalid.\n @param updateData Array of price update data."},"functionSelector":"ef9e5e28","id":53,"implemented":false,"kind":"function","modifiers":[],"name":"updatePriceFeeds","nameLocation":"3969:16:0","nodeType":"FunctionDefinition","parameters":{"id":51,"nodeType":"ParameterList","parameters":[{"constant":false,"id":50,"mutability":"mutable","name":"updateData","nameLocation":"4003:10:0","nodeType":"VariableDeclaration","scope":53,"src":"3986:27:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":48,"name":"bytes","nodeType":"ElementaryTypeName","src":"3986:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":49,"nodeType":"ArrayTypeName","src":"3986:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"3985:29:0"},"returnParameters":{"id":52,"nodeType":"ParameterList","parameters":[],"src":"4031:0:0"},"scope":162,"src":"3960:72:0","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":54,"nodeType":"StructuredDocumentation","src":"4038:1299:0","text":"@notice Wrapper around updatePriceFeeds that rejects fast if a price update is not necessary. A price update is\n necessary if the current on-chain publishTime is older than the given publishTime. It relies solely on the\n given `publishTimes` for the price feeds and does not read the actual price update publish time within `updateData`.\n This method requires the caller to pay a fee in wei; the required fee can be computed by calling\n `getUpdateFee` with the length of the `updateData` array.\n `priceIds` and `publishTimes` are two arrays with the same size that correspond to senders known publishTime\n of each priceId when calling this method. If all of price feeds within `priceIds` have updated and have\n a newer or equal publish time than the given publish time, it will reject the transaction to save gas.\n Otherwise, it calls updatePriceFeeds method to update the prices.\n @dev Reverts if update is not needed or the transferred fee is not sufficient or the updateData is invalid.\n @param updateData Array of price update data.\n @param priceIds Array of price ids.\n @param publishTimes Array of publishTimes. `publishTimes[i]` corresponds to known `publishTime` of `priceIds[i]`"},"functionSelector":"b9256d28","id":66,"implemented":false,"kind":"function","modifiers":[],"name":"updatePriceFeedsIfNecessary","nameLocation":"5351:27:0","nodeType":"FunctionDefinition","parameters":{"id":64,"nodeType":"ParameterList","parameters":[{"constant":false,"id":57,"mutability":"mutable","name":"updateData","nameLocation":"5405:10:0","nodeType":"VariableDeclaration","scope":66,"src":"5388:27:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":55,"name":"bytes","nodeType":"ElementaryTypeName","src":"5388:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":56,"nodeType":"ArrayTypeName","src":"5388:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":60,"mutability":"mutable","name":"priceIds","nameLocation":"5444:8:0","nodeType":"VariableDeclaration","scope":66,"src":"5425:27:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":58,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5425:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":59,"nodeType":"ArrayTypeName","src":"5425:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":63,"mutability":"mutable","name":"publishTimes","nameLocation":"5480:12:0","nodeType":"VariableDeclaration","scope":66,"src":"5462:30:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint64_$dyn_calldata_ptr","typeString":"uint64[]"},"typeName":{"baseType":{"id":61,"name":"uint64","nodeType":"ElementaryTypeName","src":"5462:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":62,"nodeType":"ArrayTypeName","src":"5462:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint64_$dyn_storage_ptr","typeString":"uint64[]"}},"visibility":"internal"}],"src":"5378:120:0"},"returnParameters":{"id":65,"nodeType":"ParameterList","parameters":[],"src":"5515:0:0"},"scope":162,"src":"5342:174:0","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":67,"nodeType":"StructuredDocumentation","src":"5522:178:0","text":"@notice Returns the required fee to update an array of price updates.\n @param updateData Array of price update data.\n @return feeAmount The required fee in Wei."},"functionSelector":"d47eed45","id":75,"implemented":false,"kind":"function","modifiers":[],"name":"getUpdateFee","nameLocation":"5714:12:0","nodeType":"FunctionDefinition","parameters":{"id":71,"nodeType":"ParameterList","parameters":[{"constant":false,"id":70,"mutability":"mutable","name":"updateData","nameLocation":"5753:10:0","nodeType":"VariableDeclaration","scope":75,"src":"5736:27:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":68,"name":"bytes","nodeType":"ElementaryTypeName","src":"5736:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":69,"nodeType":"ArrayTypeName","src":"5736:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"5726:43:0"},"returnParameters":{"id":74,"nodeType":"ParameterList","parameters":[{"constant":false,"id":73,"mutability":"mutable","name":"feeAmount","nameLocation":"5798:9:0","nodeType":"VariableDeclaration","scope":75,"src":"5793:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":72,"name":"uint","nodeType":"ElementaryTypeName","src":"5793:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5792:16:0"},"scope":162,"src":"5705:104:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":76,"nodeType":"StructuredDocumentation","src":"5815:165:0","text":"@notice Returns the required fee to update a TWAP price.\n @param updateData Array of price update data.\n @return feeAmount The required fee in Wei."},"functionSelector":"5f674e35","id":84,"implemented":false,"kind":"function","modifiers":[],"name":"getTwapUpdateFee","nameLocation":"5994:16:0","nodeType":"FunctionDefinition","parameters":{"id":80,"nodeType":"ParameterList","parameters":[{"constant":false,"id":79,"mutability":"mutable","name":"updateData","nameLocation":"6037:10:0","nodeType":"VariableDeclaration","scope":84,"src":"6020:27:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":77,"name":"bytes","nodeType":"ElementaryTypeName","src":"6020:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":78,"nodeType":"ArrayTypeName","src":"6020:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"6010:43:0"},"returnParameters":{"id":83,"nodeType":"ParameterList","parameters":[{"constant":false,"id":82,"mutability":"mutable","name":"feeAmount","nameLocation":"6082:9:0","nodeType":"VariableDeclaration","scope":84,"src":"6077:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":81,"name":"uint","nodeType":"ElementaryTypeName","src":"6077:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6076:16:0"},"scope":162,"src":"5985:108:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":85,"nodeType":"StructuredDocumentation","src":"6099:1213:0","text":"@notice Parse `updateData` and return price feeds of the given `priceIds` if they are all published\n within `minPublishTime` and `maxPublishTime`.\n You can use this method if you want to use a Pyth price at a fixed time and not the most recent price;\n otherwise, please consider using `updatePriceFeeds`. This method may store the price updates on-chain, if they\n are more recent than the current stored prices.\n This method requires the caller to pay a fee in wei; the required fee can be computed by calling\n `getUpdateFee` with the length of the `updateData` array.\n @dev Reverts if the transferred fee is not sufficient or the updateData is invalid or there is\n no update for any of the given `priceIds` within the given time range.\n @param updateData Array of price update data.\n @param priceIds Array of price ids.\n @param minPublishTime minimum acceptable publishTime for the given `priceIds`.\n @param maxPublishTime maximum acceptable publishTime for the given `priceIds`.\n @return priceFeeds Array of the price feeds corresponding to the given `priceIds` (with the same order)."},"functionSelector":"4716e9c5","id":102,"implemented":false,"kind":"function","modifiers":[],"name":"parsePriceFeedUpdates","nameLocation":"7326:21:0","nodeType":"FunctionDefinition","parameters":{"id":96,"nodeType":"ParameterList","parameters":[{"constant":false,"id":88,"mutability":"mutable","name":"updateData","nameLocation":"7374:10:0","nodeType":"VariableDeclaration","scope":102,"src":"7357:27:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":86,"name":"bytes","nodeType":"ElementaryTypeName","src":"7357:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":87,"nodeType":"ArrayTypeName","src":"7357:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":91,"mutability":"mutable","name":"priceIds","nameLocation":"7413:8:0","nodeType":"VariableDeclaration","scope":102,"src":"7394:27:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":89,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7394:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":90,"nodeType":"ArrayTypeName","src":"7394:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":93,"mutability":"mutable","name":"minPublishTime","nameLocation":"7438:14:0","nodeType":"VariableDeclaration","scope":102,"src":"7431:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":92,"name":"uint64","nodeType":"ElementaryTypeName","src":"7431:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":95,"mutability":"mutable","name":"maxPublishTime","nameLocation":"7469:14:0","nodeType":"VariableDeclaration","scope":102,"src":"7462:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":94,"name":"uint64","nodeType":"ElementaryTypeName","src":"7462:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"7347:142:0"},"returnParameters":{"id":101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":100,"mutability":"mutable","name":"priceFeeds","nameLocation":"7547:10:0","nodeType":"VariableDeclaration","scope":102,"src":"7516:41:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PriceFeed_$212_memory_ptr_$dyn_memory_ptr","typeString":"struct PythStructs.PriceFeed[]"},"typeName":{"baseType":{"id":98,"nodeType":"UserDefinedTypeName","pathNode":{"id":97,"name":"PythStructs.PriceFeed","nameLocations":["7516:11:0","7528:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":212,"src":"7516:21:0"},"referencedDeclaration":212,"src":"7516:21:0","typeDescriptions":{"typeIdentifier":"t_struct$_PriceFeed_$212_storage_ptr","typeString":"struct PythStructs.PriceFeed"}},"id":99,"nodeType":"ArrayTypeName","src":"7516:23:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PriceFeed_$212_storage_$dyn_storage_ptr","typeString":"struct PythStructs.PriceFeed[]"}},"visibility":"internal"}],"src":"7515:43:0"},"scope":162,"src":"7317:242:0","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":103,"nodeType":"StructuredDocumentation","src":"7565:1495:0","text":"@notice Parse `updateData` and return price feeds of the given `priceIds` if they are all published\n within `minPublishTime` and `maxPublishTime,` but choose to store price updates if `storeUpdatesIfFresh`.\n You can use this method if you want to use a Pyth price at a fixed time and not the most recent price;\n otherwise, please consider using `updatePriceFeeds`. This method may store the price updates on-chain, if they\n are more recent than the current stored prices.\n This method requires the caller to pay a fee in wei; the required fee can be computed by calling\n `getUpdateFee` with the length of the `updateData` array.\n This method will eventually allow the caller to determine whether parsed price feeds should update\n the stored values as well.\n @dev Reverts if the transferred fee is not sufficient or the updateData is invalid or there is\n no update for any of the given `priceIds` within the given time range.\n @param updateData Array of price update data.\n @param priceIds Array of price ids.\n @param minAllowedPublishTime minimum acceptable publishTime for the given `priceIds`.\n @param maxAllowedPublishTime maximum acceptable publishTime for the given `priceIds`.\n @param storeUpdatesIfFresh flag for the parse function to\n @return priceFeeds Array of the price feeds corresponding to the given `priceIds` (with the same order)."},"functionSelector":"3a229d18","id":129,"implemented":false,"kind":"function","modifiers":[],"name":"parsePriceFeedUpdatesWithConfig","nameLocation":"9074:31:0","nodeType":"FunctionDefinition","parameters":{"id":120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":106,"mutability":"mutable","name":"updateData","nameLocation":"9132:10:0","nodeType":"VariableDeclaration","scope":129,"src":"9115:27:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":104,"name":"bytes","nodeType":"ElementaryTypeName","src":"9115:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":105,"nodeType":"ArrayTypeName","src":"9115:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":109,"mutability":"mutable","name":"priceIds","nameLocation":"9171:8:0","nodeType":"VariableDeclaration","scope":129,"src":"9152:27:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":107,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9152:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":108,"nodeType":"ArrayTypeName","src":"9152:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":111,"mutability":"mutable","name":"minAllowedPublishTime","nameLocation":"9196:21:0","nodeType":"VariableDeclaration","scope":129,"src":"9189:28:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":110,"name":"uint64","nodeType":"ElementaryTypeName","src":"9189:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":113,"mutability":"mutable","name":"maxAllowedPublishTime","nameLocation":"9234:21:0","nodeType":"VariableDeclaration","scope":129,"src":"9227:28:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":112,"name":"uint64","nodeType":"ElementaryTypeName","src":"9227:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":115,"mutability":"mutable","name":"checkUniqueness","nameLocation":"9270:15:0","nodeType":"VariableDeclaration","scope":129,"src":"9265:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":114,"name":"bool","nodeType":"ElementaryTypeName","src":"9265:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":117,"mutability":"mutable","name":"checkUpdateDataIsMinimal","nameLocation":"9300:24:0","nodeType":"VariableDeclaration","scope":129,"src":"9295:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":116,"name":"bool","nodeType":"ElementaryTypeName","src":"9295:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":119,"mutability":"mutable","name":"storeUpdatesIfFresh","nameLocation":"9339:19:0","nodeType":"VariableDeclaration","scope":129,"src":"9334:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":118,"name":"bool","nodeType":"ElementaryTypeName","src":"9334:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9105:259:0"},"returnParameters":{"id":128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":124,"mutability":"mutable","name":"priceFeeds","nameLocation":"9459:10:0","nodeType":"VariableDeclaration","scope":129,"src":"9428:41:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PriceFeed_$212_memory_ptr_$dyn_memory_ptr","typeString":"struct PythStructs.PriceFeed[]"},"typeName":{"baseType":{"id":122,"nodeType":"UserDefinedTypeName","pathNode":{"id":121,"name":"PythStructs.PriceFeed","nameLocations":["9428:11:0","9440:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":212,"src":"9428:21:0"},"referencedDeclaration":212,"src":"9428:21:0","typeDescriptions":{"typeIdentifier":"t_struct$_PriceFeed_$212_storage_ptr","typeString":"struct PythStructs.PriceFeed"}},"id":123,"nodeType":"ArrayTypeName","src":"9428:23:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PriceFeed_$212_storage_$dyn_storage_ptr","typeString":"struct PythStructs.PriceFeed[]"}},"visibility":"internal"},{"constant":false,"id":127,"mutability":"mutable","name":"slots","nameLocation":"9499:5:0","nodeType":"VariableDeclaration","scope":129,"src":"9483:21:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint64_$dyn_memory_ptr","typeString":"uint64[]"},"typeName":{"baseType":{"id":125,"name":"uint64","nodeType":"ElementaryTypeName","src":"9483:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":126,"nodeType":"ArrayTypeName","src":"9483:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint64_$dyn_storage_ptr","typeString":"uint64[]"}},"visibility":"internal"}],"src":"9414:100:0"},"scope":162,"src":"9065:450:0","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":130,"nodeType":"StructuredDocumentation","src":"9521:1194:0","text":"@notice Parse time-weighted average price (TWAP) from two consecutive price updates for the given `priceIds`.\n This method calculates TWAP between two data points by processing the difference in cumulative price values\n divided by the time period. It requires exactly two updates that contain valid price information\n for all the requested price IDs.\n This method requires the caller to pay a fee in wei; the required fee can be computed by calling\n `getUpdateFee` with the updateData array.\n @dev Reverts if:\n - The transferred fee is not sufficient\n - The updateData is invalid or malformed\n - The updateData array does not contain exactly 2 updates\n - There is no update for any of the given `priceIds`\n - The time ordering between data points is invalid (start time must be before end time)\n @param updateData Array containing exactly two price updates (start and end points for TWAP calculation)\n @param priceIds Array of price ids to calculate TWAP for\n @return twapPriceFeeds Array of TWAP price feeds corresponding to the given `priceIds` (with the same order)"},"functionSelector":"eb942158","id":143,"implemented":false,"kind":"function","modifiers":[],"name":"parseTwapPriceFeedUpdates","nameLocation":"10729:25:0","nodeType":"FunctionDefinition","parameters":{"id":137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":133,"mutability":"mutable","name":"updateData","nameLocation":"10781:10:0","nodeType":"VariableDeclaration","scope":143,"src":"10764:27:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":131,"name":"bytes","nodeType":"ElementaryTypeName","src":"10764:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":132,"nodeType":"ArrayTypeName","src":"10764:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":136,"mutability":"mutable","name":"priceIds","nameLocation":"10820:8:0","nodeType":"VariableDeclaration","scope":143,"src":"10801:27:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":134,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10801:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":135,"nodeType":"ArrayTypeName","src":"10801:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"10754:80:0"},"returnParameters":{"id":142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":141,"mutability":"mutable","name":"twapPriceFeeds","nameLocation":"10920:14:0","nodeType":"VariableDeclaration","scope":143,"src":"10885:49:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TwapPriceFeed_$224_memory_ptr_$dyn_memory_ptr","typeString":"struct PythStructs.TwapPriceFeed[]"},"typeName":{"baseType":{"id":139,"nodeType":"UserDefinedTypeName","pathNode":{"id":138,"name":"PythStructs.TwapPriceFeed","nameLocations":["10885:11:0","10897:13:0"],"nodeType":"IdentifierPath","referencedDeclaration":224,"src":"10885:25:0"},"referencedDeclaration":224,"src":"10885:25:0","typeDescriptions":{"typeIdentifier":"t_struct$_TwapPriceFeed_$224_storage_ptr","typeString":"struct PythStructs.TwapPriceFeed"}},"id":140,"nodeType":"ArrayTypeName","src":"10885:27:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TwapPriceFeed_$224_storage_$dyn_storage_ptr","typeString":"struct PythStructs.TwapPriceFeed[]"}},"visibility":"internal"}],"src":"10884:51:0"},"scope":162,"src":"10720:216:0","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":144,"nodeType":"StructuredDocumentation","src":"10942:972:0","text":"@notice Similar to `parsePriceFeedUpdates` but ensures the updates returned are\n the first updates published in minPublishTime. That is, if there are multiple updates for a given timestamp,\n this method will return the first update. This method may store the price updates on-chain, if they\n are more recent than the current stored prices.\n @dev Reverts if the transferred fee is not sufficient or the updateData is invalid or there is\n no update for any of the given `priceIds` within the given time range and uniqueness condition.\n @param updateData Array of price update data.\n @param priceIds Array of price ids.\n @param minPublishTime minimum acceptable publishTime for the given `priceIds`.\n @param maxPublishTime maximum acceptable publishTime for the given `priceIds`.\n @return priceFeeds Array of the price feeds corresponding to the given `priceIds` (with the same order)."},"functionSelector":"accca7f9","id":161,"implemented":false,"kind":"function","modifiers":[],"name":"parsePriceFeedUpdatesUnique","nameLocation":"11928:27:0","nodeType":"FunctionDefinition","parameters":{"id":155,"nodeType":"ParameterList","parameters":[{"constant":false,"id":147,"mutability":"mutable","name":"updateData","nameLocation":"11982:10:0","nodeType":"VariableDeclaration","scope":161,"src":"11965:27:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":145,"name":"bytes","nodeType":"ElementaryTypeName","src":"11965:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":146,"nodeType":"ArrayTypeName","src":"11965:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":150,"mutability":"mutable","name":"priceIds","nameLocation":"12021:8:0","nodeType":"VariableDeclaration","scope":161,"src":"12002:27:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":148,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12002:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":149,"nodeType":"ArrayTypeName","src":"12002:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":152,"mutability":"mutable","name":"minPublishTime","nameLocation":"12046:14:0","nodeType":"VariableDeclaration","scope":161,"src":"12039:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":151,"name":"uint64","nodeType":"ElementaryTypeName","src":"12039:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":154,"mutability":"mutable","name":"maxPublishTime","nameLocation":"12077:14:0","nodeType":"VariableDeclaration","scope":161,"src":"12070:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":153,"name":"uint64","nodeType":"ElementaryTypeName","src":"12070:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"11955:142:0"},"returnParameters":{"id":160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":159,"mutability":"mutable","name":"priceFeeds","nameLocation":"12155:10:0","nodeType":"VariableDeclaration","scope":161,"src":"12124:41:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PriceFeed_$212_memory_ptr_$dyn_memory_ptr","typeString":"struct PythStructs.PriceFeed[]"},"typeName":{"baseType":{"id":157,"nodeType":"UserDefinedTypeName","pathNode":{"id":156,"name":"PythStructs.PriceFeed","nameLocations":["12124:11:0","12136:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":212,"src":"12124:21:0"},"referencedDeclaration":212,"src":"12124:21:0","typeDescriptions":{"typeIdentifier":"t_struct$_PriceFeed_$212_storage_ptr","typeString":"struct PythStructs.PriceFeed"}},"id":158,"nodeType":"ArrayTypeName","src":"12124:23:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PriceFeed_$212_storage_$dyn_storage_ptr","typeString":"struct PythStructs.PriceFeed[]"}},"visibility":"internal"}],"src":"12123:43:0"},"scope":162,"src":"11919:248:0","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":163,"src":"378:11791:0","usedErrors":[]}],"src":"39:12131:0"},"id":0},"@pythnetwork/pyth-sdk-solidity/IPythEvents.sol":{"ast":{"absolutePath":"@pythnetwork/pyth-sdk-solidity/IPythEvents.sol","exportedSymbols":{"IPythEvents":[192]},"id":193,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":164,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"39:23:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IPythEvents","contractDependencies":[],"contractKind":"interface","documentation":{"id":165,"nodeType":"StructuredDocumentation","src":"64:170:1","text":"@title IPythEvents contains the events that Pyth contract emits.\n @dev This interface can be used for listening to the updates for off-chain and testing purposes."},"fullyImplemented":true,"id":192,"linearizedBaseContracts":[192],"name":"IPythEvents","nameLocation":"244:11:1","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":166,"nodeType":"StructuredDocumentation","src":"262:305:1","text":"@dev Emitted when the price feed with `id` has received a fresh update.\n @param id The Pyth Price Feed ID.\n @param publishTime Publish time of the given price update.\n @param price Price of the given price update.\n @param conf Confidence interval of the given price update."},"eventSelector":"d06a6b7f4918494b3719217d1802786c1f5112a6c1d88fe2cfec00b4584f6aec","id":176,"name":"PriceFeedUpdate","nameLocation":"578:15:1","nodeType":"EventDefinition","parameters":{"id":175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":168,"indexed":true,"mutability":"mutable","name":"id","nameLocation":"619:2:1","nodeType":"VariableDeclaration","scope":176,"src":"603:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":167,"name":"bytes32","nodeType":"ElementaryTypeName","src":"603:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":170,"indexed":false,"mutability":"mutable","name":"publishTime","nameLocation":"638:11:1","nodeType":"VariableDeclaration","scope":176,"src":"631:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":169,"name":"uint64","nodeType":"ElementaryTypeName","src":"631:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":172,"indexed":false,"mutability":"mutable","name":"price","nameLocation":"665:5:1","nodeType":"VariableDeclaration","scope":176,"src":"659:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":171,"name":"int64","nodeType":"ElementaryTypeName","src":"659:5:1","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":174,"indexed":false,"mutability":"mutable","name":"conf","nameLocation":"687:4:1","nodeType":"VariableDeclaration","scope":176,"src":"680:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":173,"name":"uint64","nodeType":"ElementaryTypeName","src":"680:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"593:104:1"},"src":"572:126:1"},{"anonymous":false,"documentation":{"id":177,"nodeType":"StructuredDocumentation","src":"704:376:1","text":"@dev Emitted when the TWAP price feed with `id` has received a fresh update.\n @param id The Pyth Price Feed ID.\n @param startTime Start time of the TWAP.\n @param endTime End time of the TWAP.\n @param twapPrice Price of the TWAP.\n @param twapConf Confidence interval of the TWAP.\n @param downSlotsRatio Down slot ratio of the TWAP."},"eventSelector":"d8b7774079faf4ab389d4e48b46d54e2bb8b66dd0de0d718f61730a9f3c92977","id":191,"name":"TwapPriceFeedUpdate","nameLocation":"1091:19:1","nodeType":"EventDefinition","parameters":{"id":190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":179,"indexed":true,"mutability":"mutable","name":"id","nameLocation":"1136:2:1","nodeType":"VariableDeclaration","scope":191,"src":"1120:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":178,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1120:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":181,"indexed":false,"mutability":"mutable","name":"startTime","nameLocation":"1155:9:1","nodeType":"VariableDeclaration","scope":191,"src":"1148:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":180,"name":"uint64","nodeType":"ElementaryTypeName","src":"1148:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":183,"indexed":false,"mutability":"mutable","name":"endTime","nameLocation":"1181:7:1","nodeType":"VariableDeclaration","scope":191,"src":"1174:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":182,"name":"uint64","nodeType":"ElementaryTypeName","src":"1174:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":185,"indexed":false,"mutability":"mutable","name":"twapPrice","nameLocation":"1204:9:1","nodeType":"VariableDeclaration","scope":191,"src":"1198:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":184,"name":"int64","nodeType":"ElementaryTypeName","src":"1198:5:1","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":187,"indexed":false,"mutability":"mutable","name":"twapConf","nameLocation":"1230:8:1","nodeType":"VariableDeclaration","scope":191,"src":"1223:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":186,"name":"uint64","nodeType":"ElementaryTypeName","src":"1223:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":189,"indexed":false,"mutability":"mutable","name":"downSlotsRatio","nameLocation":"1255:14:1","nodeType":"VariableDeclaration","scope":191,"src":"1248:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":188,"name":"uint32","nodeType":"ElementaryTypeName","src":"1248:6:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"1110:165:1"},"src":"1085:191:1"}],"scope":193,"src":"234:1044:1","usedErrors":[]}],"src":"39:1240:1"},"id":1},"@pythnetwork/pyth-sdk-solidity/PythStructs.sol":{"ast":{"absolutePath":"@pythnetwork/pyth-sdk-solidity/PythStructs.sol","exportedSymbols":{"PythStructs":[240]},"id":241,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":194,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"39:23:2"},{"abstract":false,"baseContracts":[],"canonicalName":"PythStructs","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":240,"linearizedBaseContracts":[240],"name":"PythStructs","nameLocation":"73:11:2","nodeType":"ContractDefinition","nodes":[{"canonicalName":"PythStructs.Price","id":203,"members":[{"constant":false,"id":196,"mutability":"mutable","name":"price","nameLocation":"647:5:2","nodeType":"VariableDeclaration","scope":203,"src":"641:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":195,"name":"int64","nodeType":"ElementaryTypeName","src":"641:5:2","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":198,"mutability":"mutable","name":"conf","nameLocation":"717:4:2","nodeType":"VariableDeclaration","scope":203,"src":"710:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":197,"name":"uint64","nodeType":"ElementaryTypeName","src":"710:6:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":200,"mutability":"mutable","name":"expo","nameLocation":"763:4:2","nodeType":"VariableDeclaration","scope":203,"src":"757:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":199,"name":"int32","nodeType":"ElementaryTypeName","src":"757:5:2","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"},{"constant":false,"id":202,"mutability":"mutable","name":"publishTime","nameLocation":"848:11:2","nodeType":"VariableDeclaration","scope":203,"src":"843:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":201,"name":"uint","nodeType":"ElementaryTypeName","src":"843:4:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Price","nameLocation":"608:5:2","nodeType":"StructDefinition","scope":240,"src":"601:265:2","visibility":"public"},{"canonicalName":"PythStructs.PriceFeed","id":212,"members":[{"constant":false,"id":205,"mutability":"mutable","name":"id","nameLocation":"1013:2:2","nodeType":"VariableDeclaration","scope":212,"src":"1005:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":204,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1005:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":208,"mutability":"mutable","name":"price","nameLocation":"1065:5:2","nodeType":"VariableDeclaration","scope":212,"src":"1059:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$203_storage_ptr","typeString":"struct PythStructs.Price"},"typeName":{"id":207,"nodeType":"UserDefinedTypeName","pathNode":{"id":206,"name":"Price","nameLocations":["1059:5:2"],"nodeType":"IdentifierPath","referencedDeclaration":203,"src":"1059:5:2"},"referencedDeclaration":203,"src":"1059:5:2","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$203_storage_ptr","typeString":"struct PythStructs.Price"}},"visibility":"internal"},{"constant":false,"id":211,"mutability":"mutable","name":"emaPrice","nameLocation":"1158:8:2","nodeType":"VariableDeclaration","scope":212,"src":"1152:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$203_storage_ptr","typeString":"struct PythStructs.Price"},"typeName":{"id":210,"nodeType":"UserDefinedTypeName","pathNode":{"id":209,"name":"Price","nameLocations":["1152:5:2"],"nodeType":"IdentifierPath","referencedDeclaration":203,"src":"1152:5:2"},"referencedDeclaration":203,"src":"1152:5:2","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$203_storage_ptr","typeString":"struct PythStructs.Price"}},"visibility":"internal"}],"name":"PriceFeed","nameLocation":"960:9:2","nodeType":"StructDefinition","scope":240,"src":"953:220:2","visibility":"public"},{"canonicalName":"PythStructs.TwapPriceFeed","id":224,"members":[{"constant":false,"id":214,"mutability":"mutable","name":"id","nameLocation":"1243:2:2","nodeType":"VariableDeclaration","scope":224,"src":"1235:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":213,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1235:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":216,"mutability":"mutable","name":"startTime","nameLocation":"1296:9:2","nodeType":"VariableDeclaration","scope":224,"src":"1289:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":215,"name":"uint64","nodeType":"ElementaryTypeName","src":"1289:6:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":218,"mutability":"mutable","name":"endTime","nameLocation":"1354:7:2","nodeType":"VariableDeclaration","scope":224,"src":"1347:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":217,"name":"uint64","nodeType":"ElementaryTypeName","src":"1347:6:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":221,"mutability":"mutable","name":"twap","nameLocation":"1399:4:2","nodeType":"VariableDeclaration","scope":224,"src":"1393:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$203_storage_ptr","typeString":"struct PythStructs.Price"},"typeName":{"id":220,"nodeType":"UserDefinedTypeName","pathNode":{"id":219,"name":"Price","nameLocations":["1393:5:2"],"nodeType":"IdentifierPath","referencedDeclaration":203,"src":"1393:5:2"},"referencedDeclaration":203,"src":"1393:5:2","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$203_storage_ptr","typeString":"struct PythStructs.Price"}},"visibility":"internal"},{"constant":false,"id":223,"mutability":"mutable","name":"downSlotsRatio","nameLocation":"2034:14:2","nodeType":"VariableDeclaration","scope":224,"src":"2027:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":222,"name":"uint32","nodeType":"ElementaryTypeName","src":"2027:6:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"name":"TwapPriceFeed","nameLocation":"1186:13:2","nodeType":"StructDefinition","scope":240,"src":"1179:876:2","visibility":"public"},{"canonicalName":"PythStructs.TwapPriceInfo","id":239,"members":[{"constant":false,"id":226,"mutability":"mutable","name":"cumulativePrice","nameLocation":"2190:15:2","nodeType":"VariableDeclaration","scope":239,"src":"2183:22:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":225,"name":"int128","nodeType":"ElementaryTypeName","src":"2183:6:2","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"},{"constant":false,"id":228,"mutability":"mutable","name":"cumulativeConf","nameLocation":"2223:14:2","nodeType":"VariableDeclaration","scope":239,"src":"2215:22:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":227,"name":"uint128","nodeType":"ElementaryTypeName","src":"2215:7:2","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":230,"mutability":"mutable","name":"numDownSlots","nameLocation":"2272:12:2","nodeType":"VariableDeclaration","scope":239,"src":"2265:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":229,"name":"uint64","nodeType":"ElementaryTypeName","src":"2265:6:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":232,"mutability":"mutable","name":"publishSlot","nameLocation":"2301:11:2","nodeType":"VariableDeclaration","scope":239,"src":"2294:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":231,"name":"uint64","nodeType":"ElementaryTypeName","src":"2294:6:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":234,"mutability":"mutable","name":"publishTime","nameLocation":"2329:11:2","nodeType":"VariableDeclaration","scope":239,"src":"2322:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":233,"name":"uint64","nodeType":"ElementaryTypeName","src":"2322:6:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":236,"mutability":"mutable","name":"prevPublishTime","nameLocation":"2357:15:2","nodeType":"VariableDeclaration","scope":239,"src":"2350:22:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":235,"name":"uint64","nodeType":"ElementaryTypeName","src":"2350:6:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":238,"mutability":"mutable","name":"expo","nameLocation":"2406:4:2","nodeType":"VariableDeclaration","scope":239,"src":"2400:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":237,"name":"int32","nodeType":"ElementaryTypeName","src":"2400:5:2","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"name":"TwapPriceInfo","nameLocation":"2141:13:2","nodeType":"StructDefinition","scope":240,"src":"2134:283:2","visibility":"public"}],"scope":241,"src":"64:2355:2","usedErrors":[]}],"src":"39:2381:2"},"id":2},"contracts/BotDetector.sol":{"ast":{"absolutePath":"contracts/BotDetector.sol","exportedSymbols":{"BotDetectorWithPyth":[1590],"IPyth":[162],"IPythEvents":[192],"PythStructs":[240]},"id":1591,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":242,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"33:23:3"},{"absolutePath":"@pythnetwork/pyth-sdk-solidity/IPyth.sol","file":"@pythnetwork/pyth-sdk-solidity/IPyth.sol","id":243,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1591,"sourceUnit":163,"src":"60:50:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"@pythnetwork/pyth-sdk-solidity/PythStructs.sol","file":"@pythnetwork/pyth-sdk-solidity/PythStructs.sol","id":244,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":1591,"sourceUnit":241,"src":"112:56:3","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"BotDetectorWithPyth","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":1590,"linearizedBaseContracts":[1590],"name":"BotDetectorWithPyth","nameLocation":"181:19:3","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"f98d06f0","id":247,"mutability":"mutable","name":"pyth","nameLocation":"221:4:3","nodeType":"VariableDeclaration","scope":1590,"src":"208:17:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IPyth_$162","typeString":"contract IPyth"},"typeName":{"id":246,"nodeType":"UserDefinedTypeName","pathNode":{"id":245,"name":"IPyth","nameLocations":["208:5:3"],"nodeType":"IdentifierPath","referencedDeclaration":162,"src":"208:5:3"},"referencedDeclaration":162,"src":"208:5:3","typeDescriptions":{"typeIdentifier":"t_contract$_IPyth_$162","typeString":"contract IPyth"}},"visibility":"public"},{"constant":false,"functionSelector":"f851a440","id":249,"mutability":"mutable","name":"admin","nameLocation":"247:5:3","nodeType":"VariableDeclaration","scope":1590,"src":"232:20:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":248,"name":"address","nodeType":"ElementaryTypeName","src":"232:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"c35fc524","id":251,"mutability":"mutable","name":"botAnalyzer","nameLocation":"274:11:3","nodeType":"VariableDeclaration","scope":1590,"src":"259:26:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":250,"name":"address","nodeType":"ElementaryTypeName","src":"259:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"canonicalName":"BotDetectorWithPyth.BotCategory","id":255,"members":[{"id":252,"name":"HUMAN","nameLocation":"345:5:3","nodeType":"EnumValue","src":"345:5:3"},{"id":253,"name":"GOOD_BOT","nameLocation":"375:8:3","nodeType":"EnumValue","src":"375:8:3"},{"id":254,"name":"BAD_BOT","nameLocation":"436:7:3","nodeType":"EnumValue","src":"436:7:3"}],"name":"BotCategory","nameLocation":"322:11:3","nodeType":"EnumDefinition","src":"317:176:3"},{"canonicalName":"BotDetectorWithPyth.TradeRecord","id":268,"members":[{"constant":false,"id":257,"mutability":"mutable","name":"user","nameLocation":"539:4:3","nodeType":"VariableDeclaration","scope":268,"src":"531:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":256,"name":"address","nodeType":"ElementaryTypeName","src":"531:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":259,"mutability":"mutable","name":"timestamp","nameLocation":"562:9:3","nodeType":"VariableDeclaration","scope":268,"src":"554:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":258,"name":"uint256","nodeType":"ElementaryTypeName","src":"554:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":261,"mutability":"mutable","name":"amount","nameLocation":"590:6:3","nodeType":"VariableDeclaration","scope":268,"src":"582:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":260,"name":"uint256","nodeType":"ElementaryTypeName","src":"582:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":263,"mutability":"mutable","name":"blockNumber","nameLocation":"615:11:3","nodeType":"VariableDeclaration","scope":268,"src":"607:19:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":262,"name":"uint256","nodeType":"ElementaryTypeName","src":"607:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":265,"mutability":"mutable","name":"btcPriceAtTrade","nameLocation":"643:15:3","nodeType":"VariableDeclaration","scope":268,"src":"637:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":264,"name":"int64","nodeType":"ElementaryTypeName","src":"637:5:3","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":267,"mutability":"mutable","name":"pricePublishTime","nameLocation":"676:16:3","nodeType":"VariableDeclaration","scope":268,"src":"669:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":266,"name":"uint64","nodeType":"ElementaryTypeName","src":"669:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"name":"TradeRecord","nameLocation":"508:11:3","nodeType":"StructDefinition","scope":1590,"src":"501:199:3","visibility":"public"},{"canonicalName":"BotDetectorWithPyth.BotEvidence","id":288,"members":[{"constant":false,"id":270,"mutability":"mutable","name":"user","nameLocation":"746:4:3","nodeType":"VariableDeclaration","scope":288,"src":"738:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":269,"name":"address","nodeType":"ElementaryTypeName","src":"738:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":272,"mutability":"mutable","name":"tradeTimestamp","nameLocation":"769:14:3","nodeType":"VariableDeclaration","scope":288,"src":"761:22:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":271,"name":"uint256","nodeType":"ElementaryTypeName","src":"761:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":274,"mutability":"mutable","name":"pricePublishTime","nameLocation":"802:16:3","nodeType":"VariableDeclaration","scope":288,"src":"794:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":273,"name":"uint256","nodeType":"ElementaryTypeName","src":"794:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":276,"mutability":"mutable","name":"priceAtTrade","nameLocation":"835:12:3","nodeType":"VariableDeclaration","scope":288,"src":"829:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":275,"name":"int64","nodeType":"ElementaryTypeName","src":"829:5:3","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":278,"mutability":"mutable","name":"reactionTimeMs","nameLocation":"866:14:3","nodeType":"VariableDeclaration","scope":288,"src":"858:22:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":277,"name":"uint256","nodeType":"ElementaryTypeName","src":"858:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":280,"mutability":"mutable","name":"botScore","nameLocation":"899:8:3","nodeType":"VariableDeclaration","scope":288,"src":"891:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":279,"name":"uint256","nodeType":"ElementaryTypeName","src":"891:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":283,"mutability":"mutable","name":"category","nameLocation":"930:8:3","nodeType":"VariableDeclaration","scope":288,"src":"918:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_BotCategory_$255","typeString":"enum BotDetectorWithPyth.BotCategory"},"typeName":{"id":282,"nodeType":"UserDefinedTypeName","pathNode":{"id":281,"name":"BotCategory","nameLocations":["918:11:3"],"nodeType":"IdentifierPath","referencedDeclaration":255,"src":"918:11:3"},"referencedDeclaration":255,"src":"918:11:3","typeDescriptions":{"typeIdentifier":"t_enum$_BotCategory_$255","typeString":"enum BotDetectorWithPyth.BotCategory"}},"visibility":"internal"},{"constant":false,"id":285,"mutability":"mutable","name":"botType","nameLocation":"956:7:3","nodeType":"VariableDeclaration","scope":288,"src":"949:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":284,"name":"string","nodeType":"ElementaryTypeName","src":"949:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":287,"mutability":"mutable","name":"liquidityProvided","nameLocation":"1039:17:3","nodeType":"VariableDeclaration","scope":288,"src":"1031:25:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":286,"name":"uint256","nodeType":"ElementaryTypeName","src":"1031:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"BotEvidence","nameLocation":"715:11:3","nodeType":"StructDefinition","scope":1590,"src":"708:356:3","visibility":"public"},{"canonicalName":"BotDetectorWithPyth.BotInfo","id":302,"members":[{"constant":false,"id":290,"mutability":"mutable","name":"isFlagged","nameLocation":"1103:9:3","nodeType":"VariableDeclaration","scope":302,"src":"1098:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":289,"name":"bool","nodeType":"ElementaryTypeName","src":"1098:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":292,"mutability":"mutable","name":"score","nameLocation":"1131:5:3","nodeType":"VariableDeclaration","scope":302,"src":"1123:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":291,"name":"uint256","nodeType":"ElementaryTypeName","src":"1123:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":295,"mutability":"mutable","name":"category","nameLocation":"1159:8:3","nodeType":"VariableDeclaration","scope":302,"src":"1147:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_BotCategory_$255","typeString":"enum BotDetectorWithPyth.BotCategory"},"typeName":{"id":294,"nodeType":"UserDefinedTypeName","pathNode":{"id":293,"name":"BotCategory","nameLocations":["1147:11:3"],"nodeType":"IdentifierPath","referencedDeclaration":255,"src":"1147:11:3"},"referencedDeclaration":255,"src":"1147:11:3","typeDescriptions":{"typeIdentifier":"t_enum$_BotCategory_$255","typeString":"enum BotDetectorWithPyth.BotCategory"}},"visibility":"internal"},{"constant":false,"id":297,"mutability":"mutable","name":"botType","nameLocation":"1185:7:3","nodeType":"VariableDeclaration","scope":302,"src":"1178:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":296,"name":"string","nodeType":"ElementaryTypeName","src":"1178:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":299,"mutability":"mutable","name":"liquidityProvided","nameLocation":"1211:17:3","nodeType":"VariableDeclaration","scope":302,"src":"1203:25:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":298,"name":"uint256","nodeType":"ElementaryTypeName","src":"1203:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":301,"mutability":"mutable","name":"flaggedAt","nameLocation":"1247:9:3","nodeType":"VariableDeclaration","scope":302,"src":"1239:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":300,"name":"uint256","nodeType":"ElementaryTypeName","src":"1239:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"BotInfo","nameLocation":"1079:7:3","nodeType":"StructDefinition","scope":1590,"src":"1072:192:3","visibility":"public"},{"constant":false,"functionSelector":"b1b1ffab","id":308,"mutability":"mutable","name":"userTrades","nameLocation":"1329:10:3","nodeType":"VariableDeclaration","scope":1590,"src":"1288:51:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_TradeRecord_$268_storage_$dyn_storage_$","typeString":"mapping(address => struct BotDetectorWithPyth.TradeRecord[])"},"typeName":{"id":307,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":303,"name":"address","nodeType":"ElementaryTypeName","src":"1296:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1288:33:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_TradeRecord_$268_storage_$dyn_storage_$","typeString":"mapping(address => struct BotDetectorWithPyth.TradeRecord[])"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"baseType":{"id":305,"nodeType":"UserDefinedTypeName","pathNode":{"id":304,"name":"TradeRecord","nameLocations":["1307:11:3"],"nodeType":"IdentifierPath","referencedDeclaration":268,"src":"1307:11:3"},"referencedDeclaration":268,"src":"1307:11:3","typeDescriptions":{"typeIdentifier":"t_struct$_TradeRecord_$268_storage_ptr","typeString":"struct BotDetectorWithPyth.TradeRecord"}},"id":306,"nodeType":"ArrayTypeName","src":"1307:13:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TradeRecord_$268_storage_$dyn_storage_ptr","typeString":"struct BotDetectorWithPyth.TradeRecord[]"}}},"visibility":"public"},{"constant":false,"functionSelector":"20bae1cb","id":313,"mutability":"mutable","name":"botRegistry","nameLocation":"1381:11:3","nodeType":"VariableDeclaration","scope":1590,"src":"1346:46:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_BotInfo_$302_storage_$","typeString":"mapping(address => struct BotDetectorWithPyth.BotInfo)"},"typeName":{"id":312,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":309,"name":"address","nodeType":"ElementaryTypeName","src":"1354:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1346:27:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_BotInfo_$302_storage_$","typeString":"mapping(address => struct BotDetectorWithPyth.BotInfo)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":311,"nodeType":"UserDefinedTypeName","pathNode":{"id":310,"name":"BotInfo","nameLocations":["1365:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":302,"src":"1365:7:3"},"referencedDeclaration":302,"src":"1365:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_BotInfo_$302_storage_ptr","typeString":"struct BotDetectorWithPyth.BotInfo"}}},"visibility":"public"},{"constant":false,"functionSelector":"c32d2a02","id":318,"mutability":"mutable","name":"botEvidenceProof","nameLocation":"1438:16:3","nodeType":"VariableDeclaration","scope":1590,"src":"1399:55:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_BotEvidence_$288_storage_$","typeString":"mapping(address => struct BotDetectorWithPyth.BotEvidence)"},"typeName":{"id":317,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":314,"name":"address","nodeType":"ElementaryTypeName","src":"1407:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1399:31:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_BotEvidence_$288_storage_$","typeString":"mapping(address => struct BotDetectorWithPyth.BotEvidence)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":316,"nodeType":"UserDefinedTypeName","pathNode":{"id":315,"name":"BotEvidence","nameLocations":["1418:11:3"],"nodeType":"IdentifierPath","referencedDeclaration":288,"src":"1418:11:3"},"referencedDeclaration":288,"src":"1418:11:3","typeDescriptions":{"typeIdentifier":"t_struct$_BotEvidence_$288_storage_ptr","typeString":"struct BotDetectorWithPyth.BotEvidence"}}},"visibility":"public"},{"constant":false,"functionSelector":"81d1ae62","id":321,"mutability":"mutable","name":"goodBots","nameLocation":"1528:8:3","nodeType":"VariableDeclaration","scope":1590,"src":"1511:25:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[]"},"typeName":{"baseType":{"id":319,"name":"address","nodeType":"ElementaryTypeName","src":"1511:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":320,"nodeType":"ArrayTypeName","src":"1511:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"public"},{"constant":false,"functionSelector":"eaca6a78","id":324,"mutability":"mutable","name":"badBots","nameLocation":"1560:7:3","nodeType":"VariableDeclaration","scope":1590,"src":"1543:24:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[]"},"typeName":{"baseType":{"id":322,"name":"address","nodeType":"ElementaryTypeName","src":"1543:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":323,"nodeType":"ArrayTypeName","src":"1543:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"public"},{"constant":false,"id":328,"mutability":"mutable","name":"isGoodBot","nameLocation":"1609:9:3","nodeType":"VariableDeclaration","scope":1590,"src":"1576:42:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":327,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":325,"name":"address","nodeType":"ElementaryTypeName","src":"1584:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1576:24:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":326,"name":"bool","nodeType":"ElementaryTypeName","src":"1595:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"private"},{"constant":false,"id":332,"mutability":"mutable","name":"isBadBot","nameLocation":"1658:8:3","nodeType":"VariableDeclaration","scope":1590,"src":"1625:41:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":331,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":329,"name":"address","nodeType":"ElementaryTypeName","src":"1633:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1625:24:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":330,"name":"bool","nodeType":"ElementaryTypeName","src":"1644:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"private"},{"anonymous":false,"eventSelector":"3a41b4a45381e8007eceed209f6413255128c9faf4a51f718825cab30cb89ffb","id":344,"name":"TradeExecuted","nameLocation":"1696:13:3","nodeType":"EventDefinition","parameters":{"id":343,"nodeType":"ParameterList","parameters":[{"constant":false,"id":334,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"1736:4:3","nodeType":"VariableDeclaration","scope":344,"src":"1720:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":333,"name":"address","nodeType":"ElementaryTypeName","src":"1720:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":336,"indexed":false,"mutability":"mutable","name":"timestamp","nameLocation":"1759:9:3","nodeType":"VariableDeclaration","scope":344,"src":"1751:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":335,"name":"uint256","nodeType":"ElementaryTypeName","src":"1751:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":338,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1787:6:3","nodeType":"VariableDeclaration","scope":344,"src":"1779:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":337,"name":"uint256","nodeType":"ElementaryTypeName","src":"1779:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":340,"indexed":false,"mutability":"mutable","name":"blockNumber","nameLocation":"1812:11:3","nodeType":"VariableDeclaration","scope":344,"src":"1804:19:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":339,"name":"uint256","nodeType":"ElementaryTypeName","src":"1804:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":342,"indexed":false,"mutability":"mutable","name":"btcPrice","nameLocation":"1840:8:3","nodeType":"VariableDeclaration","scope":344,"src":"1834:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":341,"name":"int64","nodeType":"ElementaryTypeName","src":"1834:5:3","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"1709:146:3"},"src":"1690:166:3"},{"anonymous":false,"eventSelector":"aef9510f1fea4f9e98d52edc9ed5ecbb70fb93a756262405e9abcaff965d9b19","id":360,"name":"GoodBotFlagged","nameLocation":"1870:14:3","nodeType":"EventDefinition","parameters":{"id":359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":346,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"1911:4:3","nodeType":"VariableDeclaration","scope":360,"src":"1895:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":345,"name":"address","nodeType":"ElementaryTypeName","src":"1895:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":348,"indexed":false,"mutability":"mutable","name":"score","nameLocation":"1934:5:3","nodeType":"VariableDeclaration","scope":360,"src":"1926:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":347,"name":"uint256","nodeType":"ElementaryTypeName","src":"1926:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":350,"indexed":false,"mutability":"mutable","name":"botType","nameLocation":"1957:7:3","nodeType":"VariableDeclaration","scope":360,"src":"1950:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":349,"name":"string","nodeType":"ElementaryTypeName","src":"1950:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":352,"indexed":false,"mutability":"mutable","name":"liquidityProvided","nameLocation":"1983:17:3","nodeType":"VariableDeclaration","scope":360,"src":"1975:25:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":351,"name":"uint256","nodeType":"ElementaryTypeName","src":"1975:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":354,"indexed":false,"mutability":"mutable","name":"reason","nameLocation":"2018:6:3","nodeType":"VariableDeclaration","scope":360,"src":"2011:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":353,"name":"string","nodeType":"ElementaryTypeName","src":"2011:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":356,"indexed":false,"mutability":"mutable","name":"priceUsed","nameLocation":"2041:9:3","nodeType":"VariableDeclaration","scope":360,"src":"2035:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":355,"name":"int64","nodeType":"ElementaryTypeName","src":"2035:5:3","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":358,"indexed":false,"mutability":"mutable","name":"reactionTimeMs","nameLocation":"2069:14:3","nodeType":"VariableDeclaration","scope":360,"src":"2061:22:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":357,"name":"uint256","nodeType":"ElementaryTypeName","src":"2061:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1884:206:3"},"src":"1864:227:3"},{"anonymous":false,"eventSelector":"92971f04373cb63faf3272641a4532c832ab490e5cba6d98cb3805e2e0530e08","id":374,"name":"BadBotFlagged","nameLocation":"2105:13:3","nodeType":"EventDefinition","parameters":{"id":373,"nodeType":"ParameterList","parameters":[{"constant":false,"id":362,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"2145:4:3","nodeType":"VariableDeclaration","scope":374,"src":"2129:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":361,"name":"address","nodeType":"ElementaryTypeName","src":"2129:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":364,"indexed":false,"mutability":"mutable","name":"score","nameLocation":"2168:5:3","nodeType":"VariableDeclaration","scope":374,"src":"2160:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":363,"name":"uint256","nodeType":"ElementaryTypeName","src":"2160:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":366,"indexed":false,"mutability":"mutable","name":"riskLevel","nameLocation":"2191:9:3","nodeType":"VariableDeclaration","scope":374,"src":"2184:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":365,"name":"string","nodeType":"ElementaryTypeName","src":"2184:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":368,"indexed":false,"mutability":"mutable","name":"reason","nameLocation":"2218:6:3","nodeType":"VariableDeclaration","scope":374,"src":"2211:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":367,"name":"string","nodeType":"ElementaryTypeName","src":"2211:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":370,"indexed":false,"mutability":"mutable","name":"priceUsed","nameLocation":"2241:9:3","nodeType":"VariableDeclaration","scope":374,"src":"2235:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":369,"name":"int64","nodeType":"ElementaryTypeName","src":"2235:5:3","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":372,"indexed":false,"mutability":"mutable","name":"reactionTimeMs","nameLocation":"2269:14:3","nodeType":"VariableDeclaration","scope":374,"src":"2261:22:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":371,"name":"uint256","nodeType":"ElementaryTypeName","src":"2261:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2118:172:3"},"src":"2099:192:3"},{"anonymous":false,"eventSelector":"7cbd5e661dde6a21cf48d6cf4909acf3b8c27773f4cd5050ab0cf692833173c2","id":381,"name":"BotUnflagged","nameLocation":"2305:12:3","nodeType":"EventDefinition","parameters":{"id":380,"nodeType":"ParameterList","parameters":[{"constant":false,"id":376,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"2334:4:3","nodeType":"VariableDeclaration","scope":381,"src":"2318:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":375,"name":"address","nodeType":"ElementaryTypeName","src":"2318:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":379,"indexed":false,"mutability":"mutable","name":"previousCategory","nameLocation":"2352:16:3","nodeType":"VariableDeclaration","scope":381,"src":"2340:28:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_BotCategory_$255","typeString":"enum BotDetectorWithPyth.BotCategory"},"typeName":{"id":378,"nodeType":"UserDefinedTypeName","pathNode":{"id":377,"name":"BotCategory","nameLocations":["2340:11:3"],"nodeType":"IdentifierPath","referencedDeclaration":255,"src":"2340:11:3"},"referencedDeclaration":255,"src":"2340:11:3","typeDescriptions":{"typeIdentifier":"t_enum$_BotCategory_$255","typeString":"enum BotDetectorWithPyth.BotCategory"}},"visibility":"internal"}],"src":"2317:52:3"},"src":"2299:71:3"},{"body":{"id":397,"nodeType":"Block","src":"2402:143:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":387,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":384,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2435:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2439:6:3","memberName":"sender","nodeType":"MemberAccess","src":"2435:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":386,"name":"botAnalyzer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":251,"src":"2449:11:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2435:25:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":388,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2464:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":389,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2468:6:3","memberName":"sender","nodeType":"MemberAccess","src":"2464:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":390,"name":"admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":249,"src":"2478:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2464:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2435:48:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420617574686f72697a6564","id":393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2498:16:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36","typeString":"literal_string \"Not authorized\""},"value":"Not authorized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36","typeString":"literal_string \"Not authorized\""}],"id":383,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2413:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":394,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2413:112:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":395,"nodeType":"ExpressionStatement","src":"2413:112:3"},{"id":396,"nodeType":"PlaceholderStatement","src":"2536:1:3"}]},"id":398,"name":"onlyAnalyzer","nameLocation":"2387:12:3","nodeType":"ModifierDefinition","parameters":{"id":382,"nodeType":"ParameterList","parameters":[],"src":"2399:2:3"},"src":"2378:167:3","virtual":false,"visibility":"internal"},{"body":{"id":420,"nodeType":"Block","src":"2610:112:3","statements":[{"expression":{"id":409,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":405,"name":"pyth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":247,"src":"2621:4:3","typeDescriptions":{"typeIdentifier":"t_contract$_IPyth_$162","typeString":"contract IPyth"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":407,"name":"_pythContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":400,"src":"2634:13:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":406,"name":"IPyth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":162,"src":"2628:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IPyth_$162_$","typeString":"type(contract IPyth)"}},"id":408,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2628:20:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IPyth_$162","typeString":"contract IPyth"}},"src":"2621:27:3","typeDescriptions":{"typeIdentifier":"t_contract$_IPyth_$162","typeString":"contract IPyth"}},"id":410,"nodeType":"ExpressionStatement","src":"2621:27:3"},{"expression":{"id":414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":411,"name":"admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":249,"src":"2659:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":412,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2667:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":413,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2671:6:3","memberName":"sender","nodeType":"MemberAccess","src":"2667:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2659:18:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":415,"nodeType":"ExpressionStatement","src":"2659:18:3"},{"expression":{"id":418,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":416,"name":"botAnalyzer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":251,"src":"2688:11:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":417,"name":"_botAnalyzer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":402,"src":"2702:12:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2688:26:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":419,"nodeType":"ExpressionStatement","src":"2688:26:3"}]},"id":421,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":403,"nodeType":"ParameterList","parameters":[{"constant":false,"id":400,"mutability":"mutable","name":"_pythContract","nameLocation":"2573:13:3","nodeType":"VariableDeclaration","scope":421,"src":"2565:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":399,"name":"address","nodeType":"ElementaryTypeName","src":"2565:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":402,"mutability":"mutable","name":"_botAnalyzer","nameLocation":"2596:12:3","nodeType":"VariableDeclaration","scope":421,"src":"2588:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":401,"name":"address","nodeType":"ElementaryTypeName","src":"2588:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2564:45:3"},"returnParameters":{"id":404,"nodeType":"ParameterList","parameters":[],"src":"2610:0:3"},"scope":1590,"src":"2553:169:3","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":480,"nodeType":"Block","src":"2835:779:3","statements":[{"assignments":[429],"declarations":[{"constant":false,"id":429,"mutability":"mutable","name":"botInfo","nameLocation":"2861:7:3","nodeType":"VariableDeclaration","scope":480,"src":"2846:22:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_BotInfo_$302_memory_ptr","typeString":"struct BotDetectorWithPyth.BotInfo"},"typeName":{"id":428,"nodeType":"UserDefinedTypeName","pathNode":{"id":427,"name":"BotInfo","nameLocations":["2846:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":302,"src":"2846:7:3"},"referencedDeclaration":302,"src":"2846:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_BotInfo_$302_storage_ptr","typeString":"struct BotDetectorWithPyth.BotInfo"}},"visibility":"internal"}],"id":434,"initialValue":{"baseExpression":{"id":430,"name":"botRegistry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":313,"src":"2871:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_BotInfo_$302_storage_$","typeString":"mapping(address => struct BotDetectorWithPyth.BotInfo storage ref)"}},"id":433,"indexExpression":{"expression":{"id":431,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2883:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":432,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2887:6:3","memberName":"sender","nodeType":"MemberAccess","src":"2883:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2871:23:3","typeDescriptions":{"typeIdentifier":"t_struct$_BotInfo_$302_storage","typeString":"struct BotDetectorWithPyth.BotInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"2846:48:3"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_enum$_BotCategory_$255","typeString":"enum BotDetectorWithPyth.BotCategory"},"id":440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":436,"name":"botInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":429,"src":"2969:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_BotInfo_$302_memory_ptr","typeString":"struct BotDetectorWithPyth.BotInfo memory"}},"id":437,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"2977:8:3","memberName":"category","nodeType":"MemberAccess","referencedDeclaration":295,"src":"2969:16:3","typeDescriptions":{"typeIdentifier":"t_enum$_BotCategory_$255","typeString":"enum BotDetectorWithPyth.BotCategory"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":438,"name":"BotCategory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":255,"src":"2989:11:3","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_BotCategory_$255_$","typeString":"type(enum BotDetectorWithPyth.BotCategory)"}},"id":439,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3001:7:3","memberName":"BAD_BOT","nodeType":"MemberAccess","referencedDeclaration":254,"src":"2989:19:3","typeDescriptions":{"typeIdentifier":"t_enum$_BotCategory_$255","typeString":"enum BotDetectorWithPyth.BotCategory"}},"src":"2969:39:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"42616420626f74206465746563746564202d2074726164696e6720626c6f636b656421","id":441,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3023:37:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_289df7a1baa90a4c72d504af3659bd7392c2ed553d35bd5fb0a74f6bdbffd321","typeString":"literal_string \"Bad bot detected - trading blocked!\""},"value":"Bad bot detected - trading blocked!"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_289df7a1baa90a4c72d504af3659bd7392c2ed553d35bd5fb0a74f6bdbffd321","typeString":"literal_string \"Bad bot detected - trading blocked!\""}],"id":435,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2947:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2947:124:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":443,"nodeType":"ExpressionStatement","src":"2947:124:3"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":447,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":445,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":424,"src":"3090:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":446,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3099:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"3090:10:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420616d6f756e74","id":448,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3102:16:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1","typeString":"literal_string \"Invalid amount\""},"value":"Invalid amount"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1","typeString":"literal_string \"Invalid amount\""}],"id":444,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3082:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":449,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3082:37:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":450,"nodeType":"ExpressionStatement","src":"3082:37:3"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":457,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3211:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":458,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3215:6:3","memberName":"sender","nodeType":"MemberAccess","src":"3211:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":459,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3251:5:3","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3257:9:3","memberName":"timestamp","nodeType":"MemberAccess","src":"3251:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":461,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":424,"src":"3293:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":462,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3331:5:3","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":463,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3337:6:3","memberName":"number","nodeType":"MemberAccess","src":"3331:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"30","id":464,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3379:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":465,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3417:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":456,"name":"TradeRecord","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":268,"src":"3174:11:3","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_TradeRecord_$268_storage_ptr_$","typeString":"type(struct BotDetectorWithPyth.TradeRecord storage pointer)"}},"id":466,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["3205:4:3","3240:9:3","3285:6:3","3318:11:3","3362:15:3","3399:16:3"],"names":["user","timestamp","amount","blockNumber","btcPriceAtTrade","pricePublishTime"],"nodeType":"FunctionCall","src":"3174:260:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_TradeRecord_$268_memory_ptr","typeString":"struct BotDetectorWithPyth.TradeRecord memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_TradeRecord_$268_memory_ptr","typeString":"struct BotDetectorWithPyth.TradeRecord memory"}],"expression":{"baseExpression":{"id":451,"name":"userTrades","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":308,"src":"3132:10:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_TradeRecord_$268_storage_$dyn_storage_$","typeString":"mapping(address => struct BotDetectorWithPyth.TradeRecord storage ref[] storage ref)"}},"id":454,"indexExpression":{"expression":{"id":452,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3143:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":453,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3147:6:3","memberName":"sender","nodeType":"MemberAccess","src":"3143:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3132:22:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TradeRecord_$268_storage_$dyn_storage","typeString":"struct BotDetectorWithPyth.TradeRecord storage ref[] storage ref"}},"id":455,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3155:4:3","memberName":"push","nodeType":"MemberAccess","src":"3132:27:3","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_TradeRecord_$268_storage_$dyn_storage_ptr_$_t_struct$_TradeRecord_$268_storage_$returns$__$attached_to$_t_array$_t_struct$_TradeRecord_$268_storage_$dyn_storage_ptr_$","typeString":"function (struct BotDetectorWithPyth.TradeRecord storage ref[] storage pointer,struct BotDetectorWithPyth.TradeRecord storage ref)"}},"id":467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3132:313:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":468,"nodeType":"ExpressionStatement","src":"3132:313:3"},{"eventCall":{"arguments":[{"expression":{"id":470,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3491:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":471,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3495:6:3","memberName":"sender","nodeType":"MemberAccess","src":"3491:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":472,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3516:5:3","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3522:9:3","memberName":"timestamp","nodeType":"MemberAccess","src":"3516:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":474,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":424,"src":"3546:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":475,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3567:5:3","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":476,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3573:6:3","memberName":"number","nodeType":"MemberAccess","src":"3567:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"30","id":477,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3594:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":469,"name":"TradeExecuted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":344,"src":"3463:13:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_int64_$returns$__$","typeString":"function (address,uint256,uint256,uint256,int64)"}},"id":478,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3463:143:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":479,"nodeType":"EmitStatement","src":"3458:148:3"}]},"documentation":{"id":422,"nodeType":"StructuredDocumentation","src":"2730:52:3","text":" Execute a trade (basic version)"},"functionSelector":"02d2838b","id":481,"implemented":true,"kind":"function","modifiers":[],"name":"executeTrade","nameLocation":"2797:12:3","nodeType":"FunctionDefinition","parameters":{"id":425,"nodeType":"ParameterList","parameters":[{"constant":false,"id":424,"mutability":"mutable","name":"amount","nameLocation":"2818:6:3","nodeType":"VariableDeclaration","scope":481,"src":"2810:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":423,"name":"uint256","nodeType":"ElementaryTypeName","src":"2810:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2809:16:3"},"returnParameters":{"id":426,"nodeType":"ParameterList","parameters":[],"src":"2835:0:3"},"scope":1590,"src":"2788:826:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":585,"nodeType":"Block","src":"3840:1068:3","statements":[{"assignments":[494],"declarations":[{"constant":false,"id":494,"mutability":"mutable","name":"botInfo","nameLocation":"3866:7:3","nodeType":"VariableDeclaration","scope":585,"src":"3851:22:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_BotInfo_$302_memory_ptr","typeString":"struct BotDetectorWithPyth.BotInfo"},"typeName":{"id":493,"nodeType":"UserDefinedTypeName","pathNode":{"id":492,"name":"BotInfo","nameLocations":["3851:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":302,"src":"3851:7:3"},"referencedDeclaration":302,"src":"3851:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_BotInfo_$302_storage_ptr","typeString":"struct BotDetectorWithPyth.BotInfo"}},"visibility":"internal"}],"id":499,"initialValue":{"baseExpression":{"id":495,"name":"botRegistry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":313,"src":"3876:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_BotInfo_$302_storage_$","typeString":"mapping(address => struct BotDetectorWithPyth.BotInfo storage ref)"}},"id":498,"indexExpression":{"expression":{"id":496,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3888:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":497,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3892:6:3","memberName":"sender","nodeType":"MemberAccess","src":"3888:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3876:23:3","typeDescriptions":{"typeIdentifier":"t_struct$_BotInfo_$302_storage","typeString":"struct BotDetectorWithPyth.BotInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"3851:48:3"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_enum$_BotCategory_$255","typeString":"enum BotDetectorWithPyth.BotCategory"},"id":505,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":501,"name":"botInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":494,"src":"3961:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_BotInfo_$302_memory_ptr","typeString":"struct BotDetectorWithPyth.BotInfo memory"}},"id":502,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3969:8:3","memberName":"category","nodeType":"MemberAccess","referencedDeclaration":295,"src":"3961:16:3","typeDescriptions":{"typeIdentifier":"t_enum$_BotCategory_$255","typeString":"enum BotDetectorWithPyth.BotCategory"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"expression":{"id":503,"name":"BotCategory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":255,"src":"3981:11:3","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_BotCategory_$255_$","typeString":"type(enum BotDetectorWithPyth.BotCategory)"}},"id":504,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3993:7:3","memberName":"BAD_BOT","nodeType":"MemberAccess","referencedDeclaration":254,"src":"3981:19:3","typeDescriptions":{"typeIdentifier":"t_enum$_BotCategory_$255","typeString":"enum BotDetectorWithPyth.BotCategory"}},"src":"3961:39:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"42616420626f74206465746563746564202d2074726164696e6720626c6f636b656421","id":506,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4015:37:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_289df7a1baa90a4c72d504af3659bd7392c2ed553d35bd5fb0a74f6bdbffd321","typeString":"literal_string \"Bad bot detected - trading blocked!\""},"value":"Bad bot detected - trading blocked!"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_289df7a1baa90a4c72d504af3659bd7392c2ed553d35bd5fb0a74f6bdbffd321","typeString":"literal_string \"Bad bot detected - trading blocked!\""}],"id":500,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3939:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":507,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3939:124:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":508,"nodeType":"ExpressionStatement","src":"3939:124:3"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":512,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":510,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":484,"src":"4082:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4091:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4082:10:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420616d6f756e74","id":513,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4094:16:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1","typeString":"literal_string \"Invalid amount\""},"value":"Invalid amount"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1","typeString":"literal_string \"Invalid amount\""}],"id":509,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4074:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":514,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4074:37:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":515,"nodeType":"ExpressionStatement","src":"4074:37:3"},{"assignments":[517],"declarations":[{"constant":false,"id":517,"mutability":"mutable","name":"fee","nameLocation":"4129:3:3","nodeType":"VariableDeclaration","scope":585,"src":"4124:8:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":516,"name":"uint","nodeType":"ElementaryTypeName","src":"4124:4:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":522,"initialValue":{"arguments":[{"id":520,"name":"priceUpdateData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":487,"src":"4153:15:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes calldata[] calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes calldata[] calldata"}],"expression":{"id":518,"name":"pyth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":247,"src":"4135:4:3","typeDescriptions":{"typeIdentifier":"t_contract$_IPyth_$162","typeString":"contract IPyth"}},"id":519,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4140:12:3","memberName":"getUpdateFee","nodeType":"MemberAccess","referencedDeclaration":75,"src":"4135:17:3","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$returns$_t_uint256_$","typeString":"function (bytes memory[] memory) view external returns (uint256)"}},"id":521,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4135:34:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4124:45:3"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":527,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":524,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4188:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":525,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4192:5:3","memberName":"value","nodeType":"MemberAccess","src":"4188:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":526,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":517,"src":"4201:3:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4188:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e7420666565","id":528,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4206:18:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_7d4281b3c746fd818dd98635f57c54464f30641c177dcb423a4f8d1eb24128af","typeString":"literal_string \"Insufficient fee\""},"value":"Insufficient fee"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7d4281b3c746fd818dd98635f57c54464f30641c177dcb423a4f8d1eb24128af","typeString":"literal_string \"Insufficient fee\""}],"id":523,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4180:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":529,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4180:45:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":530,"nodeType":"ExpressionStatement","src":"4180:45:3"},{"expression":{"arguments":[{"id":536,"name":"priceUpdateData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":487,"src":"4272:15:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes calldata[] calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes calldata[] calldata"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes calldata[] calldata"}],"expression":{"id":531,"name":"pyth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":247,"src":"4238:4:3","typeDescriptions":{"typeIdentifier":"t_contract$_IPyth_$162","typeString":"contract IPyth"}},"id":533,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4243:16:3","memberName":"updatePriceFeeds","nodeType":"MemberAccess","referencedDeclaration":53,"src":"4238:21:3","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$returns$__$","typeString":"function (bytes memory[] memory) payable external"}},"id":535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":534,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":517,"src":"4267:3:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"4238:33:3","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$returns$__$value","typeString":"function (bytes memory[] memory) payable external"}},"id":537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4238:50:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":538,"nodeType":"ExpressionStatement","src":"4238:50:3"},{"assignments":[543],"declarations":[{"constant":false,"id":543,"mutability":"mutable","name":"price","nameLocation":"4324:5:3","nodeType":"VariableDeclaration","scope":585,"src":"4299:30:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$203_memory_ptr","typeString":"struct PythStructs.Price"},"typeName":{"id":542,"nodeType":"UserDefinedTypeName","pathNode":{"id":541,"name":"PythStructs.Price","nameLocations":["4299:11:3","4311:5:3"],"nodeType":"IdentifierPath","referencedDeclaration":203,"src":"4299:17:3"},"referencedDeclaration":203,"src":"4299:17:3","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$203_storage_ptr","typeString":"struct PythStructs.Price"}},"visibility":"internal"}],"id":549,"initialValue":{"arguments":[{"id":546,"name":"priceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":489,"src":"4357:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"hexValue":"3630","id":547,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4366:2:3","typeDescriptions":{"typeIdentifier":"t_rational_60_by_1","typeString":"int_const 60"},"value":"60"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_rational_60_by_1","typeString":"int_const 60"}],"expression":{"id":544,"name":"pyth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":247,"src":"4332:4:3","typeDescriptions":{"typeIdentifier":"t_contract$_IPyth_$162","typeString":"contract IPyth"}},"id":545,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4337:19:3","memberName":"getPriceNoOlderThan","nodeType":"MemberAccess","referencedDeclaration":26,"src":"4332:24:3","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_bytes32_$_t_uint256_$returns$_t_struct$_Price_$203_memory_ptr_$","typeString":"function (bytes32,uint256) view external returns (struct PythStructs.Price memory)"}},"id":548,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4332:37:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Price_$203_memory_ptr","typeString":"struct PythStructs.Price memory"}},"nodeType":"VariableDeclarationStatement","src":"4299:70:3"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":556,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4461:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4465:6:3","memberName":"sender","nodeType":"MemberAccess","src":"4461:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":558,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4501:5:3","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":559,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4507:9:3","memberName":"timestamp","nodeType":"MemberAccess","src":"4501:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":560,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":484,"src":"4543:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":561,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4581:5:3","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":562,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4587:6:3","memberName":"number","nodeType":"MemberAccess","src":"4581:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":563,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":543,"src":"4629:5:3","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$203_memory_ptr","typeString":"struct PythStructs.Price memory"}},"id":564,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4635:5:3","memberName":"price","nodeType":"MemberAccess","referencedDeclaration":196,"src":"4629:11:3","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},{"arguments":[{"expression":{"id":567,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":543,"src":"4684:5:3","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$203_memory_ptr","typeString":"struct PythStructs.Price memory"}},"id":568,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4690:11:3","memberName":"publishTime","nodeType":"MemberAccess","referencedDeclaration":202,"src":"4684:17:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":566,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4677:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":565,"name":"uint64","nodeType":"ElementaryTypeName","src":"4677:6:3","typeDescriptions":{}}},"id":569,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4677:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_int64","typeString":"int64"},{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":555,"name":"TradeRecord","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":268,"src":"4424:11:3","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_TradeRecord_$268_storage_ptr_$","typeString":"type(struct BotDetectorWithPyth.TradeRecord storage pointer)"}},"id":570,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["4455:4:3","4490:9:3","4535:6:3","4568:11:3","4612:15:3","4659:16:3"],"names":["user","timestamp","amount","blockNumber","btcPriceAtTrade","pricePublishTime"],"nodeType":"FunctionCall","src":"4424:294:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_TradeRecord_$268_memory_ptr","typeString":"struct BotDetectorWithPyth.TradeRecord memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_TradeRecord_$268_memory_ptr","typeString":"struct BotDetectorWithPyth.TradeRecord memory"}],"expression":{"baseExpression":{"id":550,"name":"userTrades","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":308,"src":"4382:10:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_TradeRecord_$268_storage_$dyn_storage_$","typeString":"mapping(address => struct BotDetectorWithPyth.TradeRecord storage ref[] storage ref)"}},"id":553,"indexExpression":{"expression":{"id":551,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4393:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4397:6:3","memberName":"sender","nodeType":"MemberAccess","src":"4393:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4382:22:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TradeRecord_$268_storage_$dyn_storage","typeString":"struct BotDetectorWithPyth.TradeRecord storage ref[] storage ref"}},"id":554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4405:4:3","memberName":"push","nodeType":"MemberAccess","src":"4382:27:3","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_TradeRecord_$268_storage_$dyn_storage_ptr_$_t_struct$_TradeRecord_$268_storage_$returns$__$attached_to$_t_array$_t_struct$_TradeRecord_$268_storage_$dyn_storage_ptr_$","typeString":"function (struct BotDetectorWithPyth.TradeRecord storage ref[] storage pointer,struct BotDetectorWithPyth.TradeRecord storage ref)"}},"id":571,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4382:347:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":572,"nodeType":"ExpressionStatement","src":"4382:347:3"},{"eventCall":{"arguments":[{"expression":{"id":574,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4775:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4779:6:3","memberName":"sender","nodeType":"MemberAccess","src":"4775:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":576,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4800:5:3","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4806:9:3","memberName":"timestamp","nodeType":"MemberAccess","src":"4800:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":578,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":484,"src":"4830:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":579,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4851:5:3","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4857:6:3","memberName":"number","nodeType":"MemberAccess","src":"4851:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":581,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":543,"src":"4878:5:3","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$203_memory_ptr","typeString":"struct PythStructs.Price memory"}},"id":582,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4884:5:3","memberName":"price","nodeType":"MemberAccess","referencedDeclaration":196,"src":"4878:11:3","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_int64","typeString":"int64"}],"id":573,"name":"TradeExecuted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":344,"src":"4747:13:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_int64_$returns$__$","typeString":"function (address,uint256,uint256,uint256,int64)"}},"id":583,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4747:153:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":584,"nodeType":"EmitStatement","src":"4742:158:3"}]},"documentation":{"id":482,"nodeType":"StructuredDocumentation","src":"3622:58:3","text":" Execute a trade with Pyth price proof"},"functionSelector":"9cda8908","id":586,"implemented":true,"kind":"function","modifiers":[],"name":"executeTradeWithPriceProof","nameLocation":"3695:26:3","nodeType":"FunctionDefinition","parameters":{"id":490,"nodeType":"ParameterList","parameters":[{"constant":false,"id":484,"mutability":"mutable","name":"amount","nameLocation":"3740:6:3","nodeType":"VariableDeclaration","scope":586,"src":"3732:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":483,"name":"uint256","nodeType":"ElementaryTypeName","src":"3732:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":487,"mutability":"mutable","name":"priceUpdateData","nameLocation":"3774:15:3","nodeType":"VariableDeclaration","scope":586,"src":"3757:32:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":485,"name":"bytes","nodeType":"ElementaryTypeName","src":"3757:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":486,"nodeType":"ArrayTypeName","src":"3757:7:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":489,"mutability":"mutable","name":"priceId","nameLocation":"3808:7:3","nodeType":"VariableDeclaration","scope":586,"src":"3800:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":488,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3800:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3721:101:3"},"returnParameters":{"id":491,"nodeType":"ParameterList","parameters":[],"src":"3840:0:3"},"scope":1590,"src":"3686:1222:3","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":713,"nodeType":"Block","src":"5332:843:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":613,"name":"users","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":590,"src":"5351:5:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":614,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5357:6:3","memberName":"length","nodeType":"MemberAccess","src":"5351:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":615,"name":"scores","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":593,"src":"5367:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":616,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5374:6:3","memberName":"length","nodeType":"MemberAccess","src":"5367:13:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5351:29:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c656e677468206d69736d61746368","id":618,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5382:17:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_bb46a6fe2ea6b18f462b236ffc808abf66026114a0bc6a6c72c11149e00d9ea8","typeString":"literal_string \"Length mismatch\""},"value":"Length mismatch"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_bb46a6fe2ea6b18f462b236ffc808abf66026114a0bc6a6c72c11149e00d9ea8","typeString":"literal_string \"Length mismatch\""}],"id":612,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5343:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":619,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5343:57:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":620,"nodeType":"ExpressionStatement","src":"5343:57:3"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":622,"name":"users","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":590,"src":"5419:5:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":623,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5425:6:3","memberName":"length","nodeType":"MemberAccess","src":"5419:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":624,"name":"botTypes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":596,"src":"5435:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string calldata[] calldata"}},"id":625,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5444:6:3","memberName":"length","nodeType":"MemberAccess","src":"5435:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5419:31:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c656e677468206d69736d61746368","id":627,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5452:17:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_bb46a6fe2ea6b18f462b236ffc808abf66026114a0bc6a6c72c11149e00d9ea8","typeString":"literal_string \"Length mismatch\""},"value":"Length mismatch"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_bb46a6fe2ea6b18f462b236ffc808abf66026114a0bc6a6c72c11149e00d9ea8","typeString":"literal_string \"Length mismatch\""}],"id":621,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5411:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5411:59:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":629,"nodeType":"ExpressionStatement","src":"5411:59:3"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":631,"name":"users","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":590,"src":"5489:5:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":632,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5495:6:3","memberName":"length","nodeType":"MemberAccess","src":"5489:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":633,"name":"liquidityAmounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":599,"src":"5505:16:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":634,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5522:6:3","memberName":"length","nodeType":"MemberAccess","src":"5505:23:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5489:39:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c656e677468206d69736d61746368","id":636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5530:17:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_bb46a6fe2ea6b18f462b236ffc808abf66026114a0bc6a6c72c11149e00d9ea8","typeString":"literal_string \"Length mismatch\""},"value":"Length mismatch"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_bb46a6fe2ea6b18f462b236ffc808abf66026114a0bc6a6c72c11149e00d9ea8","typeString":"literal_string \"Length mismatch\""}],"id":630,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5481:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":637,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5481:67:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":638,"nodeType":"ExpressionStatement","src":"5481:67:3"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":640,"name":"users","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":590,"src":"5567:5:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":641,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5573:6:3","memberName":"length","nodeType":"MemberAccess","src":"5567:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":642,"name":"reasons","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":602,"src":"5583:7:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string calldata[] calldata"}},"id":643,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5591:6:3","memberName":"length","nodeType":"MemberAccess","src":"5583:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5567:30:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c656e677468206d69736d61746368","id":645,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5599:17:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_bb46a6fe2ea6b18f462b236ffc808abf66026114a0bc6a6c72c11149e00d9ea8","typeString":"literal_string \"Length mismatch\""},"value":"Length mismatch"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_bb46a6fe2ea6b18f462b236ffc808abf66026114a0bc6a6c72c11149e00d9ea8","typeString":"literal_string \"Length mismatch\""}],"id":639,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5559:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":646,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5559:58:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":647,"nodeType":"ExpressionStatement","src":"5559:58:3"},{"assignments":[649],"declarations":[{"constant":false,"id":649,"mutability":"mutable","name":"fee","nameLocation":"5635:3:3","nodeType":"VariableDeclaration","scope":713,"src":"5630:8:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":648,"name":"uint","nodeType":"ElementaryTypeName","src":"5630:4:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":654,"initialValue":{"arguments":[{"id":652,"name":"priceUpdateData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":605,"src":"5659:15:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes calldata[] calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes calldata[] calldata"}],"expression":{"id":650,"name":"pyth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":247,"src":"5641:4:3","typeDescriptions":{"typeIdentifier":"t_contract$_IPyth_$162","typeString":"contract IPyth"}},"id":651,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5646:12:3","memberName":"getUpdateFee","nodeType":"MemberAccess","referencedDeclaration":75,"src":"5641:17:3","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$returns$_t_uint256_$","typeString":"function (bytes memory[] memory) view external returns (uint256)"}},"id":653,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5641:34:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"5630:45:3"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":659,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":656,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5694:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":657,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5698:5:3","memberName":"value","nodeType":"MemberAccess","src":"5694:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":658,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":649,"src":"5707:3:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5694:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e74205079746820666565","id":660,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5712:23:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_632c8c9cbaacea7e2b268c41b64991b4e752b4acc753e1f2e1b4ac316c65874a","typeString":"literal_string \"Insufficient Pyth fee\""},"value":"Insufficient Pyth fee"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_632c8c9cbaacea7e2b268c41b64991b4e752b4acc753e1f2e1b4ac316c65874a","typeString":"literal_string \"Insufficient Pyth fee\""}],"id":655,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5686:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":661,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5686:50:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":662,"nodeType":"ExpressionStatement","src":"5686:50:3"},{"expression":{"arguments":[{"id":668,"name":"priceUpdateData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":605,"src":"5783:15:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes calldata[] calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes calldata[] calldata"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes calldata[] calldata"}],"expression":{"id":663,"name":"pyth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":247,"src":"5749:4:3","typeDescriptions":{"typeIdentifier":"t_contract$_IPyth_$162","typeString":"contract IPyth"}},"id":665,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5754:16:3","memberName":"updatePriceFeeds","nodeType":"MemberAccess","referencedDeclaration":53,"src":"5749:21:3","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$returns$__$","typeString":"function (bytes memory[] memory) payable external"}},"id":667,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":666,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":649,"src":"5778:3:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"5749:33:3","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$returns$__$value","typeString":"function (bytes memory[] memory) payable external"}},"id":669,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5749:50:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":670,"nodeType":"ExpressionStatement","src":"5749:50:3"},{"assignments":[675],"declarations":[{"constant":false,"id":675,"mutability":"mutable","name":"currentPrice","nameLocation":"5835:12:3","nodeType":"VariableDeclaration","scope":713,"src":"5810:37:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$203_memory_ptr","typeString":"struct PythStructs.Price"},"typeName":{"id":674,"nodeType":"UserDefinedTypeName","pathNode":{"id":673,"name":"PythStructs.Price","nameLocations":["5810:11:3","5822:5:3"],"nodeType":"IdentifierPath","referencedDeclaration":203,"src":"5810:17:3"},"referencedDeclaration":203,"src":"5810:17:3","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$203_storage_ptr","typeString":"struct PythStructs.Price"}},"visibility":"internal"}],"id":680,"initialValue":{"arguments":[{"id":678,"name":"priceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":607,"src":"5870:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":676,"name":"pyth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":247,"src":"5850:4:3","typeDescriptions":{"typeIdentifier":"t_contract$_IPyth_$162","typeString":"contract IPyth"}},"id":677,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5855:14:3","memberName":"getPriceUnsafe","nodeType":"MemberAccess","referencedDeclaration":15,"src":"5850:19:3","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_bytes32_$returns$_t_struct$_Price_$203_memory_ptr_$","typeString":"function (bytes32) view external returns (struct PythStructs.Price memory)"}},"id":679,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5850:28:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Price_$203_memory_ptr","typeString":"struct PythStructs.Price memory"}},"nodeType":"VariableDeclarationStatement","src":"5810:68:3"},{"body":{"id":711,"nodeType":"Block","src":"5931:237:3","statements":[{"expression":{"arguments":[{"baseExpression":{"id":693,"name":"users","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":590,"src":"5977:5:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":695,"indexExpression":{"id":694,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"5983:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5977:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":696,"name":"scores","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":593,"src":"6004:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":698,"indexExpression":{"id":697,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"6011:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6004:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":699,"name":"botTypes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":596,"src":"6032:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string calldata[] calldata"}},"id":701,"indexExpression":{"id":700,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"6041:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6032:11:3","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"baseExpression":{"id":702,"name":"liquidityAmounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":599,"src":"6062:16:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":704,"indexExpression":{"id":703,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"6079:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6062:19:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":705,"name":"reasons","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":602,"src":"6100:7:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string calldata[] calldata"}},"id":707,"indexExpression":{"id":706,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"6108:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6100:10:3","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"id":708,"name":"currentPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":675,"src":"6129:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$203_memory_ptr","typeString":"struct PythStructs.Price memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_struct$_Price_$203_memory_ptr","typeString":"struct PythStructs.Price memory"}],"id":692,"name":"_flagGoodBot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":848,"src":"5946:12:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_string_calldata_ptr_$_t_uint256_$_t_string_calldata_ptr_$_t_struct$_Price_$203_memory_ptr_$returns$__$","typeString":"function (address,uint256,string calldata,uint256,string calldata,struct PythStructs.Price memory)"}},"id":709,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5946:210:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":710,"nodeType":"ExpressionStatement","src":"5946:210:3"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":688,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":685,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"5908:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":686,"name":"users","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":590,"src":"5912:5:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":687,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5918:6:3","memberName":"length","nodeType":"MemberAccess","src":"5912:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5908:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":712,"initializationExpression":{"assignments":[682],"declarations":[{"constant":false,"id":682,"mutability":"mutable","name":"i","nameLocation":"5901:1:3","nodeType":"VariableDeclaration","scope":712,"src":"5896:6:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":681,"name":"uint","nodeType":"ElementaryTypeName","src":"5896:4:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":684,"initialValue":{"hexValue":"30","id":683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5905:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5896:10:3"},"loopExpression":{"expression":{"id":690,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5926:3:3","subExpression":{"id":689,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":682,"src":"5926:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":691,"nodeType":"ExpressionStatement","src":"5926:3:3"},"nodeType":"ForStatement","src":"5891:277:3"}]},"documentation":{"id":587,"nodeType":"StructuredDocumentation","src":"4916:79:3","text":" Flag GOOD BOTS with Pyth proof (Market Makers & Arbitrage)"},"functionSelector":"0d7555cc","id":714,"implemented":true,"kind":"function","modifiers":[{"id":610,"kind":"modifierInvocation","modifierName":{"id":609,"name":"onlyAnalyzer","nameLocations":["5319:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":398,"src":"5319:12:3"},"nodeType":"ModifierInvocation","src":"5319:12:3"}],"name":"flagGoodBotsWithPythProof","nameLocation":"5010:25:3","nodeType":"FunctionDefinition","parameters":{"id":608,"nodeType":"ParameterList","parameters":[{"constant":false,"id":590,"mutability":"mutable","name":"users","nameLocation":"5065:5:3","nodeType":"VariableDeclaration","scope":714,"src":"5046:24:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":588,"name":"address","nodeType":"ElementaryTypeName","src":"5046:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":589,"nodeType":"ArrayTypeName","src":"5046:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":593,"mutability":"mutable","name":"scores","nameLocation":"5100:6:3","nodeType":"VariableDeclaration","scope":714,"src":"5081:25:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":591,"name":"uint256","nodeType":"ElementaryTypeName","src":"5081:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":592,"nodeType":"ArrayTypeName","src":"5081:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":596,"mutability":"mutable","name":"botTypes","nameLocation":"5135:8:3","nodeType":"VariableDeclaration","scope":714,"src":"5117:26:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":594,"name":"string","nodeType":"ElementaryTypeName","src":"5117:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":595,"nodeType":"ArrayTypeName","src":"5117:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":599,"mutability":"mutable","name":"liquidityAmounts","nameLocation":"5173:16:3","nodeType":"VariableDeclaration","scope":714,"src":"5154:35:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":597,"name":"uint256","nodeType":"ElementaryTypeName","src":"5154:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":598,"nodeType":"ArrayTypeName","src":"5154:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":602,"mutability":"mutable","name":"reasons","nameLocation":"5218:7:3","nodeType":"VariableDeclaration","scope":714,"src":"5200:25:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":600,"name":"string","nodeType":"ElementaryTypeName","src":"5200:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":601,"nodeType":"ArrayTypeName","src":"5200:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":605,"mutability":"mutable","name":"priceUpdateData","nameLocation":"5253:15:3","nodeType":"VariableDeclaration","scope":714,"src":"5236:32:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":603,"name":"bytes","nodeType":"ElementaryTypeName","src":"5236:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":604,"nodeType":"ArrayTypeName","src":"5236:7:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":607,"mutability":"mutable","name":"priceId","nameLocation":"5287:7:3","nodeType":"VariableDeclaration","scope":714,"src":"5279:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":606,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5279:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"5035:266:3"},"returnParameters":{"id":611,"nodeType":"ParameterList","parameters":[],"src":"5332:0:3"},"scope":1590,"src":"5001:1174:3","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":847,"nodeType":"Block","src":"6479:1755:3","statements":[{"condition":{"baseExpression":{"id":731,"name":"isBadBot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":332,"src":"6549:8:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":733,"indexExpression":{"id":732,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":717,"src":"6558:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6549:14:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":739,"nodeType":"IfStatement","src":"6545:71:3","trueBody":{"id":738,"nodeType":"Block","src":"6565:51:3","statements":[{"expression":{"arguments":[{"id":735,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":717,"src":"6599:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":734,"name":"_removeFromBadBots","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1387,"src":"6580:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":736,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6580:24:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":737,"nodeType":"ExpressionStatement","src":"6580:24:3"}]}},{"condition":{"id":743,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"6682:16:3","subExpression":{"baseExpression":{"id":740,"name":"isGoodBot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":328,"src":"6683:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":742,"indexExpression":{"id":741,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":717,"src":"6693:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6683:15:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":757,"nodeType":"IfStatement","src":"6678:105:3","trueBody":{"id":756,"nodeType":"Block","src":"6700:83:3","statements":[{"expression":{"arguments":[{"id":747,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":717,"src":"6729:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":744,"name":"goodBots","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":321,"src":"6715:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":746,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6724:4:3","memberName":"push","nodeType":"MemberAccess","src":"6715:13:3","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer,address)"}},"id":748,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6715:19:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":749,"nodeType":"ExpressionStatement","src":"6715:19:3"},{"expression":{"id":754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":750,"name":"isGoodBot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":328,"src":"6749:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":752,"indexExpression":{"id":751,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":717,"src":"6759:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6749:15:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6767:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"6749:22:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":755,"nodeType":"ExpressionStatement","src":"6749:22:3"}]}},{"expression":{"id":771,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":758,"name":"botRegistry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":313,"src":"6827:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_BotInfo_$302_storage_$","typeString":"mapping(address => struct BotDetectorWithPyth.BotInfo storage ref)"}},"id":760,"indexExpression":{"id":759,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":717,"src":"6839:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6827:17:3","typeDescriptions":{"typeIdentifier":"t_struct$_BotInfo_$302_storage","typeString":"struct BotDetectorWithPyth.BotInfo storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"74727565","id":762,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6881:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":763,"name":"score","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":719,"src":"6907:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":764,"name":"BotCategory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":255,"src":"6937:11:3","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_BotCategory_$255_$","typeString":"type(enum BotDetectorWithPyth.BotCategory)"}},"id":765,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6949:8:3","memberName":"GOOD_BOT","nodeType":"MemberAccess","referencedDeclaration":253,"src":"6937:20:3","typeDescriptions":{"typeIdentifier":"t_enum$_BotCategory_$255","typeString":"enum BotDetectorWithPyth.BotCategory"}},{"id":766,"name":"botType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":721,"src":"6981:7:3","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"id":767,"name":"liquidityAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":723,"src":"7022:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":768,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"7063:5:3","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":769,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7069:9:3","memberName":"timestamp","nodeType":"MemberAccess","src":"7063:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_BotCategory_$255","typeString":"enum BotDetectorWithPyth.BotCategory"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":761,"name":"BotInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":302,"src":"6847:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_BotInfo_$302_storage_ptr_$","typeString":"type(struct BotDetectorWithPyth.BotInfo storage pointer)"}},"id":770,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["6870:9:3","6900:5:3","6927:8:3","6972:7:3","7003:17:3","7052:9:3"],"names":["isFlagged","score","category","botType","liquidityProvided","flaggedAt"],"nodeType":"FunctionCall","src":"6847:243:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_BotInfo_$302_memory_ptr","typeString":"struct BotDetectorWithPyth.BotInfo memory"}},"src":"6827:263:3","typeDescriptions":{"typeIdentifier":"t_struct$_BotInfo_$302_storage","typeString":"struct BotDetectorWithPyth.BotInfo storage ref"}},"id":772,"nodeType":"ExpressionStatement","src":"6827:263:3"},{"assignments":[777],"declarations":[{"constant":false,"id":777,"mutability":"mutable","name":"trades","nameLocation":"7152:6:3","nodeType":"VariableDeclaration","scope":847,"src":"7130:28:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TradeRecord_$268_storage_$dyn_storage_ptr","typeString":"struct BotDetectorWithPyth.TradeRecord[]"},"typeName":{"baseType":{"id":775,"nodeType":"UserDefinedTypeName","pathNode":{"id":774,"name":"TradeRecord","nameLocations":["7130:11:3"],"nodeType":"IdentifierPath","referencedDeclaration":268,"src":"7130:11:3"},"referencedDeclaration":268,"src":"7130:11:3","typeDescriptions":{"typeIdentifier":"t_struct$_TradeRecord_$268_storage_ptr","typeString":"struct BotDetectorWithPyth.TradeRecord"}},"id":776,"nodeType":"ArrayTypeName","src":"7130:13:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TradeRecord_$268_storage_$dyn_storage_ptr","typeString":"struct BotDetectorWithPyth.TradeRecord[]"}},"visibility":"internal"}],"id":781,"initialValue":{"baseExpression":{"id":778,"name":"userTrades","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":308,"src":"7161:10:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_TradeRecord_$268_storage_$dyn_storage_$","typeString":"mapping(address => struct BotDetectorWithPyth.TradeRecord storage ref[] storage ref)"}},"id":780,"indexExpression":{"id":779,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":717,"src":"7172:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7161:16:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TradeRecord_$268_storage_$dyn_storage","typeString":"struct BotDetectorWithPyth.TradeRecord storage ref[] storage ref"}},"nodeType":"VariableDeclarationStatement","src":"7130:47:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":782,"name":"trades","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"7192:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TradeRecord_$268_storage_$dyn_storage_ptr","typeString":"struct BotDetectorWithPyth.TradeRecord storage ref[] storage pointer"}},"id":783,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7199:6:3","memberName":"length","nodeType":"MemberAccess","src":"7192:13:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":784,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7208:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"7192:17:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":846,"nodeType":"IfStatement","src":"7188:1039:3","trueBody":{"id":845,"nodeType":"Block","src":"7211:1016:3","statements":[{"assignments":[788],"declarations":[{"constant":false,"id":788,"mutability":"mutable","name":"lastTrade","nameLocation":"7245:9:3","nodeType":"VariableDeclaration","scope":845,"src":"7226:28:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_TradeRecord_$268_memory_ptr","typeString":"struct BotDetectorWithPyth.TradeRecord"},"typeName":{"id":787,"nodeType":"UserDefinedTypeName","pathNode":{"id":786,"name":"TradeRecord","nameLocations":["7226:11:3"],"nodeType":"IdentifierPath","referencedDeclaration":268,"src":"7226:11:3"},"referencedDeclaration":268,"src":"7226:11:3","typeDescriptions":{"typeIdentifier":"t_struct$_TradeRecord_$268_storage_ptr","typeString":"struct BotDetectorWithPyth.TradeRecord"}},"visibility":"internal"}],"id":795,"initialValue":{"baseExpression":{"id":789,"name":"trades","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"7257:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TradeRecord_$268_storage_$dyn_storage_ptr","typeString":"struct BotDetectorWithPyth.TradeRecord storage ref[] storage pointer"}},"id":794,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":790,"name":"trades","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":777,"src":"7264:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TradeRecord_$268_storage_$dyn_storage_ptr","typeString":"struct BotDetectorWithPyth.TradeRecord storage ref[] storage pointer"}},"id":791,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7271:6:3","memberName":"length","nodeType":"MemberAccess","src":"7264:13:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":792,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7280:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"7264:17:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7257:25:3","typeDescriptions":{"typeIdentifier":"t_struct$_TradeRecord_$268_storage","typeString":"struct BotDetectorWithPyth.TradeRecord storage ref"}},"nodeType":"VariableDeclarationStatement","src":"7226:56:3"},{"assignments":[797],"declarations":[{"constant":false,"id":797,"mutability":"mutable","name":"reactionTime","nameLocation":"7307:12:3","nodeType":"VariableDeclaration","scope":845,"src":"7299:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":796,"name":"uint256","nodeType":"ElementaryTypeName","src":"7299:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":813,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":802,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":798,"name":"lastTrade","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":788,"src":"7322:9:3","typeDescriptions":{"typeIdentifier":"t_struct$_TradeRecord_$268_memory_ptr","typeString":"struct BotDetectorWithPyth.TradeRecord memory"}},"id":799,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7332:9:3","memberName":"timestamp","nodeType":"MemberAccess","referencedDeclaration":259,"src":"7322:19:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":800,"name":"currentPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":728,"src":"7361:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$203_memory_ptr","typeString":"struct PythStructs.Price memory"}},"id":801,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7374:11:3","memberName":"publishTime","nodeType":"MemberAccess","referencedDeclaration":202,"src":"7361:24:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7322:63:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7480:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":812,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"7322:159:3","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":803,"name":"lastTrade","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":788,"src":"7406:9:3","typeDescriptions":{"typeIdentifier":"t_struct$_TradeRecord_$268_memory_ptr","typeString":"struct BotDetectorWithPyth.TradeRecord memory"}},"id":804,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7416:9:3","memberName":"timestamp","nodeType":"MemberAccess","referencedDeclaration":259,"src":"7406:19:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":805,"name":"currentPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":728,"src":"7428:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$203_memory_ptr","typeString":"struct PythStructs.Price memory"}},"id":806,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7441:11:3","memberName":"publishTime","nodeType":"MemberAccess","referencedDeclaration":202,"src":"7428:24:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7406:46:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":808,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"7405:48:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31303030","id":809,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"7456:4:3","typeDescriptions":{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"},"value":"1000"},"src":"7405:55:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"7299:182:3"},{"expression":{"id":832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":814,"name":"botEvidenceProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":318,"src":"7498:16:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_BotEvidence_$288_storage_$","typeString":"mapping(address => struct BotDetectorWithPyth.BotEvidence storage ref)"}},"id":816,"indexExpression":{"id":815,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":717,"src":"7515:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"7498:22:3","typeDescriptions":{"typeIdentifier":"t_struct$_BotEvidence_$288_storage","typeString":"struct BotDetectorWithPyth.BotEvidence storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":818,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":717,"src":"7560:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":819,"name":"lastTrade","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":788,"src":"7599:9:3","typeDescriptions":{"typeIdentifier":"t_struct$_TradeRecord_$268_memory_ptr","typeString":"struct BotDetectorWithPyth.TradeRecord memory"}},"id":820,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7609:9:3","memberName":"timestamp","nodeType":"MemberAccess","referencedDeclaration":259,"src":"7599:19:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":821,"name":"currentPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":728,"src":"7655:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$203_memory_ptr","typeString":"struct PythStructs.Price memory"}},"id":822,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7668:11:3","memberName":"publishTime","nodeType":"MemberAccess","referencedDeclaration":202,"src":"7655:24:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":823,"name":"currentPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":728,"src":"7712:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$203_memory_ptr","typeString":"struct PythStructs.Price memory"}},"id":824,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"7725:5:3","memberName":"price","nodeType":"MemberAccess","referencedDeclaration":196,"src":"7712:18:3","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},{"id":825,"name":"reactionTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":797,"src":"7765:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":826,"name":"score","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":719,"src":"7806:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":827,"name":"BotCategory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":255,"src":"7840:11:3","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_BotCategory_$255_$","typeString":"type(enum BotDetectorWithPyth.BotCategory)"}},"id":828,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7852:8:3","memberName":"GOOD_BOT","nodeType":"MemberAccess","referencedDeclaration":253,"src":"7840:20:3","typeDescriptions":{"typeIdentifier":"t_enum$_BotCategory_$255","typeString":"enum BotDetectorWithPyth.BotCategory"}},{"id":829,"name":"botType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":721,"src":"7888:7:3","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"id":830,"name":"liquidityAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":723,"src":"7933:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_int64","typeString":"int64"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_BotCategory_$255","typeString":"enum BotDetectorWithPyth.BotCategory"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":817,"name":"BotEvidence","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":288,"src":"7523:11:3","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_BotEvidence_$288_storage_ptr_$","typeString":"type(struct BotDetectorWithPyth.BotEvidence storage pointer)"}},"id":831,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["7554:4:3","7583:14:3","7637:16:3","7698:12:3","7749:14:3","7796:8:3","7830:8:3","7879:7:3","7914:17:3"],"names":["user","tradeTimestamp","pricePublishTime","priceAtTrade","reactionTimeMs","botScore","category","botType","liquidityProvided"],"nodeType":"FunctionCall","src":"7523:441:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_BotEvidence_$288_memory_ptr","typeString":"struct BotDetectorWithPyth.BotEvidence memory"}},"src":"7498:466:3","typeDescriptions":{"typeIdentifier":"t_struct$_BotEvidence_$288_storage","typeString":"struct BotDetectorWithPyth.BotEvidence storage ref"}},"id":833,"nodeType":"ExpressionStatement","src":"7498:466:3"},{"eventCall":{"arguments":[{"id":835,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":717,"src":"8019:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":836,"name":"score","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":719,"src":"8042:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":837,"name":"botType","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":721,"src":"8066:7:3","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"id":838,"name":"liquidityAmount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":723,"src":"8092:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":839,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":725,"src":"8126:6:3","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"expression":{"id":840,"name":"currentPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":728,"src":"8151:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$203_memory_ptr","typeString":"struct PythStructs.Price memory"}},"id":841,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8164:5:3","memberName":"price","nodeType":"MemberAccess","referencedDeclaration":196,"src":"8151:18:3","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},{"id":842,"name":"reactionTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":797,"src":"8188:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_int64","typeString":"int64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":834,"name":"GoodBotFlagged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":360,"src":"7986:14:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_string_memory_ptr_$_t_uint256_$_t_string_memory_ptr_$_t_int64_$_t_uint256_$returns$__$","typeString":"function (address,uint256,string memory,uint256,string memory,int64,uint256)"}},"id":843,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7986:229:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":844,"nodeType":"EmitStatement","src":"7981:234:3"}]}}]},"documentation":{"id":715,"nodeType":"StructuredDocumentation","src":"6183:57:3","text":" Internal function to flag a good bot"},"id":848,"implemented":true,"kind":"function","modifiers":[],"name":"_flagGoodBot","nameLocation":"6255:12:3","nodeType":"FunctionDefinition","parameters":{"id":729,"nodeType":"ParameterList","parameters":[{"constant":false,"id":717,"mutability":"mutable","name":"user","nameLocation":"6286:4:3","nodeType":"VariableDeclaration","scope":848,"src":"6278:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":716,"name":"address","nodeType":"ElementaryTypeName","src":"6278:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":719,"mutability":"mutable","name":"score","nameLocation":"6309:5:3","nodeType":"VariableDeclaration","scope":848,"src":"6301:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":718,"name":"uint256","nodeType":"ElementaryTypeName","src":"6301:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":721,"mutability":"mutable","name":"botType","nameLocation":"6341:7:3","nodeType":"VariableDeclaration","scope":848,"src":"6325:23:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":720,"name":"string","nodeType":"ElementaryTypeName","src":"6325:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":723,"mutability":"mutable","name":"liquidityAmount","nameLocation":"6367:15:3","nodeType":"VariableDeclaration","scope":848,"src":"6359:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":722,"name":"uint256","nodeType":"ElementaryTypeName","src":"6359:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":725,"mutability":"mutable","name":"reason","nameLocation":"6409:6:3","nodeType":"VariableDeclaration","scope":848,"src":"6393:22:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":724,"name":"string","nodeType":"ElementaryTypeName","src":"6393:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":728,"mutability":"mutable","name":"currentPrice","nameLocation":"6451:12:3","nodeType":"VariableDeclaration","scope":848,"src":"6426:37:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$203_memory_ptr","typeString":"struct PythStructs.Price"},"typeName":{"id":727,"nodeType":"UserDefinedTypeName","pathNode":{"id":726,"name":"PythStructs.Price","nameLocations":["6426:11:3","6438:5:3"],"nodeType":"IdentifierPath","referencedDeclaration":203,"src":"6426:17:3"},"referencedDeclaration":203,"src":"6426:17:3","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$203_storage_ptr","typeString":"struct PythStructs.Price"}},"visibility":"internal"}],"src":"6267:203:3"},"returnParameters":{"id":730,"nodeType":"ParameterList","parameters":[],"src":"6479:0:3"},"scope":1590,"src":"6246:1988:3","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":960,"nodeType":"Block","src":"8615:730:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":876,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":872,"name":"users","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":852,"src":"8634:5:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":873,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8640:6:3","memberName":"length","nodeType":"MemberAccess","src":"8634:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":874,"name":"scores","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":855,"src":"8650:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":875,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8657:6:3","memberName":"length","nodeType":"MemberAccess","src":"8650:13:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8634:29:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c656e677468206d69736d61746368","id":877,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8665:17:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_bb46a6fe2ea6b18f462b236ffc808abf66026114a0bc6a6c72c11149e00d9ea8","typeString":"literal_string \"Length mismatch\""},"value":"Length mismatch"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_bb46a6fe2ea6b18f462b236ffc808abf66026114a0bc6a6c72c11149e00d9ea8","typeString":"literal_string \"Length mismatch\""}],"id":871,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8626:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":878,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8626:57:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":879,"nodeType":"ExpressionStatement","src":"8626:57:3"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":881,"name":"users","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":852,"src":"8702:5:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":882,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8708:6:3","memberName":"length","nodeType":"MemberAccess","src":"8702:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":883,"name":"riskLevels","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":858,"src":"8718:10:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string calldata[] calldata"}},"id":884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8729:6:3","memberName":"length","nodeType":"MemberAccess","src":"8718:17:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8702:33:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c656e677468206d69736d61746368","id":886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8737:17:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_bb46a6fe2ea6b18f462b236ffc808abf66026114a0bc6a6c72c11149e00d9ea8","typeString":"literal_string \"Length mismatch\""},"value":"Length mismatch"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_bb46a6fe2ea6b18f462b236ffc808abf66026114a0bc6a6c72c11149e00d9ea8","typeString":"literal_string \"Length mismatch\""}],"id":880,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8694:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":887,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8694:61:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":888,"nodeType":"ExpressionStatement","src":"8694:61:3"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":894,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":890,"name":"users","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":852,"src":"8774:5:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":891,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8780:6:3","memberName":"length","nodeType":"MemberAccess","src":"8774:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":892,"name":"reasons","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":861,"src":"8790:7:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string calldata[] calldata"}},"id":893,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8798:6:3","memberName":"length","nodeType":"MemberAccess","src":"8790:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8774:30:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c656e677468206d69736d61746368","id":895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8806:17:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_bb46a6fe2ea6b18f462b236ffc808abf66026114a0bc6a6c72c11149e00d9ea8","typeString":"literal_string \"Length mismatch\""},"value":"Length mismatch"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_bb46a6fe2ea6b18f462b236ffc808abf66026114a0bc6a6c72c11149e00d9ea8","typeString":"literal_string \"Length mismatch\""}],"id":889,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8766:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":896,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8766:58:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":897,"nodeType":"ExpressionStatement","src":"8766:58:3"},{"assignments":[899],"declarations":[{"constant":false,"id":899,"mutability":"mutable","name":"fee","nameLocation":"8842:3:3","nodeType":"VariableDeclaration","scope":960,"src":"8837:8:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":898,"name":"uint","nodeType":"ElementaryTypeName","src":"8837:4:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":904,"initialValue":{"arguments":[{"id":902,"name":"priceUpdateData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":864,"src":"8866:15:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes calldata[] calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes calldata[] calldata"}],"expression":{"id":900,"name":"pyth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":247,"src":"8848:4:3","typeDescriptions":{"typeIdentifier":"t_contract$_IPyth_$162","typeString":"contract IPyth"}},"id":901,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8853:12:3","memberName":"getUpdateFee","nodeType":"MemberAccess","referencedDeclaration":75,"src":"8848:17:3","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$returns$_t_uint256_$","typeString":"function (bytes memory[] memory) view external returns (uint256)"}},"id":903,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8848:34:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8837:45:3"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":909,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":906,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8901:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":907,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8905:5:3","memberName":"value","nodeType":"MemberAccess","src":"8901:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":908,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":899,"src":"8914:3:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"8901:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e74205079746820666565","id":910,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8919:23:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_632c8c9cbaacea7e2b268c41b64991b4e752b4acc753e1f2e1b4ac316c65874a","typeString":"literal_string \"Insufficient Pyth fee\""},"value":"Insufficient Pyth fee"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_632c8c9cbaacea7e2b268c41b64991b4e752b4acc753e1f2e1b4ac316c65874a","typeString":"literal_string \"Insufficient Pyth fee\""}],"id":905,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8893:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":911,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8893:50:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":912,"nodeType":"ExpressionStatement","src":"8893:50:3"},{"expression":{"arguments":[{"id":918,"name":"priceUpdateData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":864,"src":"8990:15:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes calldata[] calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes calldata[] calldata"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes calldata[] calldata"}],"expression":{"id":913,"name":"pyth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":247,"src":"8956:4:3","typeDescriptions":{"typeIdentifier":"t_contract$_IPyth_$162","typeString":"contract IPyth"}},"id":915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8961:16:3","memberName":"updatePriceFeeds","nodeType":"MemberAccess","referencedDeclaration":53,"src":"8956:21:3","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$returns$__$","typeString":"function (bytes memory[] memory) payable external"}},"id":917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":916,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":899,"src":"8985:3:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"8956:33:3","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$returns$__$value","typeString":"function (bytes memory[] memory) payable external"}},"id":919,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8956:50:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":920,"nodeType":"ExpressionStatement","src":"8956:50:3"},{"assignments":[925],"declarations":[{"constant":false,"id":925,"mutability":"mutable","name":"currentPrice","nameLocation":"9042:12:3","nodeType":"VariableDeclaration","scope":960,"src":"9017:37:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$203_memory_ptr","typeString":"struct PythStructs.Price"},"typeName":{"id":924,"nodeType":"UserDefinedTypeName","pathNode":{"id":923,"name":"PythStructs.Price","nameLocations":["9017:11:3","9029:5:3"],"nodeType":"IdentifierPath","referencedDeclaration":203,"src":"9017:17:3"},"referencedDeclaration":203,"src":"9017:17:3","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$203_storage_ptr","typeString":"struct PythStructs.Price"}},"visibility":"internal"}],"id":930,"initialValue":{"arguments":[{"id":928,"name":"priceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":866,"src":"9077:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":926,"name":"pyth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":247,"src":"9057:4:3","typeDescriptions":{"typeIdentifier":"t_contract$_IPyth_$162","typeString":"contract IPyth"}},"id":927,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9062:14:3","memberName":"getPriceUnsafe","nodeType":"MemberAccess","referencedDeclaration":15,"src":"9057:19:3","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_bytes32_$returns$_t_struct$_Price_$203_memory_ptr_$","typeString":"function (bytes32) view external returns (struct PythStructs.Price memory)"}},"id":929,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9057:28:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Price_$203_memory_ptr","typeString":"struct PythStructs.Price memory"}},"nodeType":"VariableDeclarationStatement","src":"9017:68:3"},{"body":{"id":958,"nodeType":"Block","src":"9138:200:3","statements":[{"expression":{"arguments":[{"baseExpression":{"id":943,"name":"users","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":852,"src":"9183:5:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":945,"indexExpression":{"id":944,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":932,"src":"9189:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9183:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":946,"name":"scores","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":855,"src":"9210:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":948,"indexExpression":{"id":947,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":932,"src":"9217:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9210:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":949,"name":"riskLevels","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":858,"src":"9238:10:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string calldata[] calldata"}},"id":951,"indexExpression":{"id":950,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":932,"src":"9249:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9238:13:3","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"baseExpression":{"id":952,"name":"reasons","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":861,"src":"9270:7:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string calldata[] calldata"}},"id":954,"indexExpression":{"id":953,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":932,"src":"9278:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9270:10:3","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"id":955,"name":"currentPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":925,"src":"9299:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$203_memory_ptr","typeString":"struct PythStructs.Price memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_struct$_Price_$203_memory_ptr","typeString":"struct PythStructs.Price memory"}],"id":942,"name":"_flagBadBot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1092,"src":"9153:11:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_string_calldata_ptr_$_t_string_calldata_ptr_$_t_struct$_Price_$203_memory_ptr_$returns$__$","typeString":"function (address,uint256,string calldata,string calldata,struct PythStructs.Price memory)"}},"id":956,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9153:173:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":957,"nodeType":"ExpressionStatement","src":"9153:173:3"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":938,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":935,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":932,"src":"9115:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":936,"name":"users","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":852,"src":"9119:5:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":937,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9125:6:3","memberName":"length","nodeType":"MemberAccess","src":"9119:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9115:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":959,"initializationExpression":{"assignments":[932],"declarations":[{"constant":false,"id":932,"mutability":"mutable","name":"i","nameLocation":"9108:1:3","nodeType":"VariableDeclaration","scope":959,"src":"9103:6:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":931,"name":"uint","nodeType":"ElementaryTypeName","src":"9103:4:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":934,"initialValue":{"hexValue":"30","id":933,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"9112:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"9103:10:3"},"loopExpression":{"expression":{"id":940,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"9133:3:3","subExpression":{"id":939,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":932,"src":"9133:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":941,"nodeType":"ExpressionStatement","src":"9133:3:3"},"nodeType":"ForStatement","src":"9098:240:3"}]},"documentation":{"id":849,"nodeType":"StructuredDocumentation","src":"8242:81:3","text":" Flag BAD BOTS with Pyth proof (Manipulative & Front-running)"},"functionSelector":"382ec63f","id":961,"implemented":true,"kind":"function","modifiers":[{"id":869,"kind":"modifierInvocation","modifierName":{"id":868,"name":"onlyAnalyzer","nameLocations":["8602:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":398,"src":"8602:12:3"},"nodeType":"ModifierInvocation","src":"8602:12:3"}],"name":"flagBadBotsWithPythProof","nameLocation":"8338:24:3","nodeType":"FunctionDefinition","parameters":{"id":867,"nodeType":"ParameterList","parameters":[{"constant":false,"id":852,"mutability":"mutable","name":"users","nameLocation":"8392:5:3","nodeType":"VariableDeclaration","scope":961,"src":"8373:24:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":850,"name":"address","nodeType":"ElementaryTypeName","src":"8373:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":851,"nodeType":"ArrayTypeName","src":"8373:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":855,"mutability":"mutable","name":"scores","nameLocation":"8427:6:3","nodeType":"VariableDeclaration","scope":961,"src":"8408:25:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":853,"name":"uint256","nodeType":"ElementaryTypeName","src":"8408:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":854,"nodeType":"ArrayTypeName","src":"8408:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":858,"mutability":"mutable","name":"riskLevels","nameLocation":"8462:10:3","nodeType":"VariableDeclaration","scope":961,"src":"8444:28:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":856,"name":"string","nodeType":"ElementaryTypeName","src":"8444:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":857,"nodeType":"ArrayTypeName","src":"8444:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":861,"mutability":"mutable","name":"reasons","nameLocation":"8501:7:3","nodeType":"VariableDeclaration","scope":961,"src":"8483:25:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":859,"name":"string","nodeType":"ElementaryTypeName","src":"8483:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":860,"nodeType":"ArrayTypeName","src":"8483:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":864,"mutability":"mutable","name":"priceUpdateData","nameLocation":"8536:15:3","nodeType":"VariableDeclaration","scope":961,"src":"8519:32:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":862,"name":"bytes","nodeType":"ElementaryTypeName","src":"8519:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":863,"nodeType":"ArrayTypeName","src":"8519:7:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":866,"mutability":"mutable","name":"priceId","nameLocation":"8570:7:3","nodeType":"VariableDeclaration","scope":961,"src":"8562:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":865,"name":"bytes32","nodeType":"ElementaryTypeName","src":"8562:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"8362:222:3"},"returnParameters":{"id":870,"nodeType":"ParameterList","parameters":[],"src":"8615:0:3"},"scope":1590,"src":"8329:1016:3","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":1091,"nodeType":"Block","src":"9615:1705:3","statements":[{"condition":{"baseExpression":{"id":976,"name":"isGoodBot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":328,"src":"9686:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":978,"indexExpression":{"id":977,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":964,"src":"9696:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9686:15:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":984,"nodeType":"IfStatement","src":"9682:73:3","trueBody":{"id":983,"nodeType":"Block","src":"9703:52:3","statements":[{"expression":{"arguments":[{"id":980,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":964,"src":"9738:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":979,"name":"_removeFromGoodBots","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1337,"src":"9718:19:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":981,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9718:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":982,"nodeType":"ExpressionStatement","src":"9718:25:3"}]}},{"condition":{"id":988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"9820:15:3","subExpression":{"baseExpression":{"id":985,"name":"isBadBot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":332,"src":"9821:8:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":987,"indexExpression":{"id":986,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":964,"src":"9830:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9821:14:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1002,"nodeType":"IfStatement","src":"9816:102:3","trueBody":{"id":1001,"nodeType":"Block","src":"9837:81:3","statements":[{"expression":{"arguments":[{"id":992,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":964,"src":"9865:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":989,"name":"badBots","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":324,"src":"9852:7:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":991,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9860:4:3","memberName":"push","nodeType":"MemberAccess","src":"9852:12:3","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer,address)"}},"id":993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9852:18:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":994,"nodeType":"ExpressionStatement","src":"9852:18:3"},{"expression":{"id":999,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":995,"name":"isBadBot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":332,"src":"9885:8:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":997,"indexExpression":{"id":996,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":964,"src":"9894:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9885:14:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":998,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9902:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"9885:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1000,"nodeType":"ExpressionStatement","src":"9885:21:3"}]}},{"expression":{"id":1016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1003,"name":"botRegistry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":313,"src":"9962:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_BotInfo_$302_storage_$","typeString":"mapping(address => struct BotDetectorWithPyth.BotInfo storage ref)"}},"id":1005,"indexExpression":{"id":1004,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":964,"src":"9974:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"9962:17:3","typeDescriptions":{"typeIdentifier":"t_struct$_BotInfo_$302_storage","typeString":"struct BotDetectorWithPyth.BotInfo storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"74727565","id":1007,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"10016:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"id":1008,"name":"score","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":966,"src":"10042:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1009,"name":"BotCategory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":255,"src":"10072:11:3","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_BotCategory_$255_$","typeString":"type(enum BotDetectorWithPyth.BotCategory)"}},"id":1010,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10084:7:3","memberName":"BAD_BOT","nodeType":"MemberAccess","referencedDeclaration":254,"src":"10072:19:3","typeDescriptions":{"typeIdentifier":"t_enum$_BotCategory_$255","typeString":"enum BotDetectorWithPyth.BotCategory"}},{"hexValue":"4d616e6970756c6174697665","id":1011,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10115:14:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_aec8c60e86e50c531be35a4ff48e525e05e9c6889e65b14725fee158081aec23","typeString":"literal_string \"Manipulative\""},"value":"Manipulative"},{"hexValue":"30","id":1012,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10163:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"id":1013,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"10190:5:3","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1014,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10196:9:3","memberName":"timestamp","nodeType":"MemberAccess","src":"10190:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_BotCategory_$255","typeString":"enum BotDetectorWithPyth.BotCategory"},{"typeIdentifier":"t_stringliteral_aec8c60e86e50c531be35a4ff48e525e05e9c6889e65b14725fee158081aec23","typeString":"literal_string \"Manipulative\""},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1006,"name":"BotInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":302,"src":"9982:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_BotInfo_$302_storage_ptr_$","typeString":"type(struct BotDetectorWithPyth.BotInfo storage pointer)"}},"id":1015,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["10005:9:3","10035:5:3","10062:8:3","10106:7:3","10144:17:3","10179:9:3"],"names":["isFlagged","score","category","botType","liquidityProvided","flaggedAt"],"nodeType":"FunctionCall","src":"9982:235:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_BotInfo_$302_memory_ptr","typeString":"struct BotDetectorWithPyth.BotInfo memory"}},"src":"9962:255:3","typeDescriptions":{"typeIdentifier":"t_struct$_BotInfo_$302_storage","typeString":"struct BotDetectorWithPyth.BotInfo storage ref"}},"id":1017,"nodeType":"ExpressionStatement","src":"9962:255:3"},{"assignments":[1022],"declarations":[{"constant":false,"id":1022,"mutability":"mutable","name":"trades","nameLocation":"10279:6:3","nodeType":"VariableDeclaration","scope":1091,"src":"10257:28:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TradeRecord_$268_storage_$dyn_storage_ptr","typeString":"struct BotDetectorWithPyth.TradeRecord[]"},"typeName":{"baseType":{"id":1020,"nodeType":"UserDefinedTypeName","pathNode":{"id":1019,"name":"TradeRecord","nameLocations":["10257:11:3"],"nodeType":"IdentifierPath","referencedDeclaration":268,"src":"10257:11:3"},"referencedDeclaration":268,"src":"10257:11:3","typeDescriptions":{"typeIdentifier":"t_struct$_TradeRecord_$268_storage_ptr","typeString":"struct BotDetectorWithPyth.TradeRecord"}},"id":1021,"nodeType":"ArrayTypeName","src":"10257:13:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TradeRecord_$268_storage_$dyn_storage_ptr","typeString":"struct BotDetectorWithPyth.TradeRecord[]"}},"visibility":"internal"}],"id":1026,"initialValue":{"baseExpression":{"id":1023,"name":"userTrades","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":308,"src":"10288:10:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_TradeRecord_$268_storage_$dyn_storage_$","typeString":"mapping(address => struct BotDetectorWithPyth.TradeRecord storage ref[] storage ref)"}},"id":1025,"indexExpression":{"id":1024,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":964,"src":"10299:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10288:16:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TradeRecord_$268_storage_$dyn_storage","typeString":"struct BotDetectorWithPyth.TradeRecord storage ref[] storage ref"}},"nodeType":"VariableDeclarationStatement","src":"10257:47:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1027,"name":"trades","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1022,"src":"10319:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TradeRecord_$268_storage_$dyn_storage_ptr","typeString":"struct BotDetectorWithPyth.TradeRecord storage ref[] storage pointer"}},"id":1028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10326:6:3","memberName":"length","nodeType":"MemberAccess","src":"10319:13:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":1029,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10335:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"10319:17:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1090,"nodeType":"IfStatement","src":"10315:998:3","trueBody":{"id":1089,"nodeType":"Block","src":"10338:975:3","statements":[{"assignments":[1033],"declarations":[{"constant":false,"id":1033,"mutability":"mutable","name":"lastTrade","nameLocation":"10372:9:3","nodeType":"VariableDeclaration","scope":1089,"src":"10353:28:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_TradeRecord_$268_memory_ptr","typeString":"struct BotDetectorWithPyth.TradeRecord"},"typeName":{"id":1032,"nodeType":"UserDefinedTypeName","pathNode":{"id":1031,"name":"TradeRecord","nameLocations":["10353:11:3"],"nodeType":"IdentifierPath","referencedDeclaration":268,"src":"10353:11:3"},"referencedDeclaration":268,"src":"10353:11:3","typeDescriptions":{"typeIdentifier":"t_struct$_TradeRecord_$268_storage_ptr","typeString":"struct BotDetectorWithPyth.TradeRecord"}},"visibility":"internal"}],"id":1040,"initialValue":{"baseExpression":{"id":1034,"name":"trades","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1022,"src":"10384:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TradeRecord_$268_storage_$dyn_storage_ptr","typeString":"struct BotDetectorWithPyth.TradeRecord storage ref[] storage pointer"}},"id":1039,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1038,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1035,"name":"trades","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1022,"src":"10391:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TradeRecord_$268_storage_$dyn_storage_ptr","typeString":"struct BotDetectorWithPyth.TradeRecord storage ref[] storage pointer"}},"id":1036,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"10398:6:3","memberName":"length","nodeType":"MemberAccess","src":"10391:13:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1037,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10407:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"10391:17:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10384:25:3","typeDescriptions":{"typeIdentifier":"t_struct$_TradeRecord_$268_storage","typeString":"struct BotDetectorWithPyth.TradeRecord storage ref"}},"nodeType":"VariableDeclarationStatement","src":"10353:56:3"},{"assignments":[1042],"declarations":[{"constant":false,"id":1042,"mutability":"mutable","name":"reactionTime","nameLocation":"10434:12:3","nodeType":"VariableDeclaration","scope":1089,"src":"10426:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1041,"name":"uint256","nodeType":"ElementaryTypeName","src":"10426:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1058,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1047,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1043,"name":"lastTrade","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1033,"src":"10449:9:3","typeDescriptions":{"typeIdentifier":"t_struct$_TradeRecord_$268_memory_ptr","typeString":"struct BotDetectorWithPyth.TradeRecord memory"}},"id":1044,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10459:9:3","memberName":"timestamp","nodeType":"MemberAccess","referencedDeclaration":259,"src":"10449:19:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":1045,"name":"currentPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":973,"src":"10488:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$203_memory_ptr","typeString":"struct PythStructs.Price memory"}},"id":1046,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10501:11:3","memberName":"publishTime","nodeType":"MemberAccess","referencedDeclaration":202,"src":"10488:24:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10449:63:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":1056,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10607:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":1057,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"10449:159:3","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1055,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1052,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1048,"name":"lastTrade","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1033,"src":"10533:9:3","typeDescriptions":{"typeIdentifier":"t_struct$_TradeRecord_$268_memory_ptr","typeString":"struct BotDetectorWithPyth.TradeRecord memory"}},"id":1049,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10543:9:3","memberName":"timestamp","nodeType":"MemberAccess","referencedDeclaration":259,"src":"10533:19:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":1050,"name":"currentPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":973,"src":"10555:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$203_memory_ptr","typeString":"struct PythStructs.Price memory"}},"id":1051,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10568:11:3","memberName":"publishTime","nodeType":"MemberAccess","referencedDeclaration":202,"src":"10555:24:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"10533:46:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1053,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"10532:48:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31303030","id":1054,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"10583:4:3","typeDescriptions":{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"},"value":"1000"},"src":"10532:55:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"10426:182:3"},{"expression":{"id":1077,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1059,"name":"botEvidenceProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":318,"src":"10625:16:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_BotEvidence_$288_storage_$","typeString":"mapping(address => struct BotDetectorWithPyth.BotEvidence storage ref)"}},"id":1061,"indexExpression":{"id":1060,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":964,"src":"10642:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"10625:22:3","typeDescriptions":{"typeIdentifier":"t_struct$_BotEvidence_$288_storage","typeString":"struct BotDetectorWithPyth.BotEvidence storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1063,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":964,"src":"10687:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1064,"name":"lastTrade","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1033,"src":"10726:9:3","typeDescriptions":{"typeIdentifier":"t_struct$_TradeRecord_$268_memory_ptr","typeString":"struct BotDetectorWithPyth.TradeRecord memory"}},"id":1065,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10736:9:3","memberName":"timestamp","nodeType":"MemberAccess","referencedDeclaration":259,"src":"10726:19:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1066,"name":"currentPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":973,"src":"10782:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$203_memory_ptr","typeString":"struct PythStructs.Price memory"}},"id":1067,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10795:11:3","memberName":"publishTime","nodeType":"MemberAccess","referencedDeclaration":202,"src":"10782:24:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1068,"name":"currentPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":973,"src":"10839:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$203_memory_ptr","typeString":"struct PythStructs.Price memory"}},"id":1069,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"10852:5:3","memberName":"price","nodeType":"MemberAccess","referencedDeclaration":196,"src":"10839:18:3","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},{"id":1070,"name":"reactionTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1042,"src":"10892:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1071,"name":"score","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":966,"src":"10933:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1072,"name":"BotCategory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":255,"src":"10967:11:3","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_BotCategory_$255_$","typeString":"type(enum BotDetectorWithPyth.BotCategory)"}},"id":1073,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10979:7:3","memberName":"BAD_BOT","nodeType":"MemberAccess","referencedDeclaration":254,"src":"10967:19:3","typeDescriptions":{"typeIdentifier":"t_enum$_BotCategory_$255","typeString":"enum BotDetectorWithPyth.BotCategory"}},{"hexValue":"4d616e6970756c6174697665","id":1074,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11014:14:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_aec8c60e86e50c531be35a4ff48e525e05e9c6889e65b14725fee158081aec23","typeString":"literal_string \"Manipulative\""},"value":"Manipulative"},{"hexValue":"30","id":1075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11066:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_int64","typeString":"int64"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_BotCategory_$255","typeString":"enum BotDetectorWithPyth.BotCategory"},{"typeIdentifier":"t_stringliteral_aec8c60e86e50c531be35a4ff48e525e05e9c6889e65b14725fee158081aec23","typeString":"literal_string \"Manipulative\""},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1062,"name":"BotEvidence","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":288,"src":"10650:11:3","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_BotEvidence_$288_storage_ptr_$","typeString":"type(struct BotDetectorWithPyth.BotEvidence storage pointer)"}},"id":1076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["10681:4:3","10710:14:3","10764:16:3","10825:12:3","10876:14:3","10923:8:3","10957:8:3","11005:7:3","11047:17:3"],"names":["user","tradeTimestamp","pricePublishTime","priceAtTrade","reactionTimeMs","botScore","category","botType","liquidityProvided"],"nodeType":"FunctionCall","src":"10650:433:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_BotEvidence_$288_memory_ptr","typeString":"struct BotDetectorWithPyth.BotEvidence memory"}},"src":"10625:458:3","typeDescriptions":{"typeIdentifier":"t_struct$_BotEvidence_$288_storage","typeString":"struct BotDetectorWithPyth.BotEvidence storage ref"}},"id":1078,"nodeType":"ExpressionStatement","src":"10625:458:3"},{"eventCall":{"arguments":[{"id":1080,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":964,"src":"11137:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1081,"name":"score","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":966,"src":"11160:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1082,"name":"riskLevel","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":968,"src":"11184:9:3","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"id":1083,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":970,"src":"11212:6:3","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"expression":{"id":1084,"name":"currentPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":973,"src":"11237:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$203_memory_ptr","typeString":"struct PythStructs.Price memory"}},"id":1085,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"11250:5:3","memberName":"price","nodeType":"MemberAccess","referencedDeclaration":196,"src":"11237:18:3","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},{"id":1086,"name":"reactionTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1042,"src":"11274:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_int64","typeString":"int64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1079,"name":"BadBotFlagged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":374,"src":"11105:13:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_int64_$_t_uint256_$returns$__$","typeString":"function (address,uint256,string memory,string memory,int64,uint256)"}},"id":1087,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11105:196:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1088,"nodeType":"EmitStatement","src":"11100:201:3"}]}}]},"documentation":{"id":962,"nodeType":"StructuredDocumentation","src":"9353:56:3","text":" Internal function to flag a bad bot"},"id":1092,"implemented":true,"kind":"function","modifiers":[],"name":"_flagBadBot","nameLocation":"9424:11:3","nodeType":"FunctionDefinition","parameters":{"id":974,"nodeType":"ParameterList","parameters":[{"constant":false,"id":964,"mutability":"mutable","name":"user","nameLocation":"9454:4:3","nodeType":"VariableDeclaration","scope":1092,"src":"9446:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":963,"name":"address","nodeType":"ElementaryTypeName","src":"9446:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":966,"mutability":"mutable","name":"score","nameLocation":"9477:5:3","nodeType":"VariableDeclaration","scope":1092,"src":"9469:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":965,"name":"uint256","nodeType":"ElementaryTypeName","src":"9469:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":968,"mutability":"mutable","name":"riskLevel","nameLocation":"9509:9:3","nodeType":"VariableDeclaration","scope":1092,"src":"9493:25:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":967,"name":"string","nodeType":"ElementaryTypeName","src":"9493:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":970,"mutability":"mutable","name":"reason","nameLocation":"9545:6:3","nodeType":"VariableDeclaration","scope":1092,"src":"9529:22:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":969,"name":"string","nodeType":"ElementaryTypeName","src":"9529:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":973,"mutability":"mutable","name":"currentPrice","nameLocation":"9587:12:3","nodeType":"VariableDeclaration","scope":1092,"src":"9562:37:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$203_memory_ptr","typeString":"struct PythStructs.Price"},"typeName":{"id":972,"nodeType":"UserDefinedTypeName","pathNode":{"id":971,"name":"PythStructs.Price","nameLocations":["9562:11:3","9574:5:3"],"nodeType":"IdentifierPath","referencedDeclaration":203,"src":"9562:17:3"},"referencedDeclaration":203,"src":"9562:17:3","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$203_storage_ptr","typeString":"struct PythStructs.Price"}},"visibility":"internal"}],"src":"9435:171:3"},"returnParameters":{"id":975,"nodeType":"ParameterList","parameters":[],"src":"9615:0:3"},"scope":1590,"src":"9415:1905:3","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1192,"nodeType":"Block","src":"11615:769:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1111,"name":"users","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"11634:5:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":1112,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11640:6:3","memberName":"length","nodeType":"MemberAccess","src":"11634:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1113,"name":"scores","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1099,"src":"11650:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":1114,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11657:6:3","memberName":"length","nodeType":"MemberAccess","src":"11650:13:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11634:29:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c656e677468206d69736d61746368","id":1116,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11665:17:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_bb46a6fe2ea6b18f462b236ffc808abf66026114a0bc6a6c72c11149e00d9ea8","typeString":"literal_string \"Length mismatch\""},"value":"Length mismatch"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_bb46a6fe2ea6b18f462b236ffc808abf66026114a0bc6a6c72c11149e00d9ea8","typeString":"literal_string \"Length mismatch\""}],"id":1110,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11626:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1117,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11626:57:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1118,"nodeType":"ExpressionStatement","src":"11626:57:3"},{"body":{"id":1190,"nodeType":"Block","src":"11736:641:3","statements":[{"condition":{"baseExpression":{"id":1130,"name":"isBadBot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":332,"src":"11814:8:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1134,"indexExpression":{"baseExpression":{"id":1131,"name":"users","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"11823:5:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":1133,"indexExpression":{"id":1132,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1120,"src":"11829:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11823:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11814:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1142,"nodeType":"IfStatement","src":"11810:87:3","trueBody":{"id":1141,"nodeType":"Block","src":"11834:63:3","statements":[{"expression":{"arguments":[{"baseExpression":{"id":1136,"name":"users","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"11872:5:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":1138,"indexExpression":{"id":1137,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1120,"src":"11878:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11872:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1135,"name":"_removeFromBadBots","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1387,"src":"11853:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1139,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11853:28:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1140,"nodeType":"ExpressionStatement","src":"11853:28:3"}]}},{"condition":{"id":1148,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"11917:20:3","subExpression":{"baseExpression":{"id":1143,"name":"isGoodBot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":328,"src":"11918:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1147,"indexExpression":{"baseExpression":{"id":1144,"name":"users","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"11928:5:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":1146,"indexExpression":{"id":1145,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1120,"src":"11934:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11928:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11918:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1166,"nodeType":"IfStatement","src":"11913:129:3","trueBody":{"id":1165,"nodeType":"Block","src":"11939:103:3","statements":[{"expression":{"arguments":[{"baseExpression":{"id":1152,"name":"users","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"11972:5:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":1154,"indexExpression":{"id":1153,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1120,"src":"11978:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"11972:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1149,"name":"goodBots","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":321,"src":"11958:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":1151,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11967:4:3","memberName":"push","nodeType":"MemberAccess","src":"11958:13:3","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer,address)"}},"id":1155,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11958:23:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1156,"nodeType":"ExpressionStatement","src":"11958:23:3"},{"expression":{"id":1163,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1157,"name":"isGoodBot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":328,"src":"12000:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1161,"indexExpression":{"baseExpression":{"id":1158,"name":"users","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"12010:5:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":1160,"indexExpression":{"id":1159,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1120,"src":"12016:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12010:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12000:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1162,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12022:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"12000:26:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1164,"nodeType":"ExpressionStatement","src":"12000:26:3"}]}},{"expression":{"id":1188,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1167,"name":"botRegistry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":313,"src":"12058:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_BotInfo_$302_storage_$","typeString":"mapping(address => struct BotDetectorWithPyth.BotInfo storage ref)"}},"id":1171,"indexExpression":{"baseExpression":{"id":1168,"name":"users","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"12070:5:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":1170,"indexExpression":{"id":1169,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1120,"src":"12076:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12070:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"12058:21:3","typeDescriptions":{"typeIdentifier":"t_struct$_BotInfo_$302_storage","typeString":"struct BotDetectorWithPyth.BotInfo storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"74727565","id":1173,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"12120:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"baseExpression":{"id":1174,"name":"scores","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1099,"src":"12150:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":1176,"indexExpression":{"id":1175,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1120,"src":"12157:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12150:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1177,"name":"BotCategory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":255,"src":"12188:11:3","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_BotCategory_$255_$","typeString":"type(enum BotDetectorWithPyth.BotCategory)"}},"id":1178,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12200:8:3","memberName":"GOOD_BOT","nodeType":"MemberAccess","referencedDeclaration":253,"src":"12188:20:3","typeDescriptions":{"typeIdentifier":"t_enum$_BotCategory_$255","typeString":"enum BotDetectorWithPyth.BotCategory"}},{"baseExpression":{"id":1179,"name":"botTypes","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1102,"src":"12236:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string calldata[] calldata"}},"id":1181,"indexExpression":{"id":1180,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1120,"src":"12245:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12236:11:3","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"baseExpression":{"id":1182,"name":"liquidityAmounts","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1105,"src":"12285:16:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":1184,"indexExpression":{"id":1183,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1120,"src":"12302:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12285:19:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1185,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"12334:5:3","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1186,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12340:9:3","memberName":"timestamp","nodeType":"MemberAccess","src":"12334:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_BotCategory_$255","typeString":"enum BotDetectorWithPyth.BotCategory"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1172,"name":"BotInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":302,"src":"12082:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_BotInfo_$302_storage_ptr_$","typeString":"type(struct BotDetectorWithPyth.BotInfo storage pointer)"}},"id":1187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["12109:9:3","12143:5:3","12178:8:3","12227:7:3","12266:17:3","12323:9:3"],"names":["isFlagged","score","category","botType","liquidityProvided","flaggedAt"],"nodeType":"FunctionCall","src":"12082:283:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_BotInfo_$302_memory_ptr","typeString":"struct BotDetectorWithPyth.BotInfo memory"}},"src":"12058:307:3","typeDescriptions":{"typeIdentifier":"t_struct$_BotInfo_$302_storage","typeString":"struct BotDetectorWithPyth.BotInfo storage ref"}},"id":1189,"nodeType":"ExpressionStatement","src":"12058:307:3"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1126,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1123,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1120,"src":"11713:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1124,"name":"users","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1096,"src":"11717:5:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":1125,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"11723:6:3","memberName":"length","nodeType":"MemberAccess","src":"11717:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"11713:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1191,"initializationExpression":{"assignments":[1120],"declarations":[{"constant":false,"id":1120,"mutability":"mutable","name":"i","nameLocation":"11706:1:3","nodeType":"VariableDeclaration","scope":1191,"src":"11701:6:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1119,"name":"uint","nodeType":"ElementaryTypeName","src":"11701:4:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1122,"initialValue":{"hexValue":"30","id":1121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"11710:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"11701:10:3"},"loopExpression":{"expression":{"id":1128,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"11731:3:3","subExpression":{"id":1127,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1120,"src":"11731:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1129,"nodeType":"ExpressionStatement","src":"11731:3:3"},"nodeType":"ForStatement","src":"11696:681:3"}]},"documentation":{"id":1093,"nodeType":"StructuredDocumentation","src":"11328:76:3","text":" Regular flagging for good bots (cheaper, no Pyth proof)"},"functionSelector":"472279a2","id":1193,"implemented":true,"kind":"function","modifiers":[{"id":1108,"kind":"modifierInvocation","modifierName":{"id":1107,"name":"onlyAnalyzer","nameLocations":["11602:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":398,"src":"11602:12:3"},"nodeType":"ModifierInvocation","src":"11602:12:3"}],"name":"flagGoodBots","nameLocation":"11419:12:3","nodeType":"FunctionDefinition","parameters":{"id":1106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1096,"mutability":"mutable","name":"users","nameLocation":"11461:5:3","nodeType":"VariableDeclaration","scope":1193,"src":"11442:24:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1094,"name":"address","nodeType":"ElementaryTypeName","src":"11442:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1095,"nodeType":"ArrayTypeName","src":"11442:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1099,"mutability":"mutable","name":"scores","nameLocation":"11496:6:3","nodeType":"VariableDeclaration","scope":1193,"src":"11477:25:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1097,"name":"uint256","nodeType":"ElementaryTypeName","src":"11477:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1098,"nodeType":"ArrayTypeName","src":"11477:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1102,"mutability":"mutable","name":"botTypes","nameLocation":"11531:8:3","nodeType":"VariableDeclaration","scope":1193,"src":"11513:26:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":1100,"name":"string","nodeType":"ElementaryTypeName","src":"11513:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":1101,"nodeType":"ArrayTypeName","src":"11513:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":1105,"mutability":"mutable","name":"liquidityAmounts","nameLocation":"11569:16:3","nodeType":"VariableDeclaration","scope":1193,"src":"11550:35:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1103,"name":"uint256","nodeType":"ElementaryTypeName","src":"11550:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1104,"nodeType":"ArrayTypeName","src":"11550:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"src":"11431:161:3"},"returnParameters":{"id":1109,"nodeType":"ParameterList","parameters":[],"src":"11615:0:3"},"scope":1590,"src":"11410:974:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1286,"nodeType":"Block","src":"12633:753:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1213,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1209,"name":"users","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"12652:5:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":1210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12658:6:3","memberName":"length","nodeType":"MemberAccess","src":"12652:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":1211,"name":"scores","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"12668:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":1212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12675:6:3","memberName":"length","nodeType":"MemberAccess","src":"12668:13:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12652:29:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c656e677468206d69736d61746368","id":1214,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12683:17:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_bb46a6fe2ea6b18f462b236ffc808abf66026114a0bc6a6c72c11149e00d9ea8","typeString":"literal_string \"Length mismatch\""},"value":"Length mismatch"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_bb46a6fe2ea6b18f462b236ffc808abf66026114a0bc6a6c72c11149e00d9ea8","typeString":"literal_string \"Length mismatch\""}],"id":1208,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12644:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1215,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12644:57:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1216,"nodeType":"ExpressionStatement","src":"12644:57:3"},{"body":{"id":1284,"nodeType":"Block","src":"12754:625:3","statements":[{"condition":{"baseExpression":{"id":1228,"name":"isGoodBot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":328,"src":"12833:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1232,"indexExpression":{"baseExpression":{"id":1229,"name":"users","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"12843:5:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":1231,"indexExpression":{"id":1230,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1218,"src":"12849:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12843:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12833:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1240,"nodeType":"IfStatement","src":"12829:89:3","trueBody":{"id":1239,"nodeType":"Block","src":"12854:64:3","statements":[{"expression":{"arguments":[{"baseExpression":{"id":1234,"name":"users","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"12893:5:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":1236,"indexExpression":{"id":1235,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1218,"src":"12899:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12893:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1233,"name":"_removeFromGoodBots","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1337,"src":"12873:19:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1237,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12873:29:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1238,"nodeType":"ExpressionStatement","src":"12873:29:3"}]}},{"condition":{"id":1246,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"12938:19:3","subExpression":{"baseExpression":{"id":1241,"name":"isBadBot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":332,"src":"12939:8:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1245,"indexExpression":{"baseExpression":{"id":1242,"name":"users","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"12948:5:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":1244,"indexExpression":{"id":1243,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1218,"src":"12954:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12948:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12939:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1264,"nodeType":"IfStatement","src":"12934:126:3","trueBody":{"id":1263,"nodeType":"Block","src":"12959:101:3","statements":[{"expression":{"arguments":[{"baseExpression":{"id":1250,"name":"users","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"12991:5:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":1252,"indexExpression":{"id":1251,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1218,"src":"12997:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"12991:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"expression":{"id":1247,"name":"badBots","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":324,"src":"12978:7:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":1249,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12986:4:3","memberName":"push","nodeType":"MemberAccess","src":"12978:12:3","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer,address)"}},"id":1253,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12978:22:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1254,"nodeType":"ExpressionStatement","src":"12978:22:3"},{"expression":{"id":1261,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1255,"name":"isBadBot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":332,"src":"13019:8:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1259,"indexExpression":{"baseExpression":{"id":1256,"name":"users","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"13028:5:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":1258,"indexExpression":{"id":1257,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1218,"src":"13034:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13028:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13019:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1260,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13040:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"13019:25:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1262,"nodeType":"ExpressionStatement","src":"13019:25:3"}]}},{"expression":{"id":1282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1265,"name":"botRegistry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":313,"src":"13076:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_BotInfo_$302_storage_$","typeString":"mapping(address => struct BotDetectorWithPyth.BotInfo storage ref)"}},"id":1269,"indexExpression":{"baseExpression":{"id":1266,"name":"users","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"13088:5:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":1268,"indexExpression":{"id":1267,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1218,"src":"13094:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13088:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13076:21:3","typeDescriptions":{"typeIdentifier":"t_struct$_BotInfo_$302_storage","typeString":"struct BotDetectorWithPyth.BotInfo storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"hexValue":"74727565","id":1271,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13138:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"baseExpression":{"id":1272,"name":"scores","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"13168:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":1274,"indexExpression":{"id":1273,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1218,"src":"13175:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13168:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":1275,"name":"BotCategory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":255,"src":"13206:11:3","typeDescriptions":{"typeIdentifier":"t_type$_t_enum$_BotCategory_$255_$","typeString":"type(enum BotDetectorWithPyth.BotCategory)"}},"id":1276,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13218:7:3","memberName":"BAD_BOT","nodeType":"MemberAccess","referencedDeclaration":254,"src":"13206:19:3","typeDescriptions":{"typeIdentifier":"t_enum$_BotCategory_$255","typeString":"enum BotDetectorWithPyth.BotCategory"}},{"hexValue":"4d616e6970756c6174697665","id":1277,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13253:14:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_aec8c60e86e50c531be35a4ff48e525e05e9c6889e65b14725fee158081aec23","typeString":"literal_string \"Manipulative\""},"value":"Manipulative"},{"hexValue":"30","id":1278,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13305:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"expression":{"id":1279,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"13336:5:3","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1280,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13342:9:3","memberName":"timestamp","nodeType":"MemberAccess","src":"13336:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_enum$_BotCategory_$255","typeString":"enum BotDetectorWithPyth.BotCategory"},{"typeIdentifier":"t_stringliteral_aec8c60e86e50c531be35a4ff48e525e05e9c6889e65b14725fee158081aec23","typeString":"literal_string \"Manipulative\""},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1270,"name":"BotInfo","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":302,"src":"13100:7:3","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_BotInfo_$302_storage_ptr_$","typeString":"type(struct BotDetectorWithPyth.BotInfo storage pointer)"}},"id":1281,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["13127:9:3","13161:5:3","13196:8:3","13244:7:3","13286:17:3","13325:9:3"],"names":["isFlagged","score","category","botType","liquidityProvided","flaggedAt"],"nodeType":"FunctionCall","src":"13100:267:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_BotInfo_$302_memory_ptr","typeString":"struct BotDetectorWithPyth.BotInfo memory"}},"src":"13076:291:3","typeDescriptions":{"typeIdentifier":"t_struct$_BotInfo_$302_storage","typeString":"struct BotDetectorWithPyth.BotInfo storage ref"}},"id":1283,"nodeType":"ExpressionStatement","src":"13076:291:3"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1224,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1221,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1218,"src":"12731:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1222,"name":"users","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"12735:5:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":1223,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"12741:6:3","memberName":"length","nodeType":"MemberAccess","src":"12735:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"12731:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1285,"initializationExpression":{"assignments":[1218],"declarations":[{"constant":false,"id":1218,"mutability":"mutable","name":"i","nameLocation":"12724:1:3","nodeType":"VariableDeclaration","scope":1285,"src":"12719:6:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1217,"name":"uint","nodeType":"ElementaryTypeName","src":"12719:4:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1220,"initialValue":{"hexValue":"30","id":1219,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"12728:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"12719:10:3"},"loopExpression":{"expression":{"id":1226,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"12749:3:3","subExpression":{"id":1225,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1218,"src":"12749:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1227,"nodeType":"ExpressionStatement","src":"12749:3:3"},"nodeType":"ForStatement","src":"12714:665:3"}]},"documentation":{"id":1194,"nodeType":"StructuredDocumentation","src":"12392:75:3","text":" Regular flagging for bad bots (cheaper, no Pyth proof)"},"functionSelector":"00d2798b","id":1287,"implemented":true,"kind":"function","modifiers":[{"id":1206,"kind":"modifierInvocation","modifierName":{"id":1205,"name":"onlyAnalyzer","nameLocations":["12620:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":398,"src":"12620:12:3"},"nodeType":"ModifierInvocation","src":"12620:12:3"}],"name":"flagBadBots","nameLocation":"12482:11:3","nodeType":"FunctionDefinition","parameters":{"id":1204,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1197,"mutability":"mutable","name":"users","nameLocation":"12523:5:3","nodeType":"VariableDeclaration","scope":1287,"src":"12504:24:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1195,"name":"address","nodeType":"ElementaryTypeName","src":"12504:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1196,"nodeType":"ArrayTypeName","src":"12504:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":1200,"mutability":"mutable","name":"scores","nameLocation":"12558:6:3","nodeType":"VariableDeclaration","scope":1287,"src":"12539:25:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1198,"name":"uint256","nodeType":"ElementaryTypeName","src":"12539:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1199,"nodeType":"ArrayTypeName","src":"12539:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":1203,"mutability":"mutable","name":"riskLevels","nameLocation":"12593:10:3","nodeType":"VariableDeclaration","scope":1287,"src":"12575:28:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":1201,"name":"string","nodeType":"ElementaryTypeName","src":"12575:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":1202,"nodeType":"ArrayTypeName","src":"12575:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"12493:117:3"},"returnParameters":{"id":1207,"nodeType":"ParameterList","parameters":[],"src":"12633:0:3"},"scope":1590,"src":"12473:913:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1336,"nodeType":"Block","src":"13504:289:3","statements":[{"body":{"id":1334,"nodeType":"Block","src":"13558:228:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1308,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":1304,"name":"goodBots","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":321,"src":"13577:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":1306,"indexExpression":{"id":1305,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1294,"src":"13586:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13577:11:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1307,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1290,"src":"13592:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13577:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1333,"nodeType":"IfStatement","src":"13573:202:3","trueBody":{"id":1332,"nodeType":"Block","src":"13598:177:3","statements":[{"expression":{"id":1318,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1309,"name":"goodBots","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":321,"src":"13617:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":1311,"indexExpression":{"id":1310,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1294,"src":"13626:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13617:11:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":1312,"name":"goodBots","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":321,"src":"13631:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":1317,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1313,"name":"goodBots","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":321,"src":"13640:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":1314,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13649:6:3","memberName":"length","nodeType":"MemberAccess","src":"13640:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1315,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13658:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"13640:19:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13631:29:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13617:43:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1319,"nodeType":"ExpressionStatement","src":"13617:43:3"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1320,"name":"goodBots","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":321,"src":"13679:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":1322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13688:3:3","memberName":"pop","nodeType":"MemberAccess","src":"13679:12:3","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer)"}},"id":1323,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13679:14:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1324,"nodeType":"ExpressionStatement","src":"13679:14:3"},{"expression":{"id":1329,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1325,"name":"isGoodBot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":328,"src":"13712:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1327,"indexExpression":{"id":1326,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1290,"src":"13722:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"13712:15:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":1328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"13730:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"13712:23:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1330,"nodeType":"ExpressionStatement","src":"13712:23:3"},{"id":1331,"nodeType":"Break","src":"13754:5:3"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1297,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1294,"src":"13532:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1298,"name":"goodBots","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":321,"src":"13536:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":1299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13545:6:3","memberName":"length","nodeType":"MemberAccess","src":"13536:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13532:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1335,"initializationExpression":{"assignments":[1294],"declarations":[{"constant":false,"id":1294,"mutability":"mutable","name":"i","nameLocation":"13525:1:3","nodeType":"VariableDeclaration","scope":1335,"src":"13520:6:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1293,"name":"uint","nodeType":"ElementaryTypeName","src":"13520:4:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1296,"initialValue":{"hexValue":"30","id":1295,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13529:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13520:10:3"},"loopExpression":{"expression":{"id":1302,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"13553:3:3","subExpression":{"id":1301,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1294,"src":"13553:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1303,"nodeType":"ExpressionStatement","src":"13553:3:3"},"nodeType":"ForStatement","src":"13515:271:3"}]},"documentation":{"id":1288,"nodeType":"StructuredDocumentation","src":"13394:53:3","text":" Remove user from good bots array"},"id":1337,"implemented":true,"kind":"function","modifiers":[],"name":"_removeFromGoodBots","nameLocation":"13462:19:3","nodeType":"FunctionDefinition","parameters":{"id":1291,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1290,"mutability":"mutable","name":"user","nameLocation":"13490:4:3","nodeType":"VariableDeclaration","scope":1337,"src":"13482:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1289,"name":"address","nodeType":"ElementaryTypeName","src":"13482:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"13481:14:3"},"returnParameters":{"id":1292,"nodeType":"ParameterList","parameters":[],"src":"13504:0:3"},"scope":1590,"src":"13453:340:3","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1386,"nodeType":"Block","src":"13909:282:3","statements":[{"body":{"id":1384,"nodeType":"Block","src":"13962:222:3","statements":[{"condition":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1358,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"id":1354,"name":"badBots","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":324,"src":"13981:7:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":1356,"indexExpression":{"id":1355,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1344,"src":"13989:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"13981:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1357,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1340,"src":"13995:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"13981:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1383,"nodeType":"IfStatement","src":"13977:196:3","trueBody":{"id":1382,"nodeType":"Block","src":"14001:172:3","statements":[{"expression":{"id":1368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1359,"name":"badBots","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":324,"src":"14020:7:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":1361,"indexExpression":{"id":1360,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1344,"src":"14028:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"14020:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":1362,"name":"badBots","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":324,"src":"14033:7:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":1367,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1366,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1363,"name":"badBots","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":324,"src":"14041:7:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":1364,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14049:6:3","memberName":"length","nodeType":"MemberAccess","src":"14041:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":1365,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"14058:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"14041:18:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14033:27:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"14020:40:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1369,"nodeType":"ExpressionStatement","src":"14020:40:3"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"expression":{"id":1370,"name":"badBots","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":324,"src":"14079:7:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":1372,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"14087:3:3","memberName":"pop","nodeType":"MemberAccess","src":"14079:11:3","typeDescriptions":{"typeIdentifier":"t_function_arraypop_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$","typeString":"function (address[] storage pointer)"}},"id":1373,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14079:13:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1374,"nodeType":"ExpressionStatement","src":"14079:13:3"},{"expression":{"id":1379,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":1375,"name":"isBadBot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":332,"src":"14111:8:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1377,"indexExpression":{"id":1376,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1340,"src":"14120:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"14111:14:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":1378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"14128:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"14111:22:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1380,"nodeType":"ExpressionStatement","src":"14111:22:3"},{"id":1381,"nodeType":"Break","src":"14152:5:3"}]}}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1347,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1344,"src":"13937:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":1348,"name":"badBots","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":324,"src":"13941:7:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":1349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"13949:6:3","memberName":"length","nodeType":"MemberAccess","src":"13941:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"13937:18:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1385,"initializationExpression":{"assignments":[1344],"declarations":[{"constant":false,"id":1344,"mutability":"mutable","name":"i","nameLocation":"13930:1:3","nodeType":"VariableDeclaration","scope":1385,"src":"13925:6:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1343,"name":"uint","nodeType":"ElementaryTypeName","src":"13925:4:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1346,"initialValue":{"hexValue":"30","id":1345,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"13934:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"13925:10:3"},"loopExpression":{"expression":{"id":1352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"13957:3:3","subExpression":{"id":1351,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1344,"src":"13957:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1353,"nodeType":"ExpressionStatement","src":"13957:3:3"},"nodeType":"ForStatement","src":"13920:264:3"}]},"documentation":{"id":1338,"nodeType":"StructuredDocumentation","src":"13801:52:3","text":" Remove user from bad bots array"},"id":1387,"implemented":true,"kind":"function","modifiers":[],"name":"_removeFromBadBots","nameLocation":"13868:18:3","nodeType":"FunctionDefinition","parameters":{"id":1341,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1340,"mutability":"mutable","name":"user","nameLocation":"13895:4:3","nodeType":"VariableDeclaration","scope":1387,"src":"13887:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1339,"name":"address","nodeType":"ElementaryTypeName","src":"13887:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"13886:14:3"},"returnParameters":{"id":1342,"nodeType":"ParameterList","parameters":[],"src":"13909:0:3"},"scope":1590,"src":"13859:332:3","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":1436,"nodeType":"Block","src":"14305:373:3","statements":[{"assignments":[1397],"declarations":[{"constant":false,"id":1397,"mutability":"mutable","name":"previousCategory","nameLocation":"14328:16:3","nodeType":"VariableDeclaration","scope":1436,"src":"14316:28:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_enum$_BotCategory_$255","typeString":"enum BotDetectorWithPyth.BotCategory"},"typeName":{"id":1396,"nodeType":"UserDefinedTypeName","pathNode":{"id":1395,"name":"BotCategory","nameLocations":["14316:11:3"],"nodeType":"IdentifierPath","referencedDeclaration":255,"src":"14316:11:3"},"referencedDeclaration":255,"src":"14316:11:3","typeDescriptions":{"typeIdentifier":"t_enum$_BotCategory_$255","typeString":"enum BotDetectorWithPyth.BotCategory"}},"visibility":"internal"}],"id":1402,"initialValue":{"expression":{"baseExpression":{"id":1398,"name":"botRegistry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":313,"src":"14347:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_BotInfo_$302_storage_$","typeString":"mapping(address => struct BotDetectorWithPyth.BotInfo storage ref)"}},"id":1400,"indexExpression":{"id":1399,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1390,"src":"14359:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14347:17:3","typeDescriptions":{"typeIdentifier":"t_struct$_BotInfo_$302_storage","typeString":"struct BotDetectorWithPyth.BotInfo storage ref"}},"id":1401,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"14365:8:3","memberName":"category","nodeType":"MemberAccess","referencedDeclaration":295,"src":"14347:26:3","typeDescriptions":{"typeIdentifier":"t_enum$_BotCategory_$255","typeString":"enum BotDetectorWithPyth.BotCategory"}},"nodeType":"VariableDeclarationStatement","src":"14316:57:3"},{"condition":{"baseExpression":{"id":1403,"name":"isGoodBot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":328,"src":"14390:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1405,"indexExpression":{"id":1404,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1390,"src":"14400:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14390:15:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1411,"nodeType":"IfStatement","src":"14386:73:3","trueBody":{"id":1410,"nodeType":"Block","src":"14407:52:3","statements":[{"expression":{"arguments":[{"id":1407,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1390,"src":"14442:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1406,"name":"_removeFromGoodBots","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1337,"src":"14422:19:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1408,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14422:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1409,"nodeType":"ExpressionStatement","src":"14422:25:3"}]}},{"condition":{"baseExpression":{"id":1412,"name":"isBadBot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":332,"src":"14473:8:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1414,"indexExpression":{"id":1413,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1390,"src":"14482:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14473:14:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1420,"nodeType":"IfStatement","src":"14469:71:3","trueBody":{"id":1419,"nodeType":"Block","src":"14489:51:3","statements":[{"expression":{"arguments":[{"id":1416,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1390,"src":"14523:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":1415,"name":"_removeFromBadBots","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1387,"src":"14504:18:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":1417,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14504:24:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1418,"nodeType":"ExpressionStatement","src":"14504:24:3"}]}},{"expression":{"id":1424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"14552:24:3","subExpression":{"baseExpression":{"id":1421,"name":"botRegistry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":313,"src":"14559:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_BotInfo_$302_storage_$","typeString":"mapping(address => struct BotDetectorWithPyth.BotInfo storage ref)"}},"id":1423,"indexExpression":{"id":1422,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1390,"src":"14571:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"14559:17:3","typeDescriptions":{"typeIdentifier":"t_struct$_BotInfo_$302_storage","typeString":"struct BotDetectorWithPyth.BotInfo storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1425,"nodeType":"ExpressionStatement","src":"14552:24:3"},{"expression":{"id":1429,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"delete","prefix":true,"src":"14587:29:3","subExpression":{"baseExpression":{"id":1426,"name":"botEvidenceProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":318,"src":"14594:16:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_BotEvidence_$288_storage_$","typeString":"mapping(address => struct BotDetectorWithPyth.BotEvidence storage ref)"}},"id":1428,"indexExpression":{"id":1427,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1390,"src":"14611:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"14594:22:3","typeDescriptions":{"typeIdentifier":"t_struct$_BotEvidence_$288_storage","typeString":"struct BotDetectorWithPyth.BotEvidence storage ref"}},"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1430,"nodeType":"ExpressionStatement","src":"14587:29:3"},{"eventCall":{"arguments":[{"id":1432,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1390,"src":"14647:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1433,"name":"previousCategory","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1397,"src":"14653:16:3","typeDescriptions":{"typeIdentifier":"t_enum$_BotCategory_$255","typeString":"enum BotDetectorWithPyth.BotCategory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_enum$_BotCategory_$255","typeString":"enum BotDetectorWithPyth.BotCategory"}],"id":1431,"name":"BotUnflagged","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":381,"src":"14634:12:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_enum$_BotCategory_$255_$returns$__$","typeString":"function (address,enum BotDetectorWithPyth.BotCategory)"}},"id":1434,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14634:36:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1435,"nodeType":"EmitStatement","src":"14629:41:3"}]},"documentation":{"id":1388,"nodeType":"StructuredDocumentation","src":"14199:45:3","text":" Unflag a user completely"},"functionSelector":"fed20c78","id":1437,"implemented":true,"kind":"function","modifiers":[{"id":1393,"kind":"modifierInvocation","modifierName":{"id":1392,"name":"onlyAnalyzer","nameLocations":["14292:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":398,"src":"14292:12:3"},"nodeType":"ModifierInvocation","src":"14292:12:3"}],"name":"unflagBot","nameLocation":"14259:9:3","nodeType":"FunctionDefinition","parameters":{"id":1391,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1390,"mutability":"mutable","name":"user","nameLocation":"14277:4:3","nodeType":"VariableDeclaration","scope":1437,"src":"14269:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1389,"name":"address","nodeType":"ElementaryTypeName","src":"14269:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14268:14:3"},"returnParameters":{"id":1394,"nodeType":"ParameterList","parameters":[],"src":"14305:0:3"},"scope":1590,"src":"14250:428:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1451,"nodeType":"Block","src":"14835:42:3","statements":[{"expression":{"baseExpression":{"id":1447,"name":"userTrades","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":308,"src":"14853:10:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_TradeRecord_$268_storage_$dyn_storage_$","typeString":"mapping(address => struct BotDetectorWithPyth.TradeRecord storage ref[] storage ref)"}},"id":1449,"indexExpression":{"id":1448,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1440,"src":"14864:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"14853:16:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TradeRecord_$268_storage_$dyn_storage","typeString":"struct BotDetectorWithPyth.TradeRecord storage ref[] storage ref"}},"functionReturnParameters":1446,"id":1450,"nodeType":"Return","src":"14846:23:3"}]},"documentation":{"id":1438,"nodeType":"StructuredDocumentation","src":"14686:45:3","text":" Get user's trade history"},"functionSelector":"927c7742","id":1452,"implemented":true,"kind":"function","modifiers":[],"name":"getUserTrades","nameLocation":"14746:13:3","nodeType":"FunctionDefinition","parameters":{"id":1441,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1440,"mutability":"mutable","name":"user","nameLocation":"14778:4:3","nodeType":"VariableDeclaration","scope":1452,"src":"14770:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1439,"name":"address","nodeType":"ElementaryTypeName","src":"14770:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14759:30:3"},"returnParameters":{"id":1446,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1445,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1452,"src":"14813:20:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TradeRecord_$268_memory_ptr_$dyn_memory_ptr","typeString":"struct BotDetectorWithPyth.TradeRecord[]"},"typeName":{"baseType":{"id":1443,"nodeType":"UserDefinedTypeName","pathNode":{"id":1442,"name":"TradeRecord","nameLocations":["14813:11:3"],"nodeType":"IdentifierPath","referencedDeclaration":268,"src":"14813:11:3"},"referencedDeclaration":268,"src":"14813:11:3","typeDescriptions":{"typeIdentifier":"t_struct$_TradeRecord_$268_storage_ptr","typeString":"struct BotDetectorWithPyth.TradeRecord"}},"id":1444,"nodeType":"ArrayTypeName","src":"14813:13:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TradeRecord_$268_storage_$dyn_storage_ptr","typeString":"struct BotDetectorWithPyth.TradeRecord[]"}},"visibility":"internal"}],"src":"14812:22:3"},"scope":1590,"src":"14737:140:3","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1475,"nodeType":"Block","src":"15019:104:3","statements":[{"assignments":[1464],"declarations":[{"constant":false,"id":1464,"mutability":"mutable","name":"info","nameLocation":"15045:4:3","nodeType":"VariableDeclaration","scope":1475,"src":"15030:19:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_BotInfo_$302_memory_ptr","typeString":"struct BotDetectorWithPyth.BotInfo"},"typeName":{"id":1463,"nodeType":"UserDefinedTypeName","pathNode":{"id":1462,"name":"BotInfo","nameLocations":["15030:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":302,"src":"15030:7:3"},"referencedDeclaration":302,"src":"15030:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_BotInfo_$302_storage_ptr","typeString":"struct BotDetectorWithPyth.BotInfo"}},"visibility":"internal"}],"id":1468,"initialValue":{"baseExpression":{"id":1465,"name":"botRegistry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":313,"src":"15052:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_BotInfo_$302_storage_$","typeString":"mapping(address => struct BotDetectorWithPyth.BotInfo storage ref)"}},"id":1467,"indexExpression":{"id":1466,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1455,"src":"15064:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15052:17:3","typeDescriptions":{"typeIdentifier":"t_struct$_BotInfo_$302_storage","typeString":"struct BotDetectorWithPyth.BotInfo storage ref"}},"nodeType":"VariableDeclarationStatement","src":"15030:39:3"},{"expression":{"components":[{"expression":{"id":1469,"name":"info","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1464,"src":"15088:4:3","typeDescriptions":{"typeIdentifier":"t_struct$_BotInfo_$302_memory_ptr","typeString":"struct BotDetectorWithPyth.BotInfo memory"}},"id":1470,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15093:9:3","memberName":"isFlagged","nodeType":"MemberAccess","referencedDeclaration":290,"src":"15088:14:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"expression":{"id":1471,"name":"info","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1464,"src":"15104:4:3","typeDescriptions":{"typeIdentifier":"t_struct$_BotInfo_$302_memory_ptr","typeString":"struct BotDetectorWithPyth.BotInfo memory"}},"id":1472,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"15109:5:3","memberName":"score","nodeType":"MemberAccess","referencedDeclaration":292,"src":"15104:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":1473,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"15087:28:3","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":1461,"id":1474,"nodeType":"Return","src":"15080:35:3"}]},"documentation":{"id":1453,"nodeType":"StructuredDocumentation","src":"14885:61:3","text":" Check if user is flagged and get details"},"functionSelector":"3bbac579","id":1476,"implemented":true,"kind":"function","modifiers":[],"name":"isBot","nameLocation":"14961:5:3","nodeType":"FunctionDefinition","parameters":{"id":1456,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1455,"mutability":"mutable","name":"user","nameLocation":"14975:4:3","nodeType":"VariableDeclaration","scope":1476,"src":"14967:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1454,"name":"address","nodeType":"ElementaryTypeName","src":"14967:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"14966:14:3"},"returnParameters":{"id":1461,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1458,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1476,"src":"15004:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1457,"name":"bool","nodeType":"ElementaryTypeName","src":"15004:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1460,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1476,"src":"15010:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1459,"name":"uint256","nodeType":"ElementaryTypeName","src":"15010:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15003:15:3"},"scope":1590,"src":"14952:171:3","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1489,"nodeType":"Block","src":"15250:43:3","statements":[{"expression":{"baseExpression":{"id":1485,"name":"botRegistry","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":313,"src":"15268:11:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_BotInfo_$302_storage_$","typeString":"mapping(address => struct BotDetectorWithPyth.BotInfo storage ref)"}},"id":1487,"indexExpression":{"id":1486,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1479,"src":"15280:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15268:17:3","typeDescriptions":{"typeIdentifier":"t_struct$_BotInfo_$302_storage","typeString":"struct BotDetectorWithPyth.BotInfo storage ref"}},"functionReturnParameters":1484,"id":1488,"nodeType":"Return","src":"15261:24:3"}]},"documentation":{"id":1477,"nodeType":"StructuredDocumentation","src":"15131:40:3","text":" Get bot information"},"functionSelector":"fb4aaf0f","id":1490,"implemented":true,"kind":"function","modifiers":[],"name":"getBotInfo","nameLocation":"15186:10:3","nodeType":"FunctionDefinition","parameters":{"id":1480,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1479,"mutability":"mutable","name":"user","nameLocation":"15205:4:3","nodeType":"VariableDeclaration","scope":1490,"src":"15197:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1478,"name":"address","nodeType":"ElementaryTypeName","src":"15197:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15196:14:3"},"returnParameters":{"id":1484,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1483,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1490,"src":"15234:14:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_BotInfo_$302_memory_ptr","typeString":"struct BotDetectorWithPyth.BotInfo"},"typeName":{"id":1482,"nodeType":"UserDefinedTypeName","pathNode":{"id":1481,"name":"BotInfo","nameLocations":["15234:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":302,"src":"15234:7:3"},"referencedDeclaration":302,"src":"15234:7:3","typeDescriptions":{"typeIdentifier":"t_struct$_BotInfo_$302_storage_ptr","typeString":"struct BotDetectorWithPyth.BotInfo"}},"visibility":"internal"}],"src":"15233:16:3"},"scope":1590,"src":"15177:116:3","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1503,"nodeType":"Block","src":"15441:48:3","statements":[{"expression":{"baseExpression":{"id":1499,"name":"botEvidenceProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":318,"src":"15459:16:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_BotEvidence_$288_storage_$","typeString":"mapping(address => struct BotDetectorWithPyth.BotEvidence storage ref)"}},"id":1501,"indexExpression":{"id":1500,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1493,"src":"15476:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"15459:22:3","typeDescriptions":{"typeIdentifier":"t_struct$_BotEvidence_$288_storage","typeString":"struct BotDetectorWithPyth.BotEvidence storage ref"}},"functionReturnParameters":1498,"id":1502,"nodeType":"Return","src":"15452:29:3"}]},"documentation":{"id":1491,"nodeType":"StructuredDocumentation","src":"15301:37:3","text":" Get bot evidence"},"functionSelector":"4d4ca309","id":1504,"implemented":true,"kind":"function","modifiers":[],"name":"getBotEvidence","nameLocation":"15353:14:3","nodeType":"FunctionDefinition","parameters":{"id":1494,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1493,"mutability":"mutable","name":"user","nameLocation":"15386:4:3","nodeType":"VariableDeclaration","scope":1504,"src":"15378:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1492,"name":"address","nodeType":"ElementaryTypeName","src":"15378:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"15367:30:3"},"returnParameters":{"id":1498,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1497,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1504,"src":"15421:18:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_BotEvidence_$288_memory_ptr","typeString":"struct BotDetectorWithPyth.BotEvidence"},"typeName":{"id":1496,"nodeType":"UserDefinedTypeName","pathNode":{"id":1495,"name":"BotEvidence","nameLocations":["15421:11:3"],"nodeType":"IdentifierPath","referencedDeclaration":288,"src":"15421:11:3"},"referencedDeclaration":288,"src":"15421:11:3","typeDescriptions":{"typeIdentifier":"t_struct$_BotEvidence_$288_storage_ptr","typeString":"struct BotDetectorWithPyth.BotEvidence"}},"visibility":"internal"}],"src":"15420:20:3"},"scope":1590,"src":"15344:145:3","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1513,"nodeType":"Block","src":"15605:34:3","statements":[{"expression":{"id":1511,"name":"goodBots","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":321,"src":"15623:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"functionReturnParameters":1510,"id":1512,"nodeType":"Return","src":"15616:15:3"}]},"documentation":{"id":1505,"nodeType":"StructuredDocumentation","src":"15497:38:3","text":" Get all good bots"},"functionSelector":"d739080d","id":1514,"implemented":true,"kind":"function","modifiers":[],"name":"getGoodBots","nameLocation":"15550:11:3","nodeType":"FunctionDefinition","parameters":{"id":1506,"nodeType":"ParameterList","parameters":[],"src":"15561:2:3"},"returnParameters":{"id":1510,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1509,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1514,"src":"15587:16:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1507,"name":"address","nodeType":"ElementaryTypeName","src":"15587:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1508,"nodeType":"ArrayTypeName","src":"15587:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"15586:18:3"},"scope":1590,"src":"15541:98:3","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1523,"nodeType":"Block","src":"15753:33:3","statements":[{"expression":{"id":1521,"name":"badBots","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":324,"src":"15771:7:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"functionReturnParameters":1520,"id":1522,"nodeType":"Return","src":"15764:14:3"}]},"documentation":{"id":1515,"nodeType":"StructuredDocumentation","src":"15647:37:3","text":" Get all bad bots"},"functionSelector":"36786d02","id":1524,"implemented":true,"kind":"function","modifiers":[],"name":"getBadBots","nameLocation":"15699:10:3","nodeType":"FunctionDefinition","parameters":{"id":1516,"nodeType":"ParameterList","parameters":[],"src":"15709:2:3"},"returnParameters":{"id":1520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1519,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1524,"src":"15735:16:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_memory_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":1517,"name":"address","nodeType":"ElementaryTypeName","src":"15735:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1518,"nodeType":"ArrayTypeName","src":"15735:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"}],"src":"15734:18:3"},"scope":1590,"src":"15690:96:3","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1533,"nodeType":"Block","src":"15900:41:3","statements":[{"expression":{"expression":{"id":1530,"name":"goodBots","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":321,"src":"15918:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":1531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"15927:6:3","memberName":"length","nodeType":"MemberAccess","src":"15918:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1529,"id":1532,"nodeType":"Return","src":"15911:22:3"}]},"documentation":{"id":1525,"nodeType":"StructuredDocumentation","src":"15794:40:3","text":" Get good bots count"},"functionSelector":"88bbafb2","id":1534,"implemented":true,"kind":"function","modifiers":[],"name":"getGoodBotsCount","nameLocation":"15849:16:3","nodeType":"FunctionDefinition","parameters":{"id":1526,"nodeType":"ParameterList","parameters":[],"src":"15865:2:3"},"returnParameters":{"id":1529,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1528,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1534,"src":"15891:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1527,"name":"uint256","nodeType":"ElementaryTypeName","src":"15891:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15890:9:3"},"scope":1590,"src":"15840:101:3","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1543,"nodeType":"Block","src":"16053:40:3","statements":[{"expression":{"expression":{"id":1540,"name":"badBots","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":324,"src":"16071:7:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage","typeString":"address[] storage ref"}},"id":1541,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16079:6:3","memberName":"length","nodeType":"MemberAccess","src":"16071:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":1539,"id":1542,"nodeType":"Return","src":"16064:21:3"}]},"documentation":{"id":1535,"nodeType":"StructuredDocumentation","src":"15949:39:3","text":" Get bad bots count"},"functionSelector":"31eba1af","id":1544,"implemented":true,"kind":"function","modifiers":[],"name":"getBadBotsCount","nameLocation":"16003:15:3","nodeType":"FunctionDefinition","parameters":{"id":1536,"nodeType":"ParameterList","parameters":[],"src":"16018:2:3"},"returnParameters":{"id":1539,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1538,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1544,"src":"16044:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1537,"name":"uint256","nodeType":"ElementaryTypeName","src":"16044:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16043:9:3"},"scope":1590,"src":"15994:99:3","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1556,"nodeType":"Block","src":"16224:41:3","statements":[{"expression":{"baseExpression":{"id":1552,"name":"isGoodBot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":328,"src":"16242:9:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1554,"indexExpression":{"id":1553,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1547,"src":"16252:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16242:15:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1551,"id":1555,"nodeType":"Return","src":"16235:22:3"}]},"documentation":{"id":1545,"nodeType":"StructuredDocumentation","src":"16101:48:3","text":" Check if user is a good bot"},"functionSelector":"26463b63","id":1557,"implemented":true,"kind":"function","modifiers":[],"name":"isGoodBotAddress","nameLocation":"16164:16:3","nodeType":"FunctionDefinition","parameters":{"id":1548,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1547,"mutability":"mutable","name":"user","nameLocation":"16189:4:3","nodeType":"VariableDeclaration","scope":1557,"src":"16181:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1546,"name":"address","nodeType":"ElementaryTypeName","src":"16181:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"16180:14:3"},"returnParameters":{"id":1551,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1550,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1557,"src":"16218:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1549,"name":"bool","nodeType":"ElementaryTypeName","src":"16218:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"16217:6:3"},"scope":1590,"src":"16155:110:3","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1569,"nodeType":"Block","src":"16394:40:3","statements":[{"expression":{"baseExpression":{"id":1565,"name":"isBadBot","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":332,"src":"16412:8:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1567,"indexExpression":{"id":1566,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1560,"src":"16421:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"16412:14:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":1564,"id":1568,"nodeType":"Return","src":"16405:21:3"}]},"documentation":{"id":1558,"nodeType":"StructuredDocumentation","src":"16273:47:3","text":" Check if user is a bad bot"},"functionSelector":"d90c410f","id":1570,"implemented":true,"kind":"function","modifiers":[],"name":"isBadBotAddress","nameLocation":"16335:15:3","nodeType":"FunctionDefinition","parameters":{"id":1561,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1560,"mutability":"mutable","name":"user","nameLocation":"16359:4:3","nodeType":"VariableDeclaration","scope":1570,"src":"16351:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1559,"name":"address","nodeType":"ElementaryTypeName","src":"16351:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"16350:14:3"},"returnParameters":{"id":1564,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1563,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1570,"src":"16388:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1562,"name":"bool","nodeType":"ElementaryTypeName","src":"16388:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"16387:6:3"},"scope":1590,"src":"16326:108:3","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":1588,"nodeType":"Block","src":"16548:98:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1577,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"16567:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1578,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"16571:6:3","memberName":"sender","nodeType":"MemberAccess","src":"16567:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1579,"name":"admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":249,"src":"16581:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"16567:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c792061646d696e","id":1581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16588:12:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_519e47aa5cfea80d7d23bd065db30ac1713503a8d5ea05db2d0c02f784e636db","typeString":"literal_string \"Only admin\""},"value":"Only admin"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_519e47aa5cfea80d7d23bd065db30ac1713503a8d5ea05db2d0c02f784e636db","typeString":"literal_string \"Only admin\""}],"id":1576,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"16559:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1582,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16559:42:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1583,"nodeType":"ExpressionStatement","src":"16559:42:3"},{"expression":{"id":1586,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1584,"name":"botAnalyzer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":251,"src":"16612:11:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1585,"name":"_newAnalyzer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1573,"src":"16626:12:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"16612:26:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":1587,"nodeType":"ExpressionStatement","src":"16612:26:3"}]},"documentation":{"id":1571,"nodeType":"StructuredDocumentation","src":"16442:45:3","text":" Set bot analyzer address"},"functionSelector":"aa2ca71b","id":1589,"implemented":true,"kind":"function","modifiers":[],"name":"setBotAnalyzer","nameLocation":"16502:14:3","nodeType":"FunctionDefinition","parameters":{"id":1574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1573,"mutability":"mutable","name":"_newAnalyzer","nameLocation":"16525:12:3","nodeType":"VariableDeclaration","scope":1589,"src":"16517:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1572,"name":"address","nodeType":"ElementaryTypeName","src":"16517:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"16516:22:3"},"returnParameters":{"id":1575,"nodeType":"ParameterList","parameters":[],"src":"16548:0:3"},"scope":1590,"src":"16493:153:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":1591,"src":"172:16477:3","usedErrors":[]}],"src":"33:16618:3"},"id":3}},"contracts":{"@pythnetwork/pyth-sdk-solidity/IPyth.sol":{"IPyth":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"id","type":"bytes32"},{"indexed":false,"internalType":"uint64","name":"publishTime","type":"uint64"},{"indexed":false,"internalType":"int64","name":"price","type":"int64"},{"indexed":false,"internalType":"uint64","name":"conf","type":"uint64"}],"name":"PriceFeedUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"id","type":"bytes32"},{"indexed":false,"internalType":"uint64","name":"startTime","type":"uint64"},{"indexed":false,"internalType":"uint64","name":"endTime","type":"uint64"},{"indexed":false,"internalType":"int64","name":"twapPrice","type":"int64"},{"indexed":false,"internalType":"uint64","name":"twapConf","type":"uint64"},{"indexed":false,"internalType":"uint32","name":"downSlotsRatio","type":"uint32"}],"name":"TwapPriceFeedUpdate","type":"event"},{"inputs":[{"internalType":"bytes32","name":"id","type":"bytes32"},{"internalType":"uint256","name":"age","type":"uint256"}],"name":"getEmaPriceNoOlderThan","outputs":[{"components":[{"internalType":"int64","name":"price","type":"int64"},{"internalType":"uint64","name":"conf","type":"uint64"},{"internalType":"int32","name":"expo","type":"int32"},{"internalType":"uint256","name":"publishTime","type":"uint256"}],"internalType":"struct PythStructs.Price","name":"price","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"id","type":"bytes32"}],"name":"getEmaPriceUnsafe","outputs":[{"components":[{"internalType":"int64","name":"price","type":"int64"},{"internalType":"uint64","name":"conf","type":"uint64"},{"internalType":"int32","name":"expo","type":"int32"},{"internalType":"uint256","name":"publishTime","type":"uint256"}],"internalType":"struct PythStructs.Price","name":"price","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"id","type":"bytes32"},{"internalType":"uint256","name":"age","type":"uint256"}],"name":"getPriceNoOlderThan","outputs":[{"components":[{"internalType":"int64","name":"price","type":"int64"},{"internalType":"uint64","name":"conf","type":"uint64"},{"internalType":"int32","name":"expo","type":"int32"},{"internalType":"uint256","name":"publishTime","type":"uint256"}],"internalType":"struct PythStructs.Price","name":"price","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"id","type":"bytes32"}],"name":"getPriceUnsafe","outputs":[{"components":[{"internalType":"int64","name":"price","type":"int64"},{"internalType":"uint64","name":"conf","type":"uint64"},{"internalType":"int32","name":"expo","type":"int32"},{"internalType":"uint256","name":"publishTime","type":"uint256"}],"internalType":"struct PythStructs.Price","name":"price","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes[]","name":"updateData","type":"bytes[]"}],"name":"getTwapUpdateFee","outputs":[{"internalType":"uint256","name":"feeAmount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes[]","name":"updateData","type":"bytes[]"}],"name":"getUpdateFee","outputs":[{"internalType":"uint256","name":"feeAmount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes[]","name":"updateData","type":"bytes[]"},{"internalType":"bytes32[]","name":"priceIds","type":"bytes32[]"},{"internalType":"uint64","name":"minPublishTime","type":"uint64"},{"internalType":"uint64","name":"maxPublishTime","type":"uint64"}],"name":"parsePriceFeedUpdates","outputs":[{"components":[{"internalType":"bytes32","name":"id","type":"bytes32"},{"components":[{"internalType":"int64","name":"price","type":"int64"},{"internalType":"uint64","name":"conf","type":"uint64"},{"internalType":"int32","name":"expo","type":"int32"},{"internalType":"uint256","name":"publishTime","type":"uint256"}],"internalType":"struct PythStructs.Price","name":"price","type":"tuple"},{"components":[{"internalType":"int64","name":"price","type":"int64"},{"internalType":"uint64","name":"conf","type":"uint64"},{"internalType":"int32","name":"expo","type":"int32"},{"internalType":"uint256","name":"publishTime","type":"uint256"}],"internalType":"struct PythStructs.Price","name":"emaPrice","type":"tuple"}],"internalType":"struct PythStructs.PriceFeed[]","name":"priceFeeds","type":"tuple[]"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes[]","name":"updateData","type":"bytes[]"},{"internalType":"bytes32[]","name":"priceIds","type":"bytes32[]"},{"internalType":"uint64","name":"minPublishTime","type":"uint64"},{"internalType":"uint64","name":"maxPublishTime","type":"uint64"}],"name":"parsePriceFeedUpdatesUnique","outputs":[{"components":[{"internalType":"bytes32","name":"id","type":"bytes32"},{"components":[{"internalType":"int64","name":"price","type":"int64"},{"internalType":"uint64","name":"conf","type":"uint64"},{"internalType":"int32","name":"expo","type":"int32"},{"internalType":"uint256","name":"publishTime","type":"uint256"}],"internalType":"struct PythStructs.Price","name":"price","type":"tuple"},{"components":[{"internalType":"int64","name":"price","type":"int64"},{"internalType":"uint64","name":"conf","type":"uint64"},{"internalType":"int32","name":"expo","type":"int32"},{"internalType":"uint256","name":"publishTime","type":"uint256"}],"internalType":"struct PythStructs.Price","name":"emaPrice","type":"tuple"}],"internalType":"struct PythStructs.PriceFeed[]","name":"priceFeeds","type":"tuple[]"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes[]","name":"updateData","type":"bytes[]"},{"internalType":"bytes32[]","name":"priceIds","type":"bytes32[]"},{"internalType":"uint64","name":"minAllowedPublishTime","type":"uint64"},{"internalType":"uint64","name":"maxAllowedPublishTime","type":"uint64"},{"internalType":"bool","name":"checkUniqueness","type":"bool"},{"internalType":"bool","name":"checkUpdateDataIsMinimal","type":"bool"},{"internalType":"bool","name":"storeUpdatesIfFresh","type":"bool"}],"name":"parsePriceFeedUpdatesWithConfig","outputs":[{"components":[{"internalType":"bytes32","name":"id","type":"bytes32"},{"components":[{"internalType":"int64","name":"price","type":"int64"},{"internalType":"uint64","name":"conf","type":"uint64"},{"internalType":"int32","name":"expo","type":"int32"},{"internalType":"uint256","name":"publishTime","type":"uint256"}],"internalType":"struct PythStructs.Price","name":"price","type":"tuple"},{"components":[{"internalType":"int64","name":"price","type":"int64"},{"internalType":"uint64","name":"conf","type":"uint64"},{"internalType":"int32","name":"expo","type":"int32"},{"internalType":"uint256","name":"publishTime","type":"uint256"}],"internalType":"struct PythStructs.Price","name":"emaPrice","type":"tuple"}],"internalType":"struct PythStructs.PriceFeed[]","name":"priceFeeds","type":"tuple[]"},{"internalType":"uint64[]","name":"slots","type":"uint64[]"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes[]","name":"updateData","type":"bytes[]"},{"internalType":"bytes32[]","name":"priceIds","type":"bytes32[]"}],"name":"parseTwapPriceFeedUpdates","outputs":[{"components":[{"internalType":"bytes32","name":"id","type":"bytes32"},{"internalType":"uint64","name":"startTime","type":"uint64"},{"internalType":"uint64","name":"endTime","type":"uint64"},{"components":[{"internalType":"int64","name":"price","type":"int64"},{"internalType":"uint64","name":"conf","type":"uint64"},{"internalType":"int32","name":"expo","type":"int32"},{"internalType":"uint256","name":"publishTime","type":"uint256"}],"internalType":"struct PythStructs.Price","name":"twap","type":"tuple"},{"internalType":"uint32","name":"downSlotsRatio","type":"uint32"}],"internalType":"struct PythStructs.TwapPriceFeed[]","name":"twapPriceFeeds","type":"tuple[]"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes[]","name":"updateData","type":"bytes[]"}],"name":"updatePriceFeeds","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes[]","name":"updateData","type":"bytes[]"},{"internalType":"bytes32[]","name":"priceIds","type":"bytes32[]"},{"internalType":"uint64[]","name":"publishTimes","type":"uint64[]"}],"name":"updatePriceFeedsIfNecessary","outputs":[],"stateMutability":"payable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getEmaPriceNoOlderThan(bytes32,uint256)":"711a2e28","getEmaPriceUnsafe(bytes32)":"9474f45b","getPriceNoOlderThan(bytes32,uint256)":"a4ae35e0","getPriceUnsafe(bytes32)":"96834ad3","getTwapUpdateFee(bytes[])":"5f674e35","getUpdateFee(bytes[])":"d47eed45","parsePriceFeedUpdates(bytes[],bytes32[],uint64,uint64)":"4716e9c5","parsePriceFeedUpdatesUnique(bytes[],bytes32[],uint64,uint64)":"accca7f9","parsePriceFeedUpdatesWithConfig(bytes[],bytes32[],uint64,uint64,bool,bool,bool)":"3a229d18","parseTwapPriceFeedUpdates(bytes[],bytes32[])":"eb942158","updatePriceFeeds(bytes[])":"ef9e5e28","updatePriceFeedsIfNecessary(bytes[],bytes32[],uint64[])":"b9256d28"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"publishTime\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"int64\",\"name\":\"price\",\"type\":\"int64\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"conf\",\"type\":\"uint64\"}],\"name\":\"PriceFeedUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"startTime\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"endTime\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"int64\",\"name\":\"twapPrice\",\"type\":\"int64\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"twapConf\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"downSlotsRatio\",\"type\":\"uint32\"}],\"name\":\"TwapPriceFeedUpdate\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"age\",\"type\":\"uint256\"}],\"name\":\"getEmaPriceNoOlderThan\",\"outputs\":[{\"components\":[{\"internalType\":\"int64\",\"name\":\"price\",\"type\":\"int64\"},{\"internalType\":\"uint64\",\"name\":\"conf\",\"type\":\"uint64\"},{\"internalType\":\"int32\",\"name\":\"expo\",\"type\":\"int32\"},{\"internalType\":\"uint256\",\"name\":\"publishTime\",\"type\":\"uint256\"}],\"internalType\":\"struct PythStructs.Price\",\"name\":\"price\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"getEmaPriceUnsafe\",\"outputs\":[{\"components\":[{\"internalType\":\"int64\",\"name\":\"price\",\"type\":\"int64\"},{\"internalType\":\"uint64\",\"name\":\"conf\",\"type\":\"uint64\"},{\"internalType\":\"int32\",\"name\":\"expo\",\"type\":\"int32\"},{\"internalType\":\"uint256\",\"name\":\"publishTime\",\"type\":\"uint256\"}],\"internalType\":\"struct PythStructs.Price\",\"name\":\"price\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"age\",\"type\":\"uint256\"}],\"name\":\"getPriceNoOlderThan\",\"outputs\":[{\"components\":[{\"internalType\":\"int64\",\"name\":\"price\",\"type\":\"int64\"},{\"internalType\":\"uint64\",\"name\":\"conf\",\"type\":\"uint64\"},{\"internalType\":\"int32\",\"name\":\"expo\",\"type\":\"int32\"},{\"internalType\":\"uint256\",\"name\":\"publishTime\",\"type\":\"uint256\"}],\"internalType\":\"struct PythStructs.Price\",\"name\":\"price\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"getPriceUnsafe\",\"outputs\":[{\"components\":[{\"internalType\":\"int64\",\"name\":\"price\",\"type\":\"int64\"},{\"internalType\":\"uint64\",\"name\":\"conf\",\"type\":\"uint64\"},{\"internalType\":\"int32\",\"name\":\"expo\",\"type\":\"int32\"},{\"internalType\":\"uint256\",\"name\":\"publishTime\",\"type\":\"uint256\"}],\"internalType\":\"struct PythStructs.Price\",\"name\":\"price\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"updateData\",\"type\":\"bytes[]\"}],\"name\":\"getTwapUpdateFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"feeAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"updateData\",\"type\":\"bytes[]\"}],\"name\":\"getUpdateFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"feeAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"updateData\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"priceIds\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint64\",\"name\":\"minPublishTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"maxPublishTime\",\"type\":\"uint64\"}],\"name\":\"parsePriceFeedUpdates\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"price\",\"type\":\"int64\"},{\"internalType\":\"uint64\",\"name\":\"conf\",\"type\":\"uint64\"},{\"internalType\":\"int32\",\"name\":\"expo\",\"type\":\"int32\"},{\"internalType\":\"uint256\",\"name\":\"publishTime\",\"type\":\"uint256\"}],\"internalType\":\"struct PythStructs.Price\",\"name\":\"price\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"price\",\"type\":\"int64\"},{\"internalType\":\"uint64\",\"name\":\"conf\",\"type\":\"uint64\"},{\"internalType\":\"int32\",\"name\":\"expo\",\"type\":\"int32\"},{\"internalType\":\"uint256\",\"name\":\"publishTime\",\"type\":\"uint256\"}],\"internalType\":\"struct PythStructs.Price\",\"name\":\"emaPrice\",\"type\":\"tuple\"}],\"internalType\":\"struct PythStructs.PriceFeed[]\",\"name\":\"priceFeeds\",\"type\":\"tuple[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"updateData\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"priceIds\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint64\",\"name\":\"minPublishTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"maxPublishTime\",\"type\":\"uint64\"}],\"name\":\"parsePriceFeedUpdatesUnique\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"price\",\"type\":\"int64\"},{\"internalType\":\"uint64\",\"name\":\"conf\",\"type\":\"uint64\"},{\"internalType\":\"int32\",\"name\":\"expo\",\"type\":\"int32\"},{\"internalType\":\"uint256\",\"name\":\"publishTime\",\"type\":\"uint256\"}],\"internalType\":\"struct PythStructs.Price\",\"name\":\"price\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"price\",\"type\":\"int64\"},{\"internalType\":\"uint64\",\"name\":\"conf\",\"type\":\"uint64\"},{\"internalType\":\"int32\",\"name\":\"expo\",\"type\":\"int32\"},{\"internalType\":\"uint256\",\"name\":\"publishTime\",\"type\":\"uint256\"}],\"internalType\":\"struct PythStructs.Price\",\"name\":\"emaPrice\",\"type\":\"tuple\"}],\"internalType\":\"struct PythStructs.PriceFeed[]\",\"name\":\"priceFeeds\",\"type\":\"tuple[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"updateData\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"priceIds\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint64\",\"name\":\"minAllowedPublishTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"maxAllowedPublishTime\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"checkUniqueness\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkUpdateDataIsMinimal\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"storeUpdatesIfFresh\",\"type\":\"bool\"}],\"name\":\"parsePriceFeedUpdatesWithConfig\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"price\",\"type\":\"int64\"},{\"internalType\":\"uint64\",\"name\":\"conf\",\"type\":\"uint64\"},{\"internalType\":\"int32\",\"name\":\"expo\",\"type\":\"int32\"},{\"internalType\":\"uint256\",\"name\":\"publishTime\",\"type\":\"uint256\"}],\"internalType\":\"struct PythStructs.Price\",\"name\":\"price\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"price\",\"type\":\"int64\"},{\"internalType\":\"uint64\",\"name\":\"conf\",\"type\":\"uint64\"},{\"internalType\":\"int32\",\"name\":\"expo\",\"type\":\"int32\"},{\"internalType\":\"uint256\",\"name\":\"publishTime\",\"type\":\"uint256\"}],\"internalType\":\"struct PythStructs.Price\",\"name\":\"emaPrice\",\"type\":\"tuple\"}],\"internalType\":\"struct PythStructs.PriceFeed[]\",\"name\":\"priceFeeds\",\"type\":\"tuple[]\"},{\"internalType\":\"uint64[]\",\"name\":\"slots\",\"type\":\"uint64[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"updateData\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"priceIds\",\"type\":\"bytes32[]\"}],\"name\":\"parseTwapPriceFeedUpdates\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"startTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"endTime\",\"type\":\"uint64\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"price\",\"type\":\"int64\"},{\"internalType\":\"uint64\",\"name\":\"conf\",\"type\":\"uint64\"},{\"internalType\":\"int32\",\"name\":\"expo\",\"type\":\"int32\"},{\"internalType\":\"uint256\",\"name\":\"publishTime\",\"type\":\"uint256\"}],\"internalType\":\"struct PythStructs.Price\",\"name\":\"twap\",\"type\":\"tuple\"},{\"internalType\":\"uint32\",\"name\":\"downSlotsRatio\",\"type\":\"uint32\"}],\"internalType\":\"struct PythStructs.TwapPriceFeed[]\",\"name\":\"twapPriceFeeds\",\"type\":\"tuple[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"updateData\",\"type\":\"bytes[]\"}],\"name\":\"updatePriceFeeds\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"updateData\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"priceIds\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint64[]\",\"name\":\"publishTimes\",\"type\":\"uint64[]\"}],\"name\":\"updatePriceFeedsIfNecessary\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Pyth Data Association\",\"details\":\"Please refer to the guidance at https://docs.pyth.network/documentation/pythnet-price-feeds/best-practices for how to consume prices safely.\",\"events\":{\"PriceFeedUpdate(bytes32,uint64,int64,uint64)\":{\"details\":\"Emitted when the price feed with `id` has received a fresh update.\",\"params\":{\"conf\":\"Confidence interval of the given price update.\",\"id\":\"The Pyth Price Feed ID.\",\"price\":\"Price of the given price update.\",\"publishTime\":\"Publish time of the given price update.\"}},\"TwapPriceFeedUpdate(bytes32,uint64,uint64,int64,uint64,uint32)\":{\"details\":\"Emitted when the TWAP price feed with `id` has received a fresh update.\",\"params\":{\"downSlotsRatio\":\"Down slot ratio of the TWAP.\",\"endTime\":\"End time of the TWAP.\",\"id\":\"The Pyth Price Feed ID.\",\"startTime\":\"Start time of the TWAP.\",\"twapConf\":\"Confidence interval of the TWAP.\",\"twapPrice\":\"Price of the TWAP.\"}}},\"kind\":\"dev\",\"methods\":{\"getEmaPriceNoOlderThan(bytes32,uint256)\":{\"details\":\"This function is a sanity-checked version of `getEmaPriceUnsafe` which is useful in applications that require a sufficiently-recent price. Reverts if the price wasn't updated sufficiently recently.\",\"returns\":{\"price\":\"- please read the documentation of PythStructs.Price to understand how to use this safely.\"}},\"getEmaPriceUnsafe(bytes32)\":{\"details\":\"This function returns the same price as `getEmaPrice` in the case where the price is available. However, if the price is not recent this function returns the latest available price. The returned price can be from arbitrarily far in the past; this function makes no guarantees that the returned price is recent or useful for any particular application. Users of this function should check the `publishTime` in the price to ensure that the returned price is sufficiently recent for their application. If you are considering using this function, it may be safer / easier to use either `getEmaPrice` or `getEmaPriceNoOlderThan`.\",\"returns\":{\"price\":\"- please read the documentation of PythStructs.Price to understand how to use this safely.\"}},\"getPriceNoOlderThan(bytes32,uint256)\":{\"details\":\"This function is a sanity-checked version of `getPriceUnsafe` which is useful in applications that require a sufficiently-recent price. Reverts if the price wasn't updated sufficiently recently.\",\"returns\":{\"price\":\"- please read the documentation of PythStructs.Price to understand how to use this safely.\"}},\"getPriceUnsafe(bytes32)\":{\"details\":\"This function returns the most recent price update in this contract without any recency checks. This function is unsafe as the returned price update may be arbitrarily far in the past. Users of this function should check the `publishTime` in the price to ensure that the returned price is sufficiently recent for their application. If you are considering using this function, it may be safer / easier to use `getPriceNoOlderThan`.\",\"returns\":{\"price\":\"- please read the documentation of PythStructs.Price to understand how to use this safely.\"}},\"getTwapUpdateFee(bytes[])\":{\"params\":{\"updateData\":\"Array of price update data.\"},\"returns\":{\"feeAmount\":\"The required fee in Wei.\"}},\"getUpdateFee(bytes[])\":{\"params\":{\"updateData\":\"Array of price update data.\"},\"returns\":{\"feeAmount\":\"The required fee in Wei.\"}},\"parsePriceFeedUpdates(bytes[],bytes32[],uint64,uint64)\":{\"details\":\"Reverts if the transferred fee is not sufficient or the updateData is invalid or there is no update for any of the given `priceIds` within the given time range.\",\"params\":{\"maxPublishTime\":\"maximum acceptable publishTime for the given `priceIds`.\",\"minPublishTime\":\"minimum acceptable publishTime for the given `priceIds`.\",\"priceIds\":\"Array of price ids.\",\"updateData\":\"Array of price update data.\"},\"returns\":{\"priceFeeds\":\"Array of the price feeds corresponding to the given `priceIds` (with the same order).\"}},\"parsePriceFeedUpdatesUnique(bytes[],bytes32[],uint64,uint64)\":{\"details\":\"Reverts if the transferred fee is not sufficient or the updateData is invalid or there is no update for any of the given `priceIds` within the given time range and uniqueness condition.\",\"params\":{\"maxPublishTime\":\"maximum acceptable publishTime for the given `priceIds`.\",\"minPublishTime\":\"minimum acceptable publishTime for the given `priceIds`.\",\"priceIds\":\"Array of price ids.\",\"updateData\":\"Array of price update data.\"},\"returns\":{\"priceFeeds\":\"Array of the price feeds corresponding to the given `priceIds` (with the same order).\"}},\"parsePriceFeedUpdatesWithConfig(bytes[],bytes32[],uint64,uint64,bool,bool,bool)\":{\"details\":\"Reverts if the transferred fee is not sufficient or the updateData is invalid or there is no update for any of the given `priceIds` within the given time range.\",\"params\":{\"maxAllowedPublishTime\":\"maximum acceptable publishTime for the given `priceIds`.\",\"minAllowedPublishTime\":\"minimum acceptable publishTime for the given `priceIds`.\",\"priceIds\":\"Array of price ids.\",\"storeUpdatesIfFresh\":\"flag for the parse function to\",\"updateData\":\"Array of price update data.\"},\"returns\":{\"priceFeeds\":\"Array of the price feeds corresponding to the given `priceIds` (with the same order).\"}},\"parseTwapPriceFeedUpdates(bytes[],bytes32[])\":{\"details\":\"Reverts if: - The transferred fee is not sufficient - The updateData is invalid or malformed - The updateData array does not contain exactly 2 updates - There is no update for any of the given `priceIds` - The time ordering between data points is invalid (start time must be before end time)\",\"params\":{\"priceIds\":\"Array of price ids to calculate TWAP for\",\"updateData\":\"Array containing exactly two price updates (start and end points for TWAP calculation)\"},\"returns\":{\"twapPriceFeeds\":\"Array of TWAP price feeds corresponding to the given `priceIds` (with the same order)\"}},\"updatePriceFeeds(bytes[])\":{\"details\":\"Reverts if the transferred fee is not sufficient or the updateData is invalid.\",\"params\":{\"updateData\":\"Array of price update data.\"}},\"updatePriceFeedsIfNecessary(bytes[],bytes32[],uint64[])\":{\"details\":\"Reverts if update is not needed or the transferred fee is not sufficient or the updateData is invalid.\",\"params\":{\"priceIds\":\"Array of price ids.\",\"publishTimes\":\"Array of publishTimes. `publishTimes[i]` corresponds to known `publishTime` of `priceIds[i]`\",\"updateData\":\"Array of price update data.\"}}},\"title\":\"Consume prices from the Pyth Network (https://pyth.network/).\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getEmaPriceNoOlderThan(bytes32,uint256)\":{\"notice\":\"Returns the exponentially-weighted moving average price that is no older than `age` seconds of the current time.\"},\"getEmaPriceUnsafe(bytes32)\":{\"notice\":\"Returns the exponentially-weighted moving average price of a price feed without any sanity checks.\"},\"getPriceNoOlderThan(bytes32,uint256)\":{\"notice\":\"Returns the price that is no older than `age` seconds of the current time.\"},\"getPriceUnsafe(bytes32)\":{\"notice\":\"Returns the price of a price feed without any sanity checks.\"},\"getTwapUpdateFee(bytes[])\":{\"notice\":\"Returns the required fee to update a TWAP price.\"},\"getUpdateFee(bytes[])\":{\"notice\":\"Returns the required fee to update an array of price updates.\"},\"parsePriceFeedUpdates(bytes[],bytes32[],uint64,uint64)\":{\"notice\":\"Parse `updateData` and return price feeds of the given `priceIds` if they are all published within `minPublishTime` and `maxPublishTime`. You can use this method if you want to use a Pyth price at a fixed time and not the most recent price; otherwise, please consider using `updatePriceFeeds`. This method may store the price updates on-chain, if they are more recent than the current stored prices. This method requires the caller to pay a fee in wei; the required fee can be computed by calling `getUpdateFee` with the length of the `updateData` array.\"},\"parsePriceFeedUpdatesUnique(bytes[],bytes32[],uint64,uint64)\":{\"notice\":\"Similar to `parsePriceFeedUpdates` but ensures the updates returned are the first updates published in minPublishTime. That is, if there are multiple updates for a given timestamp, this method will return the first update. This method may store the price updates on-chain, if they are more recent than the current stored prices.\"},\"parsePriceFeedUpdatesWithConfig(bytes[],bytes32[],uint64,uint64,bool,bool,bool)\":{\"notice\":\"Parse `updateData` and return price feeds of the given `priceIds` if they are all published within `minPublishTime` and `maxPublishTime,` but choose to store price updates if `storeUpdatesIfFresh`. You can use this method if you want to use a Pyth price at a fixed time and not the most recent price; otherwise, please consider using `updatePriceFeeds`. This method may store the price updates on-chain, if they are more recent than the current stored prices. This method requires the caller to pay a fee in wei; the required fee can be computed by calling `getUpdateFee` with the length of the `updateData` array. This method will eventually allow the caller to determine whether parsed price feeds should update the stored values as well.\"},\"parseTwapPriceFeedUpdates(bytes[],bytes32[])\":{\"notice\":\"Parse time-weighted average price (TWAP) from two consecutive price updates for the given `priceIds`. This method calculates TWAP between two data points by processing the difference in cumulative price values divided by the time period. It requires exactly two updates that contain valid price information for all the requested price IDs. This method requires the caller to pay a fee in wei; the required fee can be computed by calling `getUpdateFee` with the updateData array.\"},\"updatePriceFeeds(bytes[])\":{\"notice\":\"Update price feeds with given update messages. This method requires the caller to pay a fee in wei; the required fee can be computed by calling `getUpdateFee` with the length of the `updateData` array. Prices will be updated if they are more recent than the current stored prices. The call will succeed even if the update is not the most recent.\"},\"updatePriceFeedsIfNecessary(bytes[],bytes32[],uint64[])\":{\"notice\":\"Wrapper around updatePriceFeeds that rejects fast if a price update is not necessary. A price update is necessary if the current on-chain publishTime is older than the given publishTime. It relies solely on the given `publishTimes` for the price feeds and does not read the actual price update publish time within `updateData`. This method requires the caller to pay a fee in wei; the required fee can be computed by calling `getUpdateFee` with the length of the `updateData` array. `priceIds` and `publishTimes` are two arrays with the same size that correspond to senders known publishTime of each priceId when calling this method. If all of price feeds within `priceIds` have updated and have a newer or equal publish time than the given publish time, it will reject the transaction to save gas. Otherwise, it calls updatePriceFeeds method to update the prices.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@pythnetwork/pyth-sdk-solidity/IPyth.sol\":\"IPyth\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@pythnetwork/pyth-sdk-solidity/IPyth.sol\":{\"keccak256\":\"0xada6a1f4898b056d2804409ecad466b786dc6a12bc6f8f247e7f1471c1b86fcd\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ecee3c205896236fc11bfb1367f033353448fa462b08e5212a32e767f72022c9\",\"dweb:/ipfs/QmeEQpRRza2Swm2gCCC61TDxQ2GNLjqPhdtbSznADMuMni\"]},\"@pythnetwork/pyth-sdk-solidity/IPythEvents.sol\":{\"keccak256\":\"0xd67239becd2c39bd9d065830be24e70606f5747ab31b8818bea849d09ac17ddc\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://e719bd2d8c1d8d46713aeb700dd6b5ddd766a77830ea9ae3cc9327f67ed775d1\",\"dweb:/ipfs/QmNQYyRVFLEvLsCSTkHkAemTvvZm4CzLN7hUdMidMcBS7u\"]},\"@pythnetwork/pyth-sdk-solidity/PythStructs.sol\":{\"keccak256\":\"0x474436bf0d558cc9b2c00a9d0ce318147acdf7963f34ef4acadb9248e65bbc7b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://2b8f9bd9de35e67c7bdbf04d8c2e771718fcc8666456ca5f92dbd914e4a5f2b3\",\"dweb:/ipfs/QmNP3ShBYRp4RiVbAudMB7rNHAqgtwn8pPBzb8JTUaViRh\"]}},\"version\":1}"}},"@pythnetwork/pyth-sdk-solidity/IPythEvents.sol":{"IPythEvents":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"id","type":"bytes32"},{"indexed":false,"internalType":"uint64","name":"publishTime","type":"uint64"},{"indexed":false,"internalType":"int64","name":"price","type":"int64"},{"indexed":false,"internalType":"uint64","name":"conf","type":"uint64"}],"name":"PriceFeedUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"id","type":"bytes32"},{"indexed":false,"internalType":"uint64","name":"startTime","type":"uint64"},{"indexed":false,"internalType":"uint64","name":"endTime","type":"uint64"},{"indexed":false,"internalType":"int64","name":"twapPrice","type":"int64"},{"indexed":false,"internalType":"uint64","name":"twapConf","type":"uint64"},{"indexed":false,"internalType":"uint32","name":"downSlotsRatio","type":"uint32"}],"name":"TwapPriceFeedUpdate","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"publishTime\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"int64\",\"name\":\"price\",\"type\":\"int64\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"conf\",\"type\":\"uint64\"}],\"name\":\"PriceFeedUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"startTime\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"endTime\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"int64\",\"name\":\"twapPrice\",\"type\":\"int64\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"twapConf\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"downSlotsRatio\",\"type\":\"uint32\"}],\"name\":\"TwapPriceFeedUpdate\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"This interface can be used for listening to the updates for off-chain and testing purposes.\",\"events\":{\"PriceFeedUpdate(bytes32,uint64,int64,uint64)\":{\"details\":\"Emitted when the price feed with `id` has received a fresh update.\",\"params\":{\"conf\":\"Confidence interval of the given price update.\",\"id\":\"The Pyth Price Feed ID.\",\"price\":\"Price of the given price update.\",\"publishTime\":\"Publish time of the given price update.\"}},\"TwapPriceFeedUpdate(bytes32,uint64,uint64,int64,uint64,uint32)\":{\"details\":\"Emitted when the TWAP price feed with `id` has received a fresh update.\",\"params\":{\"downSlotsRatio\":\"Down slot ratio of the TWAP.\",\"endTime\":\"End time of the TWAP.\",\"id\":\"The Pyth Price Feed ID.\",\"startTime\":\"Start time of the TWAP.\",\"twapConf\":\"Confidence interval of the TWAP.\",\"twapPrice\":\"Price of the TWAP.\"}}},\"kind\":\"dev\",\"methods\":{},\"title\":\"IPythEvents contains the events that Pyth contract emits.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@pythnetwork/pyth-sdk-solidity/IPythEvents.sol\":\"IPythEvents\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@pythnetwork/pyth-sdk-solidity/IPythEvents.sol\":{\"keccak256\":\"0xd67239becd2c39bd9d065830be24e70606f5747ab31b8818bea849d09ac17ddc\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://e719bd2d8c1d8d46713aeb700dd6b5ddd766a77830ea9ae3cc9327f67ed775d1\",\"dweb:/ipfs/QmNQYyRVFLEvLsCSTkHkAemTvvZm4CzLN7hUdMidMcBS7u\"]}},\"version\":1}"}},"@pythnetwork/pyth-sdk-solidity/PythStructs.sol":{"PythStructs":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601357603a908160198239f35b600080fdfe600080fdfea2646970667358221220211b1c75d92ddd3aa248d2bec61ba31a615203e7bca0a308dc1050578870662b64736f6c63430008130033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x13 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x19 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x21 SHL SHR PUSH22 0xD92DDD3AA248D2BEC61BA31A615203E7BCA0A308DC10 POP JUMPI DUP9 PUSH17 0x662B64736F6C6343000813003300000000 ","sourceMap":"64:2355:2:-:0;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220211b1c75d92ddd3aa248d2bec61ba31a615203e7bca0a308dc1050578870662b64736f6c63430008130033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x21 SHL SHR PUSH22 0xD92DDD3AA248D2BEC61BA31A615203E7BCA0A308DC10 POP JUMPI DUP9 PUSH17 0x662B64736F6C6343000813003300000000 ","sourceMap":"64:2355:2:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@pythnetwork/pyth-sdk-solidity/PythStructs.sol\":\"PythStructs\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@pythnetwork/pyth-sdk-solidity/PythStructs.sol\":{\"keccak256\":\"0x474436bf0d558cc9b2c00a9d0ce318147acdf7963f34ef4acadb9248e65bbc7b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://2b8f9bd9de35e67c7bdbf04d8c2e771718fcc8666456ca5f92dbd914e4a5f2b3\",\"dweb:/ipfs/QmNP3ShBYRp4RiVbAudMB7rNHAqgtwn8pPBzb8JTUaViRh\"]}},\"version\":1}"}},"contracts/BotDetector.sol":{"BotDetectorWithPyth":{"abi":[{"inputs":[{"internalType":"address","name":"_pythContract","type":"address"},{"internalType":"address","name":"_botAnalyzer","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"score","type":"uint256"},{"indexed":false,"internalType":"string","name":"riskLevel","type":"string"},{"indexed":false,"internalType":"string","name":"reason","type":"string"},{"indexed":false,"internalType":"int64","name":"priceUsed","type":"int64"},{"indexed":false,"internalType":"uint256","name":"reactionTimeMs","type":"uint256"}],"name":"BadBotFlagged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"enum BotDetectorWithPyth.BotCategory","name":"previousCategory","type":"uint8"}],"name":"BotUnflagged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"score","type":"uint256"},{"indexed":false,"internalType":"string","name":"botType","type":"string"},{"indexed":false,"internalType":"uint256","name":"liquidityProvided","type":"uint256"},{"indexed":false,"internalType":"string","name":"reason","type":"string"},{"indexed":false,"internalType":"int64","name":"priceUsed","type":"int64"},{"indexed":false,"internalType":"uint256","name":"reactionTimeMs","type":"uint256"}],"name":"GoodBotFlagged","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"blockNumber","type":"uint256"},{"indexed":false,"internalType":"int64","name":"btcPrice","type":"int64"}],"name":"TradeExecuted","type":"event"},{"inputs":[],"name":"admin","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"badBots","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"botAnalyzer","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"botEvidenceProof","outputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"uint256","name":"tradeTimestamp","type":"uint256"},{"internalType":"uint256","name":"pricePublishTime","type":"uint256"},{"internalType":"int64","name":"priceAtTrade","type":"int64"},{"internalType":"uint256","name":"reactionTimeMs","type":"uint256"},{"internalType":"uint256","name":"botScore","type":"uint256"},{"internalType":"enum BotDetectorWithPyth.BotCategory","name":"category","type":"uint8"},{"internalType":"string","name":"botType","type":"string"},{"internalType":"uint256","name":"liquidityProvided","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"botRegistry","outputs":[{"internalType":"bool","name":"isFlagged","type":"bool"},{"internalType":"uint256","name":"score","type":"uint256"},{"internalType":"enum BotDetectorWithPyth.BotCategory","name":"category","type":"uint8"},{"internalType":"string","name":"botType","type":"string"},{"internalType":"uint256","name":"liquidityProvided","type":"uint256"},{"internalType":"uint256","name":"flaggedAt","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"executeTrade","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes[]","name":"priceUpdateData","type":"bytes[]"},{"internalType":"bytes32","name":"priceId","type":"bytes32"}],"name":"executeTradeWithPriceProof","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address[]","name":"users","type":"address[]"},{"internalType":"uint256[]","name":"scores","type":"uint256[]"},{"internalType":"string[]","name":"riskLevels","type":"string[]"}],"name":"flagBadBots","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"users","type":"address[]"},{"internalType":"uint256[]","name":"scores","type":"uint256[]"},{"internalType":"string[]","name":"riskLevels","type":"string[]"},{"internalType":"string[]","name":"reasons","type":"string[]"},{"internalType":"bytes[]","name":"priceUpdateData","type":"bytes[]"},{"internalType":"bytes32","name":"priceId","type":"bytes32"}],"name":"flagBadBotsWithPythProof","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address[]","name":"users","type":"address[]"},{"internalType":"uint256[]","name":"scores","type":"uint256[]"},{"internalType":"string[]","name":"botTypes","type":"string[]"},{"internalType":"uint256[]","name":"liquidityAmounts","type":"uint256[]"}],"name":"flagGoodBots","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"users","type":"address[]"},{"internalType":"uint256[]","name":"scores","type":"uint256[]"},{"internalType":"string[]","name":"botTypes","type":"string[]"},{"internalType":"uint256[]","name":"liquidityAmounts","type":"uint256[]"},{"internalType":"string[]","name":"reasons","type":"string[]"},{"internalType":"bytes[]","name":"priceUpdateData","type":"bytes[]"},{"internalType":"bytes32","name":"priceId","type":"bytes32"}],"name":"flagGoodBotsWithPythProof","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[],"name":"getBadBots","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getBadBotsCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getBotEvidence","outputs":[{"components":[{"internalType":"address","name":"user","type":"address"},{"internalType":"uint256","name":"tradeTimestamp","type":"uint256"},{"internalType":"uint256","name":"pricePublishTime","type":"uint256"},{"internalType":"int64","name":"priceAtTrade","type":"int64"},{"internalType":"uint256","name":"reactionTimeMs","type":"uint256"},{"internalType":"uint256","name":"botScore","type":"uint256"},{"internalType":"enum BotDetectorWithPyth.BotCategory","name":"category","type":"uint8"},{"internalType":"string","name":"botType","type":"string"},{"internalType":"uint256","name":"liquidityProvided","type":"uint256"}],"internalType":"struct BotDetectorWithPyth.BotEvidence","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getBotInfo","outputs":[{"components":[{"internalType":"bool","name":"isFlagged","type":"bool"},{"internalType":"uint256","name":"score","type":"uint256"},{"internalType":"enum BotDetectorWithPyth.BotCategory","name":"category","type":"uint8"},{"internalType":"string","name":"botType","type":"string"},{"internalType":"uint256","name":"liquidityProvided","type":"uint256"},{"internalType":"uint256","name":"flaggedAt","type":"uint256"}],"internalType":"struct BotDetectorWithPyth.BotInfo","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getGoodBots","outputs":[{"internalType":"address[]","name":"","type":"address[]"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"getGoodBotsCount","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getUserTrades","outputs":[{"components":[{"internalType":"address","name":"user","type":"address"},{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"blockNumber","type":"uint256"},{"internalType":"int64","name":"btcPriceAtTrade","type":"int64"},{"internalType":"uint64","name":"pricePublishTime","type":"uint64"}],"internalType":"struct BotDetectorWithPyth.TradeRecord[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"name":"goodBots","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"isBadBotAddress","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"isBot","outputs":[{"internalType":"bool","name":"","type":"bool"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"isGoodBotAddress","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pyth","outputs":[{"internalType":"contract IPyth","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_newAnalyzer","type":"address"}],"name":"setBotAnalyzer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"unflagBot","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"userTrades","outputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"blockNumber","type":"uint256"},{"internalType":"int64","name":"btcPriceAtTrade","type":"int64"},{"internalType":"uint64","name":"pricePublishTime","type":"uint64"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"abi_decode_address_fromMemory":{"entryPoint":188,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[],"linkReferences":{},"object":"608034620000a157601f6200351138819003918201601f19168301916001600160401b03831184841017620000a6578084926040948552833981010312620000a1576200005a60206200005283620000bc565b9201620000bc565b600080546001600160a01b03199081166001600160a01b039485161790915560018054821633179055600280549091169190921617905560405161343f9081620000d28239f35b600080fd5b634e487b7160e01b600052604160045260246000fd5b51906001600160a01b0382168203620000a15756fe610360604052600436101561001357600080fd5b60006102805260003560e01c8062d2798b1461268c57806302d2838b146125525780630d7555cc14611c6e57806320bae1cb14611bd257806326463b6314611b8f57806331eba1af14611b6e57806336786d0214611ae3578063382ec63f146112085780633bbac5791461116b578063472279a214610d4d5780634d4ca30914610bd357806381d1ae6214610baa57806388bbafb214610b89578063927c774214610a4f5780639cda890814610747578063aa2ca71b146106cc578063b1b1ffab1461062e578063c32d2a021461056f578063c35fc52414610543578063d739080d146104a8578063d90c410f14610465578063eaca6a7814610423578063f851a440146103f7578063f98d06f0146103ca578063fb4aaf0f146102af5763fed20c781461014057600080fd5b346102a8576020806003193601126102a8577f7cbd5e661dde6a21cf48d6cf4909acf3b8c27773f4cd5050ab0cf692833173c261017b612a38565b9160018060a01b0380600254163314801561029b575b61019a90612f7b565b83169283610280515260048252610280519060ff6040816002828620015416936008865220541661028d575b8461028051526009835260ff60406102805120541661027e575b50836102805152600482528360056102805160408120908082558060018301556002820155610211600382016133c0565b61028051918183600481940155015552600582526102805160408120908082558060018301558060028301558060038301558060048301558060058301556006820155610260600782016133c0565b6008610280519101556102766040518092612baf565ba26102805180f35b61028790613316565b386101e0565b6102968161323b565b6101c6565b5060015481163314610191565b6102805180fd5b346102a8576020806003193601126102a8576102c9612a38565b6040516102d581612a88565b610280518152610280518382015261028051604082015260608082015261028051608082015260a06102805191015260018060a01b0316610280515260048152604061028051206040519061032982612a88565b60ff8154161515825260018101548383019081526103b960ff600284015416610356604086019182612cf6565b6103a761036560038601612b09565b916060870192835260056004870154966080890197885201549460a08801958652604051988998818a5251151590890152516040880152516060870190612baf565b5160c0608086015260e0850190612bd2565b915160a08401525160c08301520390f35b346102a85761028051806003193601126103f457546040516001600160a01b039091168152602090f35b80fd5b346102a85761028051806003193601126103f4576001546040516001600160a01b039091168152602090f35b346102a85760203660031901126102a8576004356007548110156102a85761044c602091612ca3565b905460405160039290921b1c6001600160a01b03168152f35b346102a85760203660031901126102a8576001600160a01b03610486612a38565b1661028051526009602052602060ff6040610280512054166040519015158152f35b346102a85761028051806003193601126103f4576040518060065491828152602080910192600661028051527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f9161028051905b8282106105235761051f8561051381890382612ae8565b60405191829182612c12565b0390f35b83546001600160a01b0316865294850194600193840193909101906104fc565b346102a85761028051806003193601126103f4576002546040516001600160a01b039091168152602090f35b346102a85760203660031901126102a8576001600160a01b0380610591612a38565b166102805152600560205260406102805120908154166001820154916106236002820154916106126003820154600483015460058401549060ff6006860154169260086105e060078801612b09565b960154976040519a8b9a8b5260208b015260408a015260070b6060890152608088015260a087015260c0860190612baf565b6101208060e0860152840190612bd2565b906101008301520390f35b346102a85760403660031901126102a857610647612a38565b61028080516001600160a01b0392831690526003602052516040812080546024359392908410156103f4575061068760c0936001600160401b0392612cda565b509182541691600181015490600281015460046003830154920154926040519586526020860152604085015260608401528060070b608084015260401c1660a0820152f35b346102a85760203660031901126102a8576106e5612a38565b6001546001600160a01b0391908216330361071557166001600160601b0360a01b60025416176002556102805180f35b60405162461bcd60e51b815260206004820152600a60248201526927b7363c9030b236b4b760b11b6044820152606490fd5b60603660031901126102a8576004356001600160401b036024358181116102a857610776903690600401612a08565b90923361028051526020926004845260406102805120926107f160405161079c81612a88565b60ff8654161515815260018601548782015260ff600287015416906107c5604082019283612cf6565b6107d160038801612b09565b606082015260a060056004890154986080998a8501520154910152612d02565b6003811015610a35576002610807911415612d0f565b610812831515612d67565b610280515460405163d47eed4560e01b81526001600160a01b0397909290918816878480610844858760048401612e80565b0381845afa9384156109a5576102805194610a01575b508334106109c957803b156102a85761088e91604051948580948193631df3cbc560e31b8352610280519760048401612e80565b03925af180156109a5576109b3575b5082604494956102805154166040519586809263052571af60e51b825282356004830152603c60248301525afa9081156109a5577f3a41b4a45381e8007eceed209f6413255128c9faf4a51f718825cab30cb89ffb946102805192610972575b5061094e9033610280515260038752604061028051208351916060850151166040519261092984612a88565b338452428a85015286604085015243606085015260070b8784015260a0830152612da4565b5160070b906040519442865285015243604085015260608401523392a26102805180f35b61094e91925061099790853d871161099e575b61098f8183612ae8565b810190612f0f565b91906108fd565b503d610985565b6040513d61028051823e3d90fd5b6109bc90612ab9565b61028051801561089d5780fd5b60405162461bcd60e51b815260048101899052601060248201526f496e73756666696369656e742066656560801b6044820152606490fd5b9093508781813d8311610a2e575b610a198183612ae8565b81010312610a295751928961085a565b600080fd5b503d610a0f565b634e487b7160e01b61028051526021600452602461028051fd5b346102a8576020806003193601126102a8576001600160a01b0380610a72612a38565b16610280515260038252610280519160408320908154906001600160401b0394858311610b7157509290604051906005610ab08683831b0184612ae8565b818352858301809561028051526102805187812090915b848310610b4d57505050505060405193808501918186525180925260408501939261028051905b838210610afb5786860387f35b84518051821687528084015187850152604080820151908801526060808201519088015260808082015160070b9088015260a09081015189169087015260c09095019493820193600190910190610aee565b8389600192610b5f859c999a9c6131ab565b81520192019201919097959497610ac7565b634e487b7160e01b9052604160045261028051602490fd5b346102a85761028051806003193601126103f4576020600654604051908152f35b346102a85760203660031901126102a8576004356006548110156102a85761044c602091612c56565b346102a8576020806003193601126102a857610d2f90610bf1612a38565b604051610bfd81612acc565b61028051815261028051838201526102805160408201526102805160608201526102805160808201526102805160a08201526102805160c0820152606060e0820152610280516101008092015260018060a01b03809216610280515260058352610d436040610280512092604051958680958193610c7a83612acc565b8082541683526001820154898401908152600283015460408501908152600384015491606086019260070b83528b600486015494608088019586528b600860058901549860a08b01998a52610cdb60c060ff6006840154169c019b8c612cf6565b60e0610ce960078301612b09565b9d019c8d5201549d019c8d526040519e8f9e8f525116908d01525160408c01525160608b01525160070b60808a01525160a08901525160c08801525160e0870190612baf565b516101208093860152610140850190612bd2565b9151908301520390f35b346102a85760803660031901126102a8576004356001600160401b0381116102a857610d7d903690600401612a08565b90610340526024356001600160401b0381116102a857610da1903690600401612a08565b61030052610320526044356001600160401b0381116102a857610dc8903690600401612a08565b90916064356001600160401b0381116102a857610de9903690600401612a08565b919060018060a01b036002541633148015611157575b610e0890612f7b565b610e16610300518314612fb8565b610280515b828110610e29576102805180f35b60018060a01b03610e46610e4183866103405161305f565b61306f565b166102805152600960205260ff80604061028051205416611139575b60018060a01b03610e7a610e4184876103405161305f565b16610280515260089081602052604061028051205416156110e7575b50610ea881610300516103205161305f565b35610eb4828789613083565b9190610eec610ec485898861305f565b359160405193610ed385612a88565b6001855260208501526040840194600186523691613129565b606083015260808201524260a082015260018060a01b03610f14610e4185886103405161305f565b1661028051526004602052610280516040812092610f4183511515859060ff801983541691151516179055565b60208301516001850155519060038210156110cf5750610f64906002840161316f565b60608101518051906001600160401b0382116110b557610f876003850154612a4e565b90601f91828111611074575b50610280516020928411600114610ff95750928260059360a093610fe99897966102805192610fee575b50508160011b916000199060031b1c19161760038501555b60808101516004850155015191015561303a565b610e1b565b015190508d80610fbd565b60038601905261028051602081209291905b601f198516811061105c57508360a093610fe998979693600193600597601f19811610611043575b505050811b016003850155610fd5565b015160001960f88460031b161c191690558d8080611033565b9192602060018192868501518155019401920161100b565b6110a69060038701610280515260206102805120600585808801821c830193602089106110ac575b01901c0190613187565b8b610f93565b9350829361109c565b634e487b7160e01b61028051526041600452602461028051fd5b634e487b7160e01b9052602160045261028051602490fd5b6111006110fb610e4184876103405161305f565b613106565b60018060a01b03611118610e4184876103405161305f565b16610280515260205260406102805120600160ff1982541617905586610e96565b61115261114d610e4184876103405161305f565b613316565b610e62565b506001546001600160a01b03163314610dff565b346102a85760203660031901126102a8576001600160a01b0361118c612a38565b1661028051526004602052604080610280512081516111aa81612a88565b60ff825416151581526005600183015492602083019384526111d560ff600283015416868501612cf6565b6111e160038201612b09565b606084015260048101546080840152015460a0820152511515905182519182526020820152f35b60c03660031901126102a8576004356001600160401b0381116102a857611233903690600401612a08565b90610120526024356001600160401b0381116102a857611257903690600401612a08565b610240526101c0526044356001600160401b0381116102a85761127e903690600401612a08565b6101005260a0526064356001600160401b0381116102a8576112a4903690600401612a08565b610220526102e0526084356001600160401b0381116102a8576112cb903690600401612a08565b9060018060a01b036002541633148015611acf575b6112e990612f7b565b6112f7610240518414612fb8565b611305610100518414612fb8565b611313610220518414612fb8565b610280515460405163d47eed4560e01b815292906001600160a01b031660208480611342858760048401612e80565b0381845afa9384156109a5576102805194611a9b575b5061136584341015612ff6565b803b156102a85761139191604051948580948193631df3cbc560e31b8352610280519760048401612e80565b03925af180156109a557611a85575b5061028051546040516396834ad360e01b815260a435600482015290608090829060249082906001600160a01b03165afa80156109a5576102805161016052611a63575b50610280515b8181106113f8576102805180f35b611409610e4182846101205161305f565b61141a82610240516101c05161305f565b3561142b836101005160a051613083565b91909261143f85610220516102e051613083565b9060018060a01b0383166102805152600860205260ff80604061028051205416611a55575b60018060a01b03841661028051526009908160205260406102805120541615611a23575b5060405161149581612a88565b60018152846020820152600260408201526114ae613203565b6060820152610280805160808301524260a083015280516001600160a01b0386169052600460205251604081208251815460ff191690151560ff1617815591906020820151600184015560408201519060038210156110cf5750611515906002840161316f565b60608101518051906001600160401b0382116110b5576115386003850154612a4e565b601f81116119df575b506102805190602091601f8411600114611969575091806005949260a094610280519261195e575b50508160011b916000199060031b1c19161760038501555b60808101516004850155015191015561028080516001600160a01b03851690526003602052516040812080549091816115cc575b5050505050505050506115c79061303a565b6113ea565b8160001981011161194657506115ec6020926115f2926000190190612cda565b506131ab565b019182516060610160510151610280519181811160001461193e57611617925061319e565b6103e89080828102048214811517156119245702925b516101605160608101519051906040519261164784612acc565b6001600160a01b03881684526020840152604083015260070b60608201526080810184905260a08101869052600260c0820152611682613203565b60e08201526102805161010082015260018060a01b038516610280515260056020526102805190604082209160018060a01b038251166001600160601b0360a01b84541617835560208201516001840155604082015160028401556003830160608301516001600160401b0319825416906001600160401b03161790556080820151600484015560a0820151600584015560c08201519060038210156110cf5750611730906006840161316f565b60e08101518051906001600160401b0382116110b5576117536007850154612a4e565b601f81116118e0575b506102805190602091601f841160011461183857506101006115c79d9c9b999794847f92971f04373cb63faf3272641a4532c832ab490e5cba6d98cb3805e2e0530e089c9a98956118059895600895610280519261182d575b50508160011b916000199060031b1c19161760078501555b01519101556117f7610160515160070b99604051988998895260a060208a015260a0890191612e5f565b918683036040880152612e5f565b606084019690965260808301526001600160a01b0316930390a29083808080808080806115b5565b0151905038806117b5565b60078601905261028051602081209291905b601f19851681106118c857506115c79d9c9b99979460018561180598956008957f92971f04373cb63faf3272641a4532c832ab490e5cba6d98cb3805e2e0530e089f9d9b989561010096601f198116106118af575b505050811b0160078501556117cd565b015160001960f88460031b161c1916905538808061189f565b9192602060018192868501518155019401920161184a565b6119149060078601610280515260206102805120601f850160051c8101916020861061191a575b601f0160051c0190613187565b8d61175c565b9091508190611907565b634e487b7160e01b61028051526011600452602461028051fd5b50509261162d565b634e487b7160e01b9052601160045261028051602490fd5b015190508e80611569565b60038601905261028051602081209291905b601f19851681106119c75750926005949260019260a09583601f198116106119ae575b505050811b016003850155611581565b015160001960f88460031b161c191690558e808061199e565b9192602060018192868501518155019401920161197b565b611a1390600386016102805152602061028051206005601f8601811c82019260208710611a19575b601f01901c0190613187565b8c611541565b9192508291611a07565b611a2c846130c4565b60018060a01b038416610280515260205260406102805120600160ff1982541617905588611488565b611a5e8461323b565b611464565b611a7b9060803d60801161099e5761098f8183612ae8565b61016052816113e4565b611a8e90612ab9565b6102805180156113a05780fd5b9093506020813d602011611ac7575b81611ab760209383612ae8565b81010312610a2957519285611358565b3d9150611aaa565b506001546001600160a01b031633146112e0565b346102a85761028051806003193601126103f4576040518060075491828152602080910192600761028051527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c6889161028051905b828210611b4e5761051f8561051381890382612ae8565b83546001600160a01b031686529485019460019384019390910190611b37565b346102a85761028051806003193601126103f4576020600754604051908152f35b346102a85760203660031901126102a8576001600160a01b03611bb0612a38565b1661028051526008602052602060ff6040610280512054166040519015158152f35b346102a85760203660031901126102a8576001600160a01b03611bf3612a38565b16610280515260046020526040610280512060ff81541660018201549160ff600282015416611c5f611c2760038401612b09565b611c4e60056004860154950154936040519788971515885260208801526040870190612baf565b60c0606086015260c0850190612bd2565b91608084015260a08301520390f35b60e03660031901126102a8576004356001600160401b0381116102a857611c99903690600401612a08565b6102c0526101a0526024356001600160401b0381116102a857611cc0903690600401612a08565b61020052610260526044356001600160401b0381116102a857611ce7903690600401612a08565b60c0526080526064356001600160401b0381116102a857611d0c903690600401612a08565b6102a052610180526084356001600160401b0381116102a857611d33903690600401612a08565b610140526101e05260a4356001600160401b0381116102a857611d5a903690600401612a08565b9060018060a01b03600254163314801561253e575b611d7890612f7b565b611d89610200516102c05114612fb8565b611d9960c0516102c05114612fb8565b611daa6102a0516102c05114612fb8565b611dbb610140516102c05114612fb8565b610280515460405163d47eed4560e01b815292906001600160a01b031660208480611dea858760048401612e80565b0381845afa9384156109a557610280519461250a575b50611e0d84341015612ff6565b803b156102a857611e3991604051948580948193631df3cbc560e31b8352610280519760048401612e80565b03925af180156109a5576124fb575b5061028051546040516396834ad360e01b815260c435600482015290608090829060249082906001600160a01b03165afa80156109a5576102805160e0526124da575b50610280515b6102c051808210156124d357610e4182611eae926101a05161305f565b90611ec081610200516102605161305f565b3591611ed18260c051608051613083565b9091611ee4846102a0516101805161305f565b35611ef685610140516101e051613083565b61028080516001600160a01b0386169052600960205251604090205491929160ff9081166124c5575b61028080516001600160a01b038716905260086020525160409020541615612491575b604051611f4e81612a88565b6001815288602082015260016040820152611f6a368789613129565b6060820152608081018390524260a082015261028080516001600160a01b0387169052600460205251604081208251815460ff191690151560ff1617815591906020820151600184015560408201519060038210156110cf5750611fd1906002840161316f565b60608101518051906001600160401b0382116110b557611ff46003850154612a4e565b601f8111612458575b506102805190602091601f84116001146123e2575091806005949260a09461028051926123d7575b50508160011b916000199060031b1c19161760038501555b60808101516004850155015191015561028080516001600160a01b0386169052600360205251604081208054909181612089575b505050505050505050612084915061303a565b611e91565b8160001981011161194657506115ec6020926120a9926000190190612cda565b01928351606060e051015161028051918181116000146123cf576120cd925061319e565b6103e89080828102048214811517156119245702935b5160e0516060810151905190604051926120fc84612acc565b6001600160a01b03891684526020840152604083015260070b60608201526080810185905260a081018a9052600160c082015261213a36888a613129565b60e08201528361010082015260018060a01b038616610280515260056020526102805190604082209160018060a01b038251166001600160601b0360a01b84541617835560208201516001840155604082015160028401556003830160608301516001600160401b0319825416906001600160401b03161790556080820151600484015560a0820151600584015560c08201519060038210156110cf57506121e5906006840161316f565b60e08101518051906001600160401b0382116110b5576122086007850154612a4e565b601f8111612396575b506102805190602091601f84116001146122f057506101006120849e999794846122bd98957faef9510f1fea4f9e98d52edc9ed5ecbb70fb93a756262405e9abcaff965d9b199e9d9b989560089561028051926122e5575b50508160011b916000199060031b1c19161760078501555b01519101556122aa60e0515160070b9a604051998a998a5260c060208b015260c08a0191612e5f565b9260408801528683036060880152612e5f565b608084019690965260a08301526001600160a01b0316930390a2828080808080808080612071565b015190503880612269565b60078601905261028051602081209291905b601f198516811061237e57506120849e9997946001857faef9510f1fea4f9e98d52edc9ed5ecbb70fb93a756262405e9abcaff965d9b199e9d9b9895600895610100956122bd9c99601f19811610612365575b505050811b016007850155612281565b015160001960f88460031b161c19169055388080612355565b91926020600181928685015181550194019201612302565b6123c99060078601610280515260206102805120601f850160051c8101916020861061191a57601f0160051c0190613187565b8d612211565b5050936120e3565b015190508e80612025565b60038601905261028051602081209291905b601f19851681106124405750926005949260019260a09583601f19811610612427575b505050811b01600385015561203d565b015160001960f88460031b161c191690558e8080612417565b919260206001819286850151815501940192016123f4565b61248b90600386016102805152602061028051206005601f8601811c82019260208710611a1957601f01901c0190613187565b8c611ffd565b61249a84613106565b61028080516001600160a01b038616905260086020525160409020805460ff19166001179055611f42565b6124ce85613316565b611f1f565b6102805180f35b6124f29060803d60801161099e5761098f8183612ae8565b60e05280611e8b565b61250490612ab9565b80611e48565b9093506020813d602011612536575b8161252660209383612ae8565b810103126102a857519284611e00565b3d9150612519565b506001546001600160a01b03163314611d6f565b346102a8576020806003193601126102a857600435336102805152600482526125d96040610280512060405161258781612a88565b60ff8254161515815260018201548582015260a0600560ff600285015416936125b4604085019586612cf6565b6125c060038201612b09565b6060850152600481015460808501520154910152612d02565b6003811015610a355760026125ef911415612d0f565b6125fa811515612d67565b33610280515260038252612646604061028051206040519061261b82612a88565b33825242858301528360408301524360608301526102805160808301526102805160a0830152612da4565b604051914283528201524360408201526102805160608201527f3a41b4a45381e8007eceed209f6413255128c9faf4a51f718825cab30cb89ffb60803392a26102805180f35b34610a29576060366003190112610a29576004356001600160401b038111610a29576126bc903690600401612a08565b6024356001600160401b038111610a29576126db903690600401612a08565b6044929192356001600160401b038111610a29576126fd903690600401612a08565b50506002546001600160a01b0316331480156129f4575b61271d90612f7b565b612728818314612fb8565b610280515b82811061273b576102805180f35b6001600160a01b03612751610e4183868961305f565b166102805152600860205260ff806040610280512054166129d9575b6001600160a01b03612783610e4184878a61305f565b166102805152600990816020526040610280512054161561298c575b506127ab81838661305f565b356040516127b881612a88565b600181526020810191825260408101600281526127d3613203565b60608301526102805160808301524260a08301526001600160a01b036127fd610e4186898c61305f565b16610280515260046020526102805190604082209361282b84511515869060ff801983541691151516179055565b516001850155519060038210156110cf575061284a906002840161316f565b60608101518051906001600160401b0382116110b55761286d6003850154612a4e565b90601f91828111612955575b506102805160209284116001146128dd5750928260059360a0936128cd98979661028051926128d25750508160011b916000199060031b1c191617600385015560808101516004850155015191015561303a565b61272d565b015190508c80610fbd565b6003860190526102805160208120929190601f198516905b81811061293d57509360a0936128cd98979693600193836005981061292457505050811b016003850155610fd5565b015160001960f88460031b161c191690558c8080611033565b929360206001819287860151815501950193016128f5565b6129869060038701610280515260206102805120600585808801821c830193602089106110ac5701901c0190613187565b8a612879565b6129a261299d610e4184878a61305f565b6130c4565b6001600160a01b036129b8610e4184878a61305f565b16610280515260205260406102805120600160ff198254161790558561279f565b6129ef6129ea610e4184878a61305f565b61323b565b61276d565b506001546001600160a01b03163314612714565b9181601f84011215610a29578235916001600160401b038311610a29576020808501948460051b010111610a2957565b600435906001600160a01b0382168203610a2957565b90600182811c92168015612a7e575b6020831014612a6857565b634e487b7160e01b600052602260045260246000fd5b91607f1691612a5d565b60c081019081106001600160401b03821117612aa357604052565b634e487b7160e01b600052604160045260246000fd5b6001600160401b038111612aa357604052565b61012081019081106001600160401b03821117612aa357604052565b90601f801991011681019081106001600160401b03821117612aa357604052565b9060405191826000825492612b1d84612a4e565b908184526001948581169081600014612b8c5750600114612b49575b5050612b4792500383612ae8565b565b9093915060005260209081600020936000915b818310612b74575050612b4793508201013880612b39565b85548884018501529485019487945091830191612b5c565b915050612b4794506020925060ff191682840152151560051b8201013880612b39565b906003821015612bbc5752565b634e487b7160e01b600052602160045260246000fd5b919082519283825260005b848110612bfe575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201612bdd565b6020908160408183019282815285518094520193019160005b828110612c39575050505090565b83516001600160a01b031685529381019392810192600101612c2b565b600654811015612c8d5760066000527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f0190600090565b634e487b7160e01b600052603260045260246000fd5b600754811015612c8d5760076000527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c6880190600090565b8054821015612c8d576000526005602060002091020190600090565b6003821015612bbc5752565b516003811015612bbc5790565b15612d1657565b60405162461bcd60e51b815260206004820152602360248201527f42616420626f74206465746563746564202d2074726164696e6720626c6f636b60448201526265642160e81b6064820152608490fd5b15612d6e57565b60405162461bcd60e51b815260206004820152600e60248201526d125b9d985b1a5908185b5bdd5b9d60921b6044820152606490fd5b8054600160401b811015612aa357612dc191600182018155612cda565b612e495760049060018060a01b038351166001600160601b0360a01b82541617815560208301516001820155604083015160028201556060830151600382015501906080810151906001600160401b036fffffffffffffffff000000000000000060a0855493015160401b169216906fffffffffffffffffffffffffffffffff191617179055565b634e487b7160e01b600052600060045260246000fd5b908060209392818452848401376000828201840152601f01601f1916010190565b9160208181850182865252604084019360408360051b82010194846000925b858410612eb0575050505050505090565b90919293949596603f198282030184528735601e1984360301811215610a295783018681019190356001600160401b038111610a29578036038313610a2957612efe88928392600195612e5f565b990194019401929594939190612e9f565b90816080910312610a2957604051906001600160401b036080830181811184821017612aa35760405281518060070b8103610a2957835260208201519081168103610a295760208301526040810151908160030b8203610a295760609160408401520151606082015290565b15612f8257565b60405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b6044820152606490fd5b15612fbf57565b60405162461bcd60e51b815260206004820152600f60248201526e098cadccee8d040dad2e6dac2e8c6d608b1b6044820152606490fd5b15612ffd57565b60405162461bcd60e51b8152602060048201526015602482015274496e73756666696369656e7420507974682066656560581b6044820152606490fd5b60001981146130495760010190565b634e487b7160e01b600052601160045260246000fd5b9190811015612c8d5760051b0190565b356001600160a01b0381168103610a295790565b9190811015612c8d5760051b81013590601e1981360301821215610a295701908135916001600160401b038311610a29576020018236038113610a29579190565b60075490600160401b821015612aa3576130e7826001612b479401600755612ca3565b90919082549060031b9160018060a01b03809116831b921b1916179055565b60065490600160401b821015612aa3576130e7826001612b479401600655612c56565b9291926001600160401b038211612aa35760405191613152601f8201601f191660200184612ae8565b829481845281830111610a29578281602093846000960137010152565b906003811015612bbc5760ff80198354169116179055565b818110613192575050565b60008155600101613187565b9190820391821161304957565b906040516131b881612a88565b60a06001600160401b0360048395600180851b03815416855260018101546020860152600281015460408601526003810154606086015201548060070b608085015260401c16910152565b60405190604082018281106001600160401b03821117612aa357604052600c82526b4d616e6970756c617469766560a01b6020830152565b60005b6006805490818310156133105761325483612c56565b90546001600160a01b0386811694909260039290831b1c831685146132865750505050506132819061303a565b61323e565b9395509193600019939091848201918211613049576132b7936132ab6130e793612c56565b9054911b1c1691612c56565b815480156132fa5701906132e26132cd83612c56565b81549060018060a01b039060031b1b19169055565b556000526008602052604060002060ff198154169055565b634e487b7160e01b600052603160045260246000fd5b50505050565b60005b6007805490818310156133105761332f83612ca3565b90546001600160a01b0386811694909260039290831b1c8316851461336157505050505061335c9061303a565b613319565b939550919360001993909184820191821161304957613392936133866130e793612ca3565b9054911b1c1691612ca3565b815480156132fa5701906133a86132cd83612ca3565b556000526009602052604060002060ff198154169055565b6133ca8154612a4e565b90816133d4575050565b81601f600093116001146133e6575055565b908083918252613405601f60208420940160051c840160018501613187565b555556fea2646970667358221220f55abf555f6bd6c4d0e7b9cb09cf7921fadbf0a3c2d942832dca594b193d738c64736f6c63430008130033","opcodes":"PUSH1 0x80 CALLVALUE PUSH3 0xA1 JUMPI PUSH1 0x1F PUSH3 0x3511 CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH3 0xA6 JUMPI DUP1 DUP5 SWAP3 PUSH1 0x40 SWAP5 DUP6 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH3 0xA1 JUMPI PUSH3 0x5A PUSH1 0x20 PUSH3 0x52 DUP4 PUSH3 0xBC JUMP JUMPDEST SWAP3 ADD PUSH3 0xBC JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x1 DUP1 SLOAD DUP3 AND CALLER OR SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD SWAP1 SWAP2 AND SWAP2 SWAP1 SWAP3 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH2 0x343F SWAP1 DUP2 PUSH3 0xD2 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH3 0xA1 JUMPI JUMP INVALID PUSH2 0x360 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x280 MSTORE PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH3 0xD2798B EQ PUSH2 0x268C JUMPI DUP1 PUSH4 0x2D2838B EQ PUSH2 0x2552 JUMPI DUP1 PUSH4 0xD7555CC EQ PUSH2 0x1C6E JUMPI DUP1 PUSH4 0x20BAE1CB EQ PUSH2 0x1BD2 JUMPI DUP1 PUSH4 0x26463B63 EQ PUSH2 0x1B8F JUMPI DUP1 PUSH4 0x31EBA1AF EQ PUSH2 0x1B6E JUMPI DUP1 PUSH4 0x36786D02 EQ PUSH2 0x1AE3 JUMPI DUP1 PUSH4 0x382EC63F EQ PUSH2 0x1208 JUMPI DUP1 PUSH4 0x3BBAC579 EQ PUSH2 0x116B JUMPI DUP1 PUSH4 0x472279A2 EQ PUSH2 0xD4D JUMPI DUP1 PUSH4 0x4D4CA309 EQ PUSH2 0xBD3 JUMPI DUP1 PUSH4 0x81D1AE62 EQ PUSH2 0xBAA JUMPI DUP1 PUSH4 0x88BBAFB2 EQ PUSH2 0xB89 JUMPI DUP1 PUSH4 0x927C7742 EQ PUSH2 0xA4F JUMPI DUP1 PUSH4 0x9CDA8908 EQ PUSH2 0x747 JUMPI DUP1 PUSH4 0xAA2CA71B EQ PUSH2 0x6CC JUMPI DUP1 PUSH4 0xB1B1FFAB EQ PUSH2 0x62E JUMPI DUP1 PUSH4 0xC32D2A02 EQ PUSH2 0x56F JUMPI DUP1 PUSH4 0xC35FC524 EQ PUSH2 0x543 JUMPI DUP1 PUSH4 0xD739080D EQ PUSH2 0x4A8 JUMPI DUP1 PUSH4 0xD90C410F EQ PUSH2 0x465 JUMPI DUP1 PUSH4 0xEACA6A78 EQ PUSH2 0x423 JUMPI DUP1 PUSH4 0xF851A440 EQ PUSH2 0x3F7 JUMPI DUP1 PUSH4 0xF98D06F0 EQ PUSH2 0x3CA JUMPI DUP1 PUSH4 0xFB4AAF0F EQ PUSH2 0x2AF JUMPI PUSH4 0xFED20C78 EQ PUSH2 0x140 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x2A8 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2A8 JUMPI PUSH32 0x7CBD5E661DDE6A21CF48D6CF4909ACF3B8C27773F4CD5050AB0CF692833173C2 PUSH2 0x17B PUSH2 0x2A38 JUMP JUMPDEST SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 PUSH1 0x2 SLOAD AND CALLER EQ DUP1 ISZERO PUSH2 0x29B JUMPI JUMPDEST PUSH2 0x19A SWAP1 PUSH2 0x2F7B JUMP JUMPDEST DUP4 AND SWAP3 DUP4 PUSH2 0x280 MLOAD MSTORE PUSH1 0x4 DUP3 MSTORE PUSH2 0x280 MLOAD SWAP1 PUSH1 0xFF PUSH1 0x40 DUP2 PUSH1 0x2 DUP3 DUP7 KECCAK256 ADD SLOAD AND SWAP4 PUSH1 0x8 DUP7 MSTORE KECCAK256 SLOAD AND PUSH2 0x28D JUMPI JUMPDEST DUP5 PUSH2 0x280 MLOAD MSTORE PUSH1 0x9 DUP4 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH2 0x280 MLOAD KECCAK256 SLOAD AND PUSH2 0x27E JUMPI JUMPDEST POP DUP4 PUSH2 0x280 MLOAD MSTORE PUSH1 0x4 DUP3 MSTORE DUP4 PUSH1 0x5 PUSH2 0x280 MLOAD PUSH1 0x40 DUP2 KECCAK256 SWAP1 DUP1 DUP3 SSTORE DUP1 PUSH1 0x1 DUP4 ADD SSTORE PUSH1 0x2 DUP3 ADD SSTORE PUSH2 0x211 PUSH1 0x3 DUP3 ADD PUSH2 0x33C0 JUMP JUMPDEST PUSH2 0x280 MLOAD SWAP2 DUP2 DUP4 PUSH1 0x4 DUP2 SWAP5 ADD SSTORE ADD SSTORE MSTORE PUSH1 0x5 DUP3 MSTORE PUSH2 0x280 MLOAD PUSH1 0x40 DUP2 KECCAK256 SWAP1 DUP1 DUP3 SSTORE DUP1 PUSH1 0x1 DUP4 ADD SSTORE DUP1 PUSH1 0x2 DUP4 ADD SSTORE DUP1 PUSH1 0x3 DUP4 ADD SSTORE DUP1 PUSH1 0x4 DUP4 ADD SSTORE DUP1 PUSH1 0x5 DUP4 ADD SSTORE PUSH1 0x6 DUP3 ADD SSTORE PUSH2 0x260 PUSH1 0x7 DUP3 ADD PUSH2 0x33C0 JUMP JUMPDEST PUSH1 0x8 PUSH2 0x280 MLOAD SWAP2 ADD SSTORE PUSH2 0x276 PUSH1 0x40 MLOAD DUP1 SWAP3 PUSH2 0x2BAF JUMP JUMPDEST LOG2 PUSH2 0x280 MLOAD DUP1 RETURN JUMPDEST PUSH2 0x287 SWAP1 PUSH2 0x3316 JUMP JUMPDEST CODESIZE PUSH2 0x1E0 JUMP JUMPDEST PUSH2 0x296 DUP2 PUSH2 0x323B JUMP JUMPDEST PUSH2 0x1C6 JUMP JUMPDEST POP PUSH1 0x1 SLOAD DUP2 AND CALLER EQ PUSH2 0x191 JUMP JUMPDEST PUSH2 0x280 MLOAD DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x2A8 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2A8 JUMPI PUSH2 0x2C9 PUSH2 0x2A38 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D5 DUP2 PUSH2 0x2A88 JUMP JUMPDEST PUSH2 0x280 MLOAD DUP2 MSTORE PUSH2 0x280 MLOAD DUP4 DUP3 ADD MSTORE PUSH2 0x280 MLOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP1 DUP3 ADD MSTORE PUSH2 0x280 MLOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 PUSH2 0x280 MLOAD SWAP2 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH2 0x280 MLOAD MSTORE PUSH1 0x4 DUP2 MSTORE PUSH1 0x40 PUSH2 0x280 MLOAD KECCAK256 PUSH1 0x40 MLOAD SWAP1 PUSH2 0x329 DUP3 PUSH2 0x2A88 JUMP JUMPDEST PUSH1 0xFF DUP2 SLOAD AND ISZERO ISZERO DUP3 MSTORE PUSH1 0x1 DUP2 ADD SLOAD DUP4 DUP4 ADD SWAP1 DUP2 MSTORE PUSH2 0x3B9 PUSH1 0xFF PUSH1 0x2 DUP5 ADD SLOAD AND PUSH2 0x356 PUSH1 0x40 DUP7 ADD SWAP2 DUP3 PUSH2 0x2CF6 JUMP JUMPDEST PUSH2 0x3A7 PUSH2 0x365 PUSH1 0x3 DUP7 ADD PUSH2 0x2B09 JUMP JUMPDEST SWAP2 PUSH1 0x60 DUP8 ADD SWAP3 DUP4 MSTORE PUSH1 0x5 PUSH1 0x4 DUP8 ADD SLOAD SWAP7 PUSH1 0x80 DUP10 ADD SWAP8 DUP9 MSTORE ADD SLOAD SWAP5 PUSH1 0xA0 DUP9 ADD SWAP6 DUP7 MSTORE PUSH1 0x40 MLOAD SWAP9 DUP10 SWAP9 DUP2 DUP11 MSTORE MLOAD ISZERO ISZERO SWAP1 DUP10 ADD MSTORE MLOAD PUSH1 0x40 DUP9 ADD MSTORE MLOAD PUSH1 0x60 DUP8 ADD SWAP1 PUSH2 0x2BAF JUMP JUMPDEST MLOAD PUSH1 0xC0 PUSH1 0x80 DUP7 ADD MSTORE PUSH1 0xE0 DUP6 ADD SWAP1 PUSH2 0x2BD2 JUMP JUMPDEST SWAP2 MLOAD PUSH1 0xA0 DUP5 ADD MSTORE MLOAD PUSH1 0xC0 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x2A8 JUMPI PUSH2 0x280 MLOAD DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3F4 JUMPI SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x2A8 JUMPI PUSH2 0x280 MLOAD DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3F4 JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x2A8 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2A8 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x2A8 JUMPI PUSH2 0x44C PUSH1 0x20 SWAP2 PUSH2 0x2CA3 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x3 SWAP3 SWAP1 SWAP3 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2A8 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2A8 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x486 PUSH2 0x2A38 JUMP JUMPDEST AND PUSH2 0x280 MLOAD MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH2 0x280 MLOAD KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2A8 JUMPI PUSH2 0x280 MLOAD DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3F4 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x6 SLOAD SWAP2 DUP3 DUP2 MSTORE PUSH1 0x20 DUP1 SWAP2 ADD SWAP3 PUSH1 0x6 PUSH2 0x280 MLOAD MSTORE PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F SWAP2 PUSH2 0x280 MLOAD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x523 JUMPI PUSH2 0x51F DUP6 PUSH2 0x513 DUP2 DUP10 SUB DUP3 PUSH2 0x2AE8 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x2C12 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 MSTORE SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x4FC JUMP JUMPDEST CALLVALUE PUSH2 0x2A8 JUMPI PUSH2 0x280 MLOAD DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3F4 JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x2A8 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2A8 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 PUSH2 0x591 PUSH2 0x2A38 JUMP JUMPDEST AND PUSH2 0x280 MLOAD MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH2 0x280 MLOAD KECCAK256 SWAP1 DUP2 SLOAD AND PUSH1 0x1 DUP3 ADD SLOAD SWAP2 PUSH2 0x623 PUSH1 0x2 DUP3 ADD SLOAD SWAP2 PUSH2 0x612 PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x4 DUP4 ADD SLOAD PUSH1 0x5 DUP5 ADD SLOAD SWAP1 PUSH1 0xFF PUSH1 0x6 DUP7 ADD SLOAD AND SWAP3 PUSH1 0x8 PUSH2 0x5E0 PUSH1 0x7 DUP9 ADD PUSH2 0x2B09 JUMP JUMPDEST SWAP7 ADD SLOAD SWAP8 PUSH1 0x40 MLOAD SWAP11 DUP12 SWAP11 DUP12 MSTORE PUSH1 0x20 DUP12 ADD MSTORE PUSH1 0x40 DUP11 ADD MSTORE PUSH1 0x7 SIGNEXTEND PUSH1 0x60 DUP10 ADD MSTORE PUSH1 0x80 DUP9 ADD MSTORE PUSH1 0xA0 DUP8 ADD MSTORE PUSH1 0xC0 DUP7 ADD SWAP1 PUSH2 0x2BAF JUMP JUMPDEST PUSH2 0x120 DUP1 PUSH1 0xE0 DUP7 ADD MSTORE DUP5 ADD SWAP1 PUSH2 0x2BD2 JUMP JUMPDEST SWAP1 PUSH2 0x100 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x2A8 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2A8 JUMPI PUSH2 0x647 PUSH2 0x2A38 JUMP JUMPDEST PUSH2 0x280 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP1 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE MLOAD PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x24 CALLDATALOAD SWAP4 SWAP3 SWAP1 DUP5 LT ISZERO PUSH2 0x3F4 JUMPI POP PUSH2 0x687 PUSH1 0xC0 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP3 PUSH2 0x2CDA JUMP JUMPDEST POP SWAP2 DUP3 SLOAD AND SWAP2 PUSH1 0x1 DUP2 ADD SLOAD SWAP1 PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x4 PUSH1 0x3 DUP4 ADD SLOAD SWAP3 ADD SLOAD SWAP3 PUSH1 0x40 MLOAD SWAP6 DUP7 MSTORE PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP5 ADD MSTORE DUP1 PUSH1 0x7 SIGNEXTEND PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x40 SHR AND PUSH1 0xA0 DUP3 ADD MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2A8 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2A8 JUMPI PUSH2 0x6E5 PUSH2 0x2A38 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 DUP3 AND CALLER SUB PUSH2 0x715 JUMPI AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0x2 SLOAD AND OR PUSH1 0x2 SSTORE PUSH2 0x280 MLOAD DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x27B7363C9030B236B4B7 PUSH1 0xB1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2A8 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x24 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x2A8 JUMPI PUSH2 0x776 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2A08 JUMP JUMPDEST SWAP1 SWAP3 CALLER PUSH2 0x280 MLOAD MSTORE PUSH1 0x20 SWAP3 PUSH1 0x4 DUP5 MSTORE PUSH1 0x40 PUSH2 0x280 MLOAD KECCAK256 SWAP3 PUSH2 0x7F1 PUSH1 0x40 MLOAD PUSH2 0x79C DUP2 PUSH2 0x2A88 JUMP JUMPDEST PUSH1 0xFF DUP7 SLOAD AND ISZERO ISZERO DUP2 MSTORE PUSH1 0x1 DUP7 ADD SLOAD DUP8 DUP3 ADD MSTORE PUSH1 0xFF PUSH1 0x2 DUP8 ADD SLOAD AND SWAP1 PUSH2 0x7C5 PUSH1 0x40 DUP3 ADD SWAP3 DUP4 PUSH2 0x2CF6 JUMP JUMPDEST PUSH2 0x7D1 PUSH1 0x3 DUP9 ADD PUSH2 0x2B09 JUMP JUMPDEST PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x5 PUSH1 0x4 DUP10 ADD SLOAD SWAP9 PUSH1 0x80 SWAP10 DUP11 DUP6 ADD MSTORE ADD SLOAD SWAP2 ADD MSTORE PUSH2 0x2D02 JUMP JUMPDEST PUSH1 0x3 DUP2 LT ISZERO PUSH2 0xA35 JUMPI PUSH1 0x2 PUSH2 0x807 SWAP2 EQ ISZERO PUSH2 0x2D0F JUMP JUMPDEST PUSH2 0x812 DUP4 ISZERO ISZERO PUSH2 0x2D67 JUMP JUMPDEST PUSH2 0x280 MLOAD SLOAD PUSH1 0x40 MLOAD PUSH4 0xD47EED45 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP8 SWAP1 SWAP3 SWAP1 SWAP2 DUP9 AND DUP8 DUP5 DUP1 PUSH2 0x844 DUP6 DUP8 PUSH1 0x4 DUP5 ADD PUSH2 0x2E80 JUMP JUMPDEST SUB DUP2 DUP5 GAS STATICCALL SWAP4 DUP5 ISZERO PUSH2 0x9A5 JUMPI PUSH2 0x280 MLOAD SWAP5 PUSH2 0xA01 JUMPI JUMPDEST POP DUP4 CALLVALUE LT PUSH2 0x9C9 JUMPI DUP1 EXTCODESIZE ISZERO PUSH2 0x2A8 JUMPI PUSH2 0x88E SWAP2 PUSH1 0x40 MLOAD SWAP5 DUP6 DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x1DF3CBC5 PUSH1 0xE3 SHL DUP4 MSTORE PUSH2 0x280 MLOAD SWAP8 PUSH1 0x4 DUP5 ADD PUSH2 0x2E80 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x9A5 JUMPI PUSH2 0x9B3 JUMPI JUMPDEST POP DUP3 PUSH1 0x44 SWAP5 SWAP6 PUSH2 0x280 MLOAD SLOAD AND PUSH1 0x40 MLOAD SWAP6 DUP7 DUP1 SWAP3 PUSH4 0x52571AF PUSH1 0xE5 SHL DUP3 MSTORE DUP3 CALLDATALOAD PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x3C PUSH1 0x24 DUP4 ADD MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x9A5 JUMPI PUSH32 0x3A41B4A45381E8007ECEED209F6413255128C9FAF4A51F718825CAB30CB89FFB SWAP5 PUSH2 0x280 MLOAD SWAP3 PUSH2 0x972 JUMPI JUMPDEST POP PUSH2 0x94E SWAP1 CALLER PUSH2 0x280 MLOAD MSTORE PUSH1 0x3 DUP8 MSTORE PUSH1 0x40 PUSH2 0x280 MLOAD KECCAK256 DUP4 MLOAD SWAP2 PUSH1 0x60 DUP6 ADD MLOAD AND PUSH1 0x40 MLOAD SWAP3 PUSH2 0x929 DUP5 PUSH2 0x2A88 JUMP JUMPDEST CALLER DUP5 MSTORE TIMESTAMP DUP11 DUP6 ADD MSTORE DUP7 PUSH1 0x40 DUP6 ADD MSTORE NUMBER PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x7 SIGNEXTEND DUP8 DUP5 ADD MSTORE PUSH1 0xA0 DUP4 ADD MSTORE PUSH2 0x2DA4 JUMP JUMPDEST MLOAD PUSH1 0x7 SIGNEXTEND SWAP1 PUSH1 0x40 MLOAD SWAP5 TIMESTAMP DUP7 MSTORE DUP6 ADD MSTORE NUMBER PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP5 ADD MSTORE CALLER SWAP3 LOG2 PUSH2 0x280 MLOAD DUP1 RETURN JUMPDEST PUSH2 0x94E SWAP2 SWAP3 POP PUSH2 0x997 SWAP1 DUP6 RETURNDATASIZE DUP8 GT PUSH2 0x99E JUMPI JUMPDEST PUSH2 0x98F DUP2 DUP4 PUSH2 0x2AE8 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x2F0F JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x8FD JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x985 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH2 0x280 MLOAD DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x9BC SWAP1 PUSH2 0x2AB9 JUMP JUMPDEST PUSH2 0x280 MLOAD DUP1 ISZERO PUSH2 0x89D JUMPI DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP10 SWAP1 MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x496E73756666696369656E7420666565 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 SWAP4 POP DUP8 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0xA2E JUMPI JUMPDEST PUSH2 0xA19 DUP2 DUP4 PUSH2 0x2AE8 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xA29 JUMPI MLOAD SWAP3 DUP10 PUSH2 0x85A JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0xA0F JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH2 0x280 MLOAD MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH2 0x280 MLOAD REVERT JUMPDEST CALLVALUE PUSH2 0x2A8 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2A8 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 PUSH2 0xA72 PUSH2 0x2A38 JUMP JUMPDEST AND PUSH2 0x280 MLOAD MSTORE PUSH1 0x3 DUP3 MSTORE PUSH2 0x280 MLOAD SWAP2 PUSH1 0x40 DUP4 KECCAK256 SWAP1 DUP2 SLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP5 DUP6 DUP4 GT PUSH2 0xB71 JUMPI POP SWAP3 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH1 0x5 PUSH2 0xAB0 DUP7 DUP4 DUP4 SHL ADD DUP5 PUSH2 0x2AE8 JUMP JUMPDEST DUP2 DUP4 MSTORE DUP6 DUP4 ADD DUP1 SWAP6 PUSH2 0x280 MLOAD MSTORE PUSH2 0x280 MLOAD DUP8 DUP2 KECCAK256 SWAP1 SWAP2 JUMPDEST DUP5 DUP4 LT PUSH2 0xB4D JUMPI POP POP POP POP POP PUSH1 0x40 MLOAD SWAP4 DUP1 DUP6 ADD SWAP2 DUP2 DUP7 MSTORE MLOAD DUP1 SWAP3 MSTORE PUSH1 0x40 DUP6 ADD SWAP4 SWAP3 PUSH2 0x280 MLOAD SWAP1 JUMPDEST DUP4 DUP3 LT PUSH2 0xAFB JUMPI DUP7 DUP7 SUB DUP8 RETURN JUMPDEST DUP5 MLOAD DUP1 MLOAD DUP3 AND DUP8 MSTORE DUP1 DUP5 ADD MLOAD DUP8 DUP6 ADD MSTORE PUSH1 0x40 DUP1 DUP3 ADD MLOAD SWAP1 DUP9 ADD MSTORE PUSH1 0x60 DUP1 DUP3 ADD MLOAD SWAP1 DUP9 ADD MSTORE PUSH1 0x80 DUP1 DUP3 ADD MLOAD PUSH1 0x7 SIGNEXTEND SWAP1 DUP9 ADD MSTORE PUSH1 0xA0 SWAP1 DUP2 ADD MLOAD DUP10 AND SWAP1 DUP8 ADD MSTORE PUSH1 0xC0 SWAP1 SWAP6 ADD SWAP5 SWAP4 DUP3 ADD SWAP4 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH2 0xAEE JUMP JUMPDEST DUP4 DUP10 PUSH1 0x1 SWAP3 PUSH2 0xB5F DUP6 SWAP13 SWAP10 SWAP11 SWAP13 PUSH2 0x31AB JUMP JUMPDEST DUP2 MSTORE ADD SWAP3 ADD SWAP3 ADD SWAP2 SWAP1 SWAP8 SWAP6 SWAP5 SWAP8 PUSH2 0xAC7 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL SWAP1 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH2 0x280 MLOAD PUSH1 0x24 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x2A8 JUMPI PUSH2 0x280 MLOAD DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3F4 JUMPI PUSH1 0x20 PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2A8 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2A8 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x2A8 JUMPI PUSH2 0x44C PUSH1 0x20 SWAP2 PUSH2 0x2C56 JUMP JUMPDEST CALLVALUE PUSH2 0x2A8 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2A8 JUMPI PUSH2 0xD2F SWAP1 PUSH2 0xBF1 PUSH2 0x2A38 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBFD DUP2 PUSH2 0x2ACC JUMP JUMPDEST PUSH2 0x280 MLOAD DUP2 MSTORE PUSH2 0x280 MLOAD DUP4 DUP3 ADD MSTORE PUSH2 0x280 MLOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x280 MLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x280 MLOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH2 0x280 MLOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH2 0x280 MLOAD PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0xE0 DUP3 ADD MSTORE PUSH2 0x280 MLOAD PUSH2 0x100 DUP1 SWAP3 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP3 AND PUSH2 0x280 MLOAD MSTORE PUSH1 0x5 DUP4 MSTORE PUSH2 0xD43 PUSH1 0x40 PUSH2 0x280 MLOAD KECCAK256 SWAP3 PUSH1 0x40 MLOAD SWAP6 DUP7 DUP1 SWAP6 DUP2 SWAP4 PUSH2 0xC7A DUP4 PUSH2 0x2ACC JUMP JUMPDEST DUP1 DUP3 SLOAD AND DUP4 MSTORE PUSH1 0x1 DUP3 ADD SLOAD DUP10 DUP5 ADD SWAP1 DUP2 MSTORE PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x40 DUP6 ADD SWAP1 DUP2 MSTORE PUSH1 0x3 DUP5 ADD SLOAD SWAP2 PUSH1 0x60 DUP7 ADD SWAP3 PUSH1 0x7 SIGNEXTEND DUP4 MSTORE DUP12 PUSH1 0x4 DUP7 ADD SLOAD SWAP5 PUSH1 0x80 DUP9 ADD SWAP6 DUP7 MSTORE DUP12 PUSH1 0x8 PUSH1 0x5 DUP10 ADD SLOAD SWAP9 PUSH1 0xA0 DUP12 ADD SWAP10 DUP11 MSTORE PUSH2 0xCDB PUSH1 0xC0 PUSH1 0xFF PUSH1 0x6 DUP5 ADD SLOAD AND SWAP13 ADD SWAP12 DUP13 PUSH2 0x2CF6 JUMP JUMPDEST PUSH1 0xE0 PUSH2 0xCE9 PUSH1 0x7 DUP4 ADD PUSH2 0x2B09 JUMP JUMPDEST SWAP14 ADD SWAP13 DUP14 MSTORE ADD SLOAD SWAP14 ADD SWAP13 DUP14 MSTORE PUSH1 0x40 MLOAD SWAP15 DUP16 SWAP15 DUP16 MSTORE MLOAD AND SWAP1 DUP14 ADD MSTORE MLOAD PUSH1 0x40 DUP13 ADD MSTORE MLOAD PUSH1 0x60 DUP12 ADD MSTORE MLOAD PUSH1 0x7 SIGNEXTEND PUSH1 0x80 DUP11 ADD MSTORE MLOAD PUSH1 0xA0 DUP10 ADD MSTORE MLOAD PUSH1 0xC0 DUP9 ADD MSTORE MLOAD PUSH1 0xE0 DUP8 ADD SWAP1 PUSH2 0x2BAF JUMP JUMPDEST MLOAD PUSH2 0x120 DUP1 SWAP4 DUP7 ADD MSTORE PUSH2 0x140 DUP6 ADD SWAP1 PUSH2 0x2BD2 JUMP JUMPDEST SWAP2 MLOAD SWAP1 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x2A8 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2A8 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2A8 JUMPI PUSH2 0xD7D SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2A08 JUMP JUMPDEST SWAP1 PUSH2 0x340 MSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2A8 JUMPI PUSH2 0xDA1 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2A08 JUMP JUMPDEST PUSH2 0x300 MSTORE PUSH2 0x320 MSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2A8 JUMPI PUSH2 0xDC8 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2A08 JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x64 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2A8 JUMPI PUSH2 0xDE9 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2A08 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x2 SLOAD AND CALLER EQ DUP1 ISZERO PUSH2 0x1157 JUMPI JUMPDEST PUSH2 0xE08 SWAP1 PUSH2 0x2F7B JUMP JUMPDEST PUSH2 0xE16 PUSH2 0x300 MLOAD DUP4 EQ PUSH2 0x2FB8 JUMP JUMPDEST PUSH2 0x280 MLOAD JUMPDEST DUP3 DUP2 LT PUSH2 0xE29 JUMPI PUSH2 0x280 MLOAD DUP1 RETURN JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH2 0xE46 PUSH2 0xE41 DUP4 DUP7 PUSH2 0x340 MLOAD PUSH2 0x305F JUMP JUMPDEST PUSH2 0x306F JUMP JUMPDEST AND PUSH2 0x280 MLOAD MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0xFF DUP1 PUSH1 0x40 PUSH2 0x280 MLOAD KECCAK256 SLOAD AND PUSH2 0x1139 JUMPI JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH2 0xE7A PUSH2 0xE41 DUP5 DUP8 PUSH2 0x340 MLOAD PUSH2 0x305F JUMP JUMPDEST AND PUSH2 0x280 MLOAD MSTORE PUSH1 0x8 SWAP1 DUP2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH2 0x280 MLOAD KECCAK256 SLOAD AND ISZERO PUSH2 0x10E7 JUMPI JUMPDEST POP PUSH2 0xEA8 DUP2 PUSH2 0x300 MLOAD PUSH2 0x320 MLOAD PUSH2 0x305F JUMP JUMPDEST CALLDATALOAD PUSH2 0xEB4 DUP3 DUP8 DUP10 PUSH2 0x3083 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0xEEC PUSH2 0xEC4 DUP6 DUP10 DUP9 PUSH2 0x305F JUMP JUMPDEST CALLDATALOAD SWAP2 PUSH1 0x40 MLOAD SWAP4 PUSH2 0xED3 DUP6 PUSH2 0x2A88 JUMP JUMPDEST PUSH1 0x1 DUP6 MSTORE PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x40 DUP5 ADD SWAP5 PUSH1 0x1 DUP7 MSTORE CALLDATASIZE SWAP2 PUSH2 0x3129 JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE TIMESTAMP PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH2 0xF14 PUSH2 0xE41 DUP6 DUP9 PUSH2 0x340 MLOAD PUSH2 0x305F JUMP JUMPDEST AND PUSH2 0x280 MLOAD MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH2 0x280 MLOAD PUSH1 0x40 DUP2 KECCAK256 SWAP3 PUSH2 0xF41 DUP4 MLOAD ISZERO ISZERO DUP6 SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x1 DUP6 ADD SSTORE MLOAD SWAP1 PUSH1 0x3 DUP3 LT ISZERO PUSH2 0x10CF JUMPI POP PUSH2 0xF64 SWAP1 PUSH1 0x2 DUP5 ADD PUSH2 0x316F JUMP JUMPDEST PUSH1 0x60 DUP2 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x10B5 JUMPI PUSH2 0xF87 PUSH1 0x3 DUP6 ADD SLOAD PUSH2 0x2A4E JUMP JUMPDEST SWAP1 PUSH1 0x1F SWAP2 DUP3 DUP2 GT PUSH2 0x1074 JUMPI JUMPDEST POP PUSH2 0x280 MLOAD PUSH1 0x20 SWAP3 DUP5 GT PUSH1 0x1 EQ PUSH2 0xFF9 JUMPI POP SWAP3 DUP3 PUSH1 0x5 SWAP4 PUSH1 0xA0 SWAP4 PUSH2 0xFE9 SWAP9 SWAP8 SWAP7 PUSH2 0x280 MLOAD SWAP3 PUSH2 0xFEE JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x3 DUP6 ADD SSTORE JUMPDEST PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x4 DUP6 ADD SSTORE ADD MLOAD SWAP2 ADD SSTORE PUSH2 0x303A JUMP JUMPDEST PUSH2 0xE1B JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP14 DUP1 PUSH2 0xFBD JUMP JUMPDEST PUSH1 0x3 DUP7 ADD SWAP1 MSTORE PUSH2 0x280 MLOAD PUSH1 0x20 DUP2 KECCAK256 SWAP3 SWAP2 SWAP1 JUMPDEST PUSH1 0x1F NOT DUP6 AND DUP2 LT PUSH2 0x105C JUMPI POP DUP4 PUSH1 0xA0 SWAP4 PUSH2 0xFE9 SWAP9 SWAP8 SWAP7 SWAP4 PUSH1 0x1 SWAP4 PUSH1 0x5 SWAP8 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x1043 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x3 DUP6 ADD SSTORE PUSH2 0xFD5 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP14 DUP1 DUP1 PUSH2 0x1033 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x100B JUMP JUMPDEST PUSH2 0x10A6 SWAP1 PUSH1 0x3 DUP8 ADD PUSH2 0x280 MLOAD MSTORE PUSH1 0x20 PUSH2 0x280 MLOAD KECCAK256 PUSH1 0x5 DUP6 DUP1 DUP9 ADD DUP3 SHR DUP4 ADD SWAP4 PUSH1 0x20 DUP10 LT PUSH2 0x10AC JUMPI JUMPDEST ADD SWAP1 SHR ADD SWAP1 PUSH2 0x3187 JUMP JUMPDEST DUP12 PUSH2 0xF93 JUMP JUMPDEST SWAP4 POP DUP3 SWAP4 PUSH2 0x109C JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH2 0x280 MLOAD MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH2 0x280 MLOAD REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL SWAP1 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH2 0x280 MLOAD PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH2 0x1100 PUSH2 0x10FB PUSH2 0xE41 DUP5 DUP8 PUSH2 0x340 MLOAD PUSH2 0x305F JUMP JUMPDEST PUSH2 0x3106 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH2 0x1118 PUSH2 0xE41 DUP5 DUP8 PUSH2 0x340 MLOAD PUSH2 0x305F JUMP JUMPDEST AND PUSH2 0x280 MLOAD MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH2 0x280 MLOAD KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE DUP7 PUSH2 0xE96 JUMP JUMPDEST PUSH2 0x1152 PUSH2 0x114D PUSH2 0xE41 DUP5 DUP8 PUSH2 0x340 MLOAD PUSH2 0x305F JUMP JUMPDEST PUSH2 0x3316 JUMP JUMPDEST PUSH2 0xE62 JUMP JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xDFF JUMP JUMPDEST CALLVALUE PUSH2 0x2A8 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2A8 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x118C PUSH2 0x2A38 JUMP JUMPDEST AND PUSH2 0x280 MLOAD MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 PUSH2 0x280 MLOAD KECCAK256 DUP2 MLOAD PUSH2 0x11AA DUP2 PUSH2 0x2A88 JUMP JUMPDEST PUSH1 0xFF DUP3 SLOAD AND ISZERO ISZERO DUP2 MSTORE PUSH1 0x5 PUSH1 0x1 DUP4 ADD SLOAD SWAP3 PUSH1 0x20 DUP4 ADD SWAP4 DUP5 MSTORE PUSH2 0x11D5 PUSH1 0xFF PUSH1 0x2 DUP4 ADD SLOAD AND DUP7 DUP6 ADD PUSH2 0x2CF6 JUMP JUMPDEST PUSH2 0x11E1 PUSH1 0x3 DUP3 ADD PUSH2 0x2B09 JUMP JUMPDEST PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP5 ADD MSTORE ADD SLOAD PUSH1 0xA0 DUP3 ADD MSTORE MLOAD ISZERO ISZERO SWAP1 MLOAD DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST PUSH1 0xC0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2A8 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2A8 JUMPI PUSH2 0x1233 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2A08 JUMP JUMPDEST SWAP1 PUSH2 0x120 MSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2A8 JUMPI PUSH2 0x1257 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2A08 JUMP JUMPDEST PUSH2 0x240 MSTORE PUSH2 0x1C0 MSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2A8 JUMPI PUSH2 0x127E SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2A08 JUMP JUMPDEST PUSH2 0x100 MSTORE PUSH1 0xA0 MSTORE PUSH1 0x64 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2A8 JUMPI PUSH2 0x12A4 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2A08 JUMP JUMPDEST PUSH2 0x220 MSTORE PUSH2 0x2E0 MSTORE PUSH1 0x84 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2A8 JUMPI PUSH2 0x12CB SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2A08 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x2 SLOAD AND CALLER EQ DUP1 ISZERO PUSH2 0x1ACF JUMPI JUMPDEST PUSH2 0x12E9 SWAP1 PUSH2 0x2F7B JUMP JUMPDEST PUSH2 0x12F7 PUSH2 0x240 MLOAD DUP5 EQ PUSH2 0x2FB8 JUMP JUMPDEST PUSH2 0x1305 PUSH2 0x100 MLOAD DUP5 EQ PUSH2 0x2FB8 JUMP JUMPDEST PUSH2 0x1313 PUSH2 0x220 MLOAD DUP5 EQ PUSH2 0x2FB8 JUMP JUMPDEST PUSH2 0x280 MLOAD SLOAD PUSH1 0x40 MLOAD PUSH4 0xD47EED45 PUSH1 0xE0 SHL DUP2 MSTORE SWAP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP5 DUP1 PUSH2 0x1342 DUP6 DUP8 PUSH1 0x4 DUP5 ADD PUSH2 0x2E80 JUMP JUMPDEST SUB DUP2 DUP5 GAS STATICCALL SWAP4 DUP5 ISZERO PUSH2 0x9A5 JUMPI PUSH2 0x280 MLOAD SWAP5 PUSH2 0x1A9B JUMPI JUMPDEST POP PUSH2 0x1365 DUP5 CALLVALUE LT ISZERO PUSH2 0x2FF6 JUMP JUMPDEST DUP1 EXTCODESIZE ISZERO PUSH2 0x2A8 JUMPI PUSH2 0x1391 SWAP2 PUSH1 0x40 MLOAD SWAP5 DUP6 DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x1DF3CBC5 PUSH1 0xE3 SHL DUP4 MSTORE PUSH2 0x280 MLOAD SWAP8 PUSH1 0x4 DUP5 ADD PUSH2 0x2E80 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x9A5 JUMPI PUSH2 0x1A85 JUMPI JUMPDEST POP PUSH2 0x280 MLOAD SLOAD PUSH1 0x40 MLOAD PUSH4 0x96834AD3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0xA4 CALLDATALOAD PUSH1 0x4 DUP3 ADD MSTORE SWAP1 PUSH1 0x80 SWAP1 DUP3 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL DUP1 ISZERO PUSH2 0x9A5 JUMPI PUSH2 0x280 MLOAD PUSH2 0x160 MSTORE PUSH2 0x1A63 JUMPI JUMPDEST POP PUSH2 0x280 MLOAD JUMPDEST DUP2 DUP2 LT PUSH2 0x13F8 JUMPI PUSH2 0x280 MLOAD DUP1 RETURN JUMPDEST PUSH2 0x1409 PUSH2 0xE41 DUP3 DUP5 PUSH2 0x120 MLOAD PUSH2 0x305F JUMP JUMPDEST PUSH2 0x141A DUP3 PUSH2 0x240 MLOAD PUSH2 0x1C0 MLOAD PUSH2 0x305F JUMP JUMPDEST CALLDATALOAD PUSH2 0x142B DUP4 PUSH2 0x100 MLOAD PUSH1 0xA0 MLOAD PUSH2 0x3083 JUMP JUMPDEST SWAP2 SWAP1 SWAP3 PUSH2 0x143F DUP6 PUSH2 0x220 MLOAD PUSH2 0x2E0 MLOAD PUSH2 0x3083 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x280 MLOAD MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0xFF DUP1 PUSH1 0x40 PUSH2 0x280 MLOAD KECCAK256 SLOAD AND PUSH2 0x1A55 JUMPI JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x280 MLOAD MSTORE PUSH1 0x9 SWAP1 DUP2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH2 0x280 MLOAD KECCAK256 SLOAD AND ISZERO PUSH2 0x1A23 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1495 DUP2 PUSH2 0x2A88 JUMP JUMPDEST PUSH1 0x1 DUP2 MSTORE DUP5 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x14AE PUSH2 0x3203 JUMP JUMPDEST PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x280 DUP1 MLOAD PUSH1 0x80 DUP4 ADD MSTORE TIMESTAMP PUSH1 0xA0 DUP4 ADD MSTORE DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE MLOAD PUSH1 0x40 DUP2 KECCAK256 DUP3 MLOAD DUP2 SLOAD PUSH1 0xFF NOT AND SWAP1 ISZERO ISZERO PUSH1 0xFF AND OR DUP2 SSTORE SWAP2 SWAP1 PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x1 DUP5 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD SWAP1 PUSH1 0x3 DUP3 LT ISZERO PUSH2 0x10CF JUMPI POP PUSH2 0x1515 SWAP1 PUSH1 0x2 DUP5 ADD PUSH2 0x316F JUMP JUMPDEST PUSH1 0x60 DUP2 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x10B5 JUMPI PUSH2 0x1538 PUSH1 0x3 DUP6 ADD SLOAD PUSH2 0x2A4E JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x19DF JUMPI JUMPDEST POP PUSH2 0x280 MLOAD SWAP1 PUSH1 0x20 SWAP2 PUSH1 0x1F DUP5 GT PUSH1 0x1 EQ PUSH2 0x1969 JUMPI POP SWAP2 DUP1 PUSH1 0x5 SWAP5 SWAP3 PUSH1 0xA0 SWAP5 PUSH2 0x280 MLOAD SWAP3 PUSH2 0x195E JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x3 DUP6 ADD SSTORE JUMPDEST PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x4 DUP6 ADD SSTORE ADD MLOAD SWAP2 ADD SSTORE PUSH2 0x280 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE MLOAD PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 DUP2 PUSH2 0x15CC JUMPI JUMPDEST POP POP POP POP POP POP POP POP POP PUSH2 0x15C7 SWAP1 PUSH2 0x303A JUMP JUMPDEST PUSH2 0x13EA JUMP JUMPDEST DUP2 PUSH1 0x0 NOT DUP2 ADD GT PUSH2 0x1946 JUMPI POP PUSH2 0x15EC PUSH1 0x20 SWAP3 PUSH2 0x15F2 SWAP3 PUSH1 0x0 NOT ADD SWAP1 PUSH2 0x2CDA JUMP JUMPDEST POP PUSH2 0x31AB JUMP JUMPDEST ADD SWAP2 DUP3 MLOAD PUSH1 0x60 PUSH2 0x160 MLOAD ADD MLOAD PUSH2 0x280 MLOAD SWAP2 DUP2 DUP2 GT PUSH1 0x0 EQ PUSH2 0x193E JUMPI PUSH2 0x1617 SWAP3 POP PUSH2 0x319E JUMP JUMPDEST PUSH2 0x3E8 SWAP1 DUP1 DUP3 DUP2 MUL DIV DUP3 EQ DUP2 ISZERO OR ISZERO PUSH2 0x1924 JUMPI MUL SWAP3 JUMPDEST MLOAD PUSH2 0x160 MLOAD PUSH1 0x60 DUP2 ADD MLOAD SWAP1 MLOAD SWAP1 PUSH1 0x40 MLOAD SWAP3 PUSH2 0x1647 DUP5 PUSH2 0x2ACC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x7 SIGNEXTEND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0xA0 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x2 PUSH1 0xC0 DUP3 ADD MSTORE PUSH2 0x1682 PUSH2 0x3203 JUMP JUMPDEST PUSH1 0xE0 DUP3 ADD MSTORE PUSH2 0x280 MLOAD PUSH2 0x100 DUP3 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x280 MLOAD MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH2 0x280 MLOAD SWAP1 PUSH1 0x40 DUP3 KECCAK256 SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 MLOAD AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP5 SLOAD AND OR DUP4 SSTORE PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x1 DUP5 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x2 DUP5 ADD SSTORE PUSH1 0x3 DUP4 ADD PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB NOT DUP3 SLOAD AND SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND OR SWAP1 SSTORE PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x4 DUP5 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD PUSH1 0x5 DUP5 ADD SSTORE PUSH1 0xC0 DUP3 ADD MLOAD SWAP1 PUSH1 0x3 DUP3 LT ISZERO PUSH2 0x10CF JUMPI POP PUSH2 0x1730 SWAP1 PUSH1 0x6 DUP5 ADD PUSH2 0x316F JUMP JUMPDEST PUSH1 0xE0 DUP2 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x10B5 JUMPI PUSH2 0x1753 PUSH1 0x7 DUP6 ADD SLOAD PUSH2 0x2A4E JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x18E0 JUMPI JUMPDEST POP PUSH2 0x280 MLOAD SWAP1 PUSH1 0x20 SWAP2 PUSH1 0x1F DUP5 GT PUSH1 0x1 EQ PUSH2 0x1838 JUMPI POP PUSH2 0x100 PUSH2 0x15C7 SWAP14 SWAP13 SWAP12 SWAP10 SWAP8 SWAP5 DUP5 PUSH32 0x92971F04373CB63FAF3272641A4532C832AB490E5CBA6D98CB3805E2E0530E08 SWAP13 SWAP11 SWAP9 SWAP6 PUSH2 0x1805 SWAP9 SWAP6 PUSH1 0x8 SWAP6 PUSH2 0x280 MLOAD SWAP3 PUSH2 0x182D JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x7 DUP6 ADD SSTORE JUMPDEST ADD MLOAD SWAP2 ADD SSTORE PUSH2 0x17F7 PUSH2 0x160 MLOAD MLOAD PUSH1 0x7 SIGNEXTEND SWAP10 PUSH1 0x40 MLOAD SWAP9 DUP10 SWAP9 DUP10 MSTORE PUSH1 0xA0 PUSH1 0x20 DUP11 ADD MSTORE PUSH1 0xA0 DUP10 ADD SWAP2 PUSH2 0x2E5F JUMP JUMPDEST SWAP2 DUP7 DUP4 SUB PUSH1 0x40 DUP9 ADD MSTORE PUSH2 0x2E5F JUMP JUMPDEST PUSH1 0x60 DUP5 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP4 SUB SWAP1 LOG2 SWAP1 DUP4 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 PUSH2 0x15B5 JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x17B5 JUMP JUMPDEST PUSH1 0x7 DUP7 ADD SWAP1 MSTORE PUSH2 0x280 MLOAD PUSH1 0x20 DUP2 KECCAK256 SWAP3 SWAP2 SWAP1 JUMPDEST PUSH1 0x1F NOT DUP6 AND DUP2 LT PUSH2 0x18C8 JUMPI POP PUSH2 0x15C7 SWAP14 SWAP13 SWAP12 SWAP10 SWAP8 SWAP5 PUSH1 0x1 DUP6 PUSH2 0x1805 SWAP9 SWAP6 PUSH1 0x8 SWAP6 PUSH32 0x92971F04373CB63FAF3272641A4532C832AB490E5CBA6D98CB3805E2E0530E08 SWAP16 SWAP14 SWAP12 SWAP9 SWAP6 PUSH2 0x100 SWAP7 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x18AF JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x7 DUP6 ADD SSTORE PUSH2 0x17CD JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x189F JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x184A JUMP JUMPDEST PUSH2 0x1914 SWAP1 PUSH1 0x7 DUP7 ADD PUSH2 0x280 MLOAD MSTORE PUSH1 0x20 PUSH2 0x280 MLOAD KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP7 LT PUSH2 0x191A JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x3187 JUMP JUMPDEST DUP14 PUSH2 0x175C JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x1907 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH2 0x280 MLOAD MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH2 0x280 MLOAD REVERT JUMPDEST POP POP SWAP3 PUSH2 0x162D JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL SWAP1 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH2 0x280 MLOAD PUSH1 0x24 SWAP1 REVERT JUMPDEST ADD MLOAD SWAP1 POP DUP15 DUP1 PUSH2 0x1569 JUMP JUMPDEST PUSH1 0x3 DUP7 ADD SWAP1 MSTORE PUSH2 0x280 MLOAD PUSH1 0x20 DUP2 KECCAK256 SWAP3 SWAP2 SWAP1 JUMPDEST PUSH1 0x1F NOT DUP6 AND DUP2 LT PUSH2 0x19C7 JUMPI POP SWAP3 PUSH1 0x5 SWAP5 SWAP3 PUSH1 0x1 SWAP3 PUSH1 0xA0 SWAP6 DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x19AE JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x3 DUP6 ADD SSTORE PUSH2 0x1581 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP15 DUP1 DUP1 PUSH2 0x199E JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x197B JUMP JUMPDEST PUSH2 0x1A13 SWAP1 PUSH1 0x3 DUP7 ADD PUSH2 0x280 MLOAD MSTORE PUSH1 0x20 PUSH2 0x280 MLOAD KECCAK256 PUSH1 0x5 PUSH1 0x1F DUP7 ADD DUP2 SHR DUP3 ADD SWAP3 PUSH1 0x20 DUP8 LT PUSH2 0x1A19 JUMPI JUMPDEST PUSH1 0x1F ADD SWAP1 SHR ADD SWAP1 PUSH2 0x3187 JUMP JUMPDEST DUP13 PUSH2 0x1541 JUMP JUMPDEST SWAP2 SWAP3 POP DUP3 SWAP2 PUSH2 0x1A07 JUMP JUMPDEST PUSH2 0x1A2C DUP5 PUSH2 0x30C4 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x280 MLOAD MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH2 0x280 MLOAD KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE DUP9 PUSH2 0x1488 JUMP JUMPDEST PUSH2 0x1A5E DUP5 PUSH2 0x323B JUMP JUMPDEST PUSH2 0x1464 JUMP JUMPDEST PUSH2 0x1A7B SWAP1 PUSH1 0x80 RETURNDATASIZE PUSH1 0x80 GT PUSH2 0x99E JUMPI PUSH2 0x98F DUP2 DUP4 PUSH2 0x2AE8 JUMP JUMPDEST PUSH2 0x160 MSTORE DUP2 PUSH2 0x13E4 JUMP JUMPDEST PUSH2 0x1A8E SWAP1 PUSH2 0x2AB9 JUMP JUMPDEST PUSH2 0x280 MLOAD DUP1 ISZERO PUSH2 0x13A0 JUMPI DUP1 REVERT JUMPDEST SWAP1 SWAP4 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1AC7 JUMPI JUMPDEST DUP2 PUSH2 0x1AB7 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x2AE8 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xA29 JUMPI MLOAD SWAP3 DUP6 PUSH2 0x1358 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1AAA JUMP JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x12E0 JUMP JUMPDEST CALLVALUE PUSH2 0x2A8 JUMPI PUSH2 0x280 MLOAD DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3F4 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x7 SLOAD SWAP2 DUP3 DUP2 MSTORE PUSH1 0x20 DUP1 SWAP2 ADD SWAP3 PUSH1 0x7 PUSH2 0x280 MLOAD MSTORE PUSH32 0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C688 SWAP2 PUSH2 0x280 MLOAD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x1B4E JUMPI PUSH2 0x51F DUP6 PUSH2 0x513 DUP2 DUP10 SUB DUP3 PUSH2 0x2AE8 JUMP JUMPDEST DUP4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 MSTORE SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x1B37 JUMP JUMPDEST CALLVALUE PUSH2 0x2A8 JUMPI PUSH2 0x280 MLOAD DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3F4 JUMPI PUSH1 0x20 PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2A8 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2A8 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1BB0 PUSH2 0x2A38 JUMP JUMPDEST AND PUSH2 0x280 MLOAD MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH2 0x280 MLOAD KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2A8 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2A8 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1BF3 PUSH2 0x2A38 JUMP JUMPDEST AND PUSH2 0x280 MLOAD MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH2 0x280 MLOAD KECCAK256 PUSH1 0xFF DUP2 SLOAD AND PUSH1 0x1 DUP3 ADD SLOAD SWAP2 PUSH1 0xFF PUSH1 0x2 DUP3 ADD SLOAD AND PUSH2 0x1C5F PUSH2 0x1C27 PUSH1 0x3 DUP5 ADD PUSH2 0x2B09 JUMP JUMPDEST PUSH2 0x1C4E PUSH1 0x5 PUSH1 0x4 DUP7 ADD SLOAD SWAP6 ADD SLOAD SWAP4 PUSH1 0x40 MLOAD SWAP8 DUP9 SWAP8 ISZERO ISZERO DUP9 MSTORE PUSH1 0x20 DUP9 ADD MSTORE PUSH1 0x40 DUP8 ADD SWAP1 PUSH2 0x2BAF JUMP JUMPDEST PUSH1 0xC0 PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0xC0 DUP6 ADD SWAP1 PUSH2 0x2BD2 JUMP JUMPDEST SWAP2 PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST PUSH1 0xE0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2A8 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2A8 JUMPI PUSH2 0x1C99 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2A08 JUMP JUMPDEST PUSH2 0x2C0 MSTORE PUSH2 0x1A0 MSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2A8 JUMPI PUSH2 0x1CC0 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2A08 JUMP JUMPDEST PUSH2 0x200 MSTORE PUSH2 0x260 MSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2A8 JUMPI PUSH2 0x1CE7 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2A08 JUMP JUMPDEST PUSH1 0xC0 MSTORE PUSH1 0x80 MSTORE PUSH1 0x64 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2A8 JUMPI PUSH2 0x1D0C SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2A08 JUMP JUMPDEST PUSH2 0x2A0 MSTORE PUSH2 0x180 MSTORE PUSH1 0x84 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2A8 JUMPI PUSH2 0x1D33 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2A08 JUMP JUMPDEST PUSH2 0x140 MSTORE PUSH2 0x1E0 MSTORE PUSH1 0xA4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2A8 JUMPI PUSH2 0x1D5A SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2A08 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x2 SLOAD AND CALLER EQ DUP1 ISZERO PUSH2 0x253E JUMPI JUMPDEST PUSH2 0x1D78 SWAP1 PUSH2 0x2F7B JUMP JUMPDEST PUSH2 0x1D89 PUSH2 0x200 MLOAD PUSH2 0x2C0 MLOAD EQ PUSH2 0x2FB8 JUMP JUMPDEST PUSH2 0x1D99 PUSH1 0xC0 MLOAD PUSH2 0x2C0 MLOAD EQ PUSH2 0x2FB8 JUMP JUMPDEST PUSH2 0x1DAA PUSH2 0x2A0 MLOAD PUSH2 0x2C0 MLOAD EQ PUSH2 0x2FB8 JUMP JUMPDEST PUSH2 0x1DBB PUSH2 0x140 MLOAD PUSH2 0x2C0 MLOAD EQ PUSH2 0x2FB8 JUMP JUMPDEST PUSH2 0x280 MLOAD SLOAD PUSH1 0x40 MLOAD PUSH4 0xD47EED45 PUSH1 0xE0 SHL DUP2 MSTORE SWAP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP5 DUP1 PUSH2 0x1DEA DUP6 DUP8 PUSH1 0x4 DUP5 ADD PUSH2 0x2E80 JUMP JUMPDEST SUB DUP2 DUP5 GAS STATICCALL SWAP4 DUP5 ISZERO PUSH2 0x9A5 JUMPI PUSH2 0x280 MLOAD SWAP5 PUSH2 0x250A JUMPI JUMPDEST POP PUSH2 0x1E0D DUP5 CALLVALUE LT ISZERO PUSH2 0x2FF6 JUMP JUMPDEST DUP1 EXTCODESIZE ISZERO PUSH2 0x2A8 JUMPI PUSH2 0x1E39 SWAP2 PUSH1 0x40 MLOAD SWAP5 DUP6 DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x1DF3CBC5 PUSH1 0xE3 SHL DUP4 MSTORE PUSH2 0x280 MLOAD SWAP8 PUSH1 0x4 DUP5 ADD PUSH2 0x2E80 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x9A5 JUMPI PUSH2 0x24FB JUMPI JUMPDEST POP PUSH2 0x280 MLOAD SLOAD PUSH1 0x40 MLOAD PUSH4 0x96834AD3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0xC4 CALLDATALOAD PUSH1 0x4 DUP3 ADD MSTORE SWAP1 PUSH1 0x80 SWAP1 DUP3 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL DUP1 ISZERO PUSH2 0x9A5 JUMPI PUSH2 0x280 MLOAD PUSH1 0xE0 MSTORE PUSH2 0x24DA JUMPI JUMPDEST POP PUSH2 0x280 MLOAD JUMPDEST PUSH2 0x2C0 MLOAD DUP1 DUP3 LT ISZERO PUSH2 0x24D3 JUMPI PUSH2 0xE41 DUP3 PUSH2 0x1EAE SWAP3 PUSH2 0x1A0 MLOAD PUSH2 0x305F JUMP JUMPDEST SWAP1 PUSH2 0x1EC0 DUP2 PUSH2 0x200 MLOAD PUSH2 0x260 MLOAD PUSH2 0x305F JUMP JUMPDEST CALLDATALOAD SWAP2 PUSH2 0x1ED1 DUP3 PUSH1 0xC0 MLOAD PUSH1 0x80 MLOAD PUSH2 0x3083 JUMP JUMPDEST SWAP1 SWAP2 PUSH2 0x1EE4 DUP5 PUSH2 0x2A0 MLOAD PUSH2 0x180 MLOAD PUSH2 0x305F JUMP JUMPDEST CALLDATALOAD PUSH2 0x1EF6 DUP6 PUSH2 0x140 MLOAD PUSH2 0x1E0 MLOAD PUSH2 0x3083 JUMP JUMPDEST PUSH2 0x280 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE MLOAD PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP3 SWAP2 PUSH1 0xFF SWAP1 DUP2 AND PUSH2 0x24C5 JUMPI JUMPDEST PUSH2 0x280 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP1 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE MLOAD PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND ISZERO PUSH2 0x2491 JUMPI JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F4E DUP2 PUSH2 0x2A88 JUMP JUMPDEST PUSH1 0x1 DUP2 MSTORE DUP9 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x1F6A CALLDATASIZE DUP8 DUP10 PUSH2 0x3129 JUMP JUMPDEST PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP2 ADD DUP4 SWAP1 MSTORE TIMESTAMP PUSH1 0xA0 DUP3 ADD MSTORE PUSH2 0x280 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP1 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE MLOAD PUSH1 0x40 DUP2 KECCAK256 DUP3 MLOAD DUP2 SLOAD PUSH1 0xFF NOT AND SWAP1 ISZERO ISZERO PUSH1 0xFF AND OR DUP2 SSTORE SWAP2 SWAP1 PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x1 DUP5 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD SWAP1 PUSH1 0x3 DUP3 LT ISZERO PUSH2 0x10CF JUMPI POP PUSH2 0x1FD1 SWAP1 PUSH1 0x2 DUP5 ADD PUSH2 0x316F JUMP JUMPDEST PUSH1 0x60 DUP2 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x10B5 JUMPI PUSH2 0x1FF4 PUSH1 0x3 DUP6 ADD SLOAD PUSH2 0x2A4E JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x2458 JUMPI JUMPDEST POP PUSH2 0x280 MLOAD SWAP1 PUSH1 0x20 SWAP2 PUSH1 0x1F DUP5 GT PUSH1 0x1 EQ PUSH2 0x23E2 JUMPI POP SWAP2 DUP1 PUSH1 0x5 SWAP5 SWAP3 PUSH1 0xA0 SWAP5 PUSH2 0x280 MLOAD SWAP3 PUSH2 0x23D7 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x3 DUP6 ADD SSTORE JUMPDEST PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x4 DUP6 ADD SSTORE ADD MLOAD SWAP2 ADD SSTORE PUSH2 0x280 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE MLOAD PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 DUP2 PUSH2 0x2089 JUMPI JUMPDEST POP POP POP POP POP POP POP POP POP PUSH2 0x2084 SWAP2 POP PUSH2 0x303A JUMP JUMPDEST PUSH2 0x1E91 JUMP JUMPDEST DUP2 PUSH1 0x0 NOT DUP2 ADD GT PUSH2 0x1946 JUMPI POP PUSH2 0x15EC PUSH1 0x20 SWAP3 PUSH2 0x20A9 SWAP3 PUSH1 0x0 NOT ADD SWAP1 PUSH2 0x2CDA JUMP JUMPDEST ADD SWAP3 DUP4 MLOAD PUSH1 0x60 PUSH1 0xE0 MLOAD ADD MLOAD PUSH2 0x280 MLOAD SWAP2 DUP2 DUP2 GT PUSH1 0x0 EQ PUSH2 0x23CF JUMPI PUSH2 0x20CD SWAP3 POP PUSH2 0x319E JUMP JUMPDEST PUSH2 0x3E8 SWAP1 DUP1 DUP3 DUP2 MUL DIV DUP3 EQ DUP2 ISZERO OR ISZERO PUSH2 0x1924 JUMPI MUL SWAP4 JUMPDEST MLOAD PUSH1 0xE0 MLOAD PUSH1 0x60 DUP2 ADD MLOAD SWAP1 MLOAD SWAP1 PUSH1 0x40 MLOAD SWAP3 PUSH2 0x20FC DUP5 PUSH2 0x2ACC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x7 SIGNEXTEND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0xA0 DUP2 ADD DUP11 SWAP1 MSTORE PUSH1 0x1 PUSH1 0xC0 DUP3 ADD MSTORE PUSH2 0x213A CALLDATASIZE DUP9 DUP11 PUSH2 0x3129 JUMP JUMPDEST PUSH1 0xE0 DUP3 ADD MSTORE DUP4 PUSH2 0x100 DUP3 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH2 0x280 MLOAD MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH2 0x280 MLOAD SWAP1 PUSH1 0x40 DUP3 KECCAK256 SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 MLOAD AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP5 SLOAD AND OR DUP4 SSTORE PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x1 DUP5 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x2 DUP5 ADD SSTORE PUSH1 0x3 DUP4 ADD PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB NOT DUP3 SLOAD AND SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND OR SWAP1 SSTORE PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x4 DUP5 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD PUSH1 0x5 DUP5 ADD SSTORE PUSH1 0xC0 DUP3 ADD MLOAD SWAP1 PUSH1 0x3 DUP3 LT ISZERO PUSH2 0x10CF JUMPI POP PUSH2 0x21E5 SWAP1 PUSH1 0x6 DUP5 ADD PUSH2 0x316F JUMP JUMPDEST PUSH1 0xE0 DUP2 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x10B5 JUMPI PUSH2 0x2208 PUSH1 0x7 DUP6 ADD SLOAD PUSH2 0x2A4E JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x2396 JUMPI JUMPDEST POP PUSH2 0x280 MLOAD SWAP1 PUSH1 0x20 SWAP2 PUSH1 0x1F DUP5 GT PUSH1 0x1 EQ PUSH2 0x22F0 JUMPI POP PUSH2 0x100 PUSH2 0x2084 SWAP15 SWAP10 SWAP8 SWAP5 DUP5 PUSH2 0x22BD SWAP9 SWAP6 PUSH32 0xAEF9510F1FEA4F9E98D52EDC9ED5ECBB70FB93A756262405E9ABCAFF965D9B19 SWAP15 SWAP14 SWAP12 SWAP9 SWAP6 PUSH1 0x8 SWAP6 PUSH2 0x280 MLOAD SWAP3 PUSH2 0x22E5 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x7 DUP6 ADD SSTORE JUMPDEST ADD MLOAD SWAP2 ADD SSTORE PUSH2 0x22AA PUSH1 0xE0 MLOAD MLOAD PUSH1 0x7 SIGNEXTEND SWAP11 PUSH1 0x40 MLOAD SWAP10 DUP11 SWAP10 DUP11 MSTORE PUSH1 0xC0 PUSH1 0x20 DUP12 ADD MSTORE PUSH1 0xC0 DUP11 ADD SWAP2 PUSH2 0x2E5F JUMP JUMPDEST SWAP3 PUSH1 0x40 DUP9 ADD MSTORE DUP7 DUP4 SUB PUSH1 0x60 DUP9 ADD MSTORE PUSH2 0x2E5F JUMP JUMPDEST PUSH1 0x80 DUP5 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP4 SUB SWAP1 LOG2 DUP3 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 PUSH2 0x2071 JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x2269 JUMP JUMPDEST PUSH1 0x7 DUP7 ADD SWAP1 MSTORE PUSH2 0x280 MLOAD PUSH1 0x20 DUP2 KECCAK256 SWAP3 SWAP2 SWAP1 JUMPDEST PUSH1 0x1F NOT DUP6 AND DUP2 LT PUSH2 0x237E JUMPI POP PUSH2 0x2084 SWAP15 SWAP10 SWAP8 SWAP5 PUSH1 0x1 DUP6 PUSH32 0xAEF9510F1FEA4F9E98D52EDC9ED5ECBB70FB93A756262405E9ABCAFF965D9B19 SWAP15 SWAP14 SWAP12 SWAP9 SWAP6 PUSH1 0x8 SWAP6 PUSH2 0x100 SWAP6 PUSH2 0x22BD SWAP13 SWAP10 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x2365 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x7 DUP6 ADD SSTORE PUSH2 0x2281 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x2355 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x2302 JUMP JUMPDEST PUSH2 0x23C9 SWAP1 PUSH1 0x7 DUP7 ADD PUSH2 0x280 MLOAD MSTORE PUSH1 0x20 PUSH2 0x280 MLOAD KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP7 LT PUSH2 0x191A JUMPI PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x3187 JUMP JUMPDEST DUP14 PUSH2 0x2211 JUMP JUMPDEST POP POP SWAP4 PUSH2 0x20E3 JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP15 DUP1 PUSH2 0x2025 JUMP JUMPDEST PUSH1 0x3 DUP7 ADD SWAP1 MSTORE PUSH2 0x280 MLOAD PUSH1 0x20 DUP2 KECCAK256 SWAP3 SWAP2 SWAP1 JUMPDEST PUSH1 0x1F NOT DUP6 AND DUP2 LT PUSH2 0x2440 JUMPI POP SWAP3 PUSH1 0x5 SWAP5 SWAP3 PUSH1 0x1 SWAP3 PUSH1 0xA0 SWAP6 DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x2427 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x3 DUP6 ADD SSTORE PUSH2 0x203D JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP15 DUP1 DUP1 PUSH2 0x2417 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x23F4 JUMP JUMPDEST PUSH2 0x248B SWAP1 PUSH1 0x3 DUP7 ADD PUSH2 0x280 MLOAD MSTORE PUSH1 0x20 PUSH2 0x280 MLOAD KECCAK256 PUSH1 0x5 PUSH1 0x1F DUP7 ADD DUP2 SHR DUP3 ADD SWAP3 PUSH1 0x20 DUP8 LT PUSH2 0x1A19 JUMPI PUSH1 0x1F ADD SWAP1 SHR ADD SWAP1 PUSH2 0x3187 JUMP JUMPDEST DUP13 PUSH2 0x1FFD JUMP JUMPDEST PUSH2 0x249A DUP5 PUSH2 0x3106 JUMP JUMPDEST PUSH2 0x280 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE MLOAD PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x1F42 JUMP JUMPDEST PUSH2 0x24CE DUP6 PUSH2 0x3316 JUMP JUMPDEST PUSH2 0x1F1F JUMP JUMPDEST PUSH2 0x280 MLOAD DUP1 RETURN JUMPDEST PUSH2 0x24F2 SWAP1 PUSH1 0x80 RETURNDATASIZE PUSH1 0x80 GT PUSH2 0x99E JUMPI PUSH2 0x98F DUP2 DUP4 PUSH2 0x2AE8 JUMP JUMPDEST PUSH1 0xE0 MSTORE DUP1 PUSH2 0x1E8B JUMP JUMPDEST PUSH2 0x2504 SWAP1 PUSH2 0x2AB9 JUMP JUMPDEST DUP1 PUSH2 0x1E48 JUMP JUMPDEST SWAP1 SWAP4 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x2536 JUMPI JUMPDEST DUP2 PUSH2 0x2526 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x2AE8 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x2A8 JUMPI MLOAD SWAP3 DUP5 PUSH2 0x1E00 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x2519 JUMP JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1D6F JUMP JUMPDEST CALLVALUE PUSH2 0x2A8 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2A8 JUMPI PUSH1 0x4 CALLDATALOAD CALLER PUSH2 0x280 MLOAD MSTORE PUSH1 0x4 DUP3 MSTORE PUSH2 0x25D9 PUSH1 0x40 PUSH2 0x280 MLOAD KECCAK256 PUSH1 0x40 MLOAD PUSH2 0x2587 DUP2 PUSH2 0x2A88 JUMP JUMPDEST PUSH1 0xFF DUP3 SLOAD AND ISZERO ISZERO DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD DUP6 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x5 PUSH1 0xFF PUSH1 0x2 DUP6 ADD SLOAD AND SWAP4 PUSH2 0x25B4 PUSH1 0x40 DUP6 ADD SWAP6 DUP7 PUSH2 0x2CF6 JUMP JUMPDEST PUSH2 0x25C0 PUSH1 0x3 DUP3 ADD PUSH2 0x2B09 JUMP JUMPDEST PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP6 ADD MSTORE ADD SLOAD SWAP2 ADD MSTORE PUSH2 0x2D02 JUMP JUMPDEST PUSH1 0x3 DUP2 LT ISZERO PUSH2 0xA35 JUMPI PUSH1 0x2 PUSH2 0x25EF SWAP2 EQ ISZERO PUSH2 0x2D0F JUMP JUMPDEST PUSH2 0x25FA DUP2 ISZERO ISZERO PUSH2 0x2D67 JUMP JUMPDEST CALLER PUSH2 0x280 MLOAD MSTORE PUSH1 0x3 DUP3 MSTORE PUSH2 0x2646 PUSH1 0x40 PUSH2 0x280 MLOAD KECCAK256 PUSH1 0x40 MLOAD SWAP1 PUSH2 0x261B DUP3 PUSH2 0x2A88 JUMP JUMPDEST CALLER DUP3 MSTORE TIMESTAMP DUP6 DUP4 ADD MSTORE DUP4 PUSH1 0x40 DUP4 ADD MSTORE NUMBER PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x280 MLOAD PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x280 MLOAD PUSH1 0xA0 DUP4 ADD MSTORE PUSH2 0x2DA4 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 TIMESTAMP DUP4 MSTORE DUP3 ADD MSTORE NUMBER PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x280 MLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH32 0x3A41B4A45381E8007ECEED209F6413255128C9FAF4A51F718825CAB30CB89FFB PUSH1 0x80 CALLER SWAP3 LOG2 PUSH2 0x280 MLOAD DUP1 RETURN JUMPDEST CALLVALUE PUSH2 0xA29 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xA29 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xA29 JUMPI PUSH2 0x26BC SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2A08 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xA29 JUMPI PUSH2 0x26DB SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2A08 JUMP JUMPDEST PUSH1 0x44 SWAP3 SWAP2 SWAP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xA29 JUMPI PUSH2 0x26FD SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2A08 JUMP JUMPDEST POP POP PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 ISZERO PUSH2 0x29F4 JUMPI JUMPDEST PUSH2 0x271D SWAP1 PUSH2 0x2F7B JUMP JUMPDEST PUSH2 0x2728 DUP2 DUP4 EQ PUSH2 0x2FB8 JUMP JUMPDEST PUSH2 0x280 MLOAD JUMPDEST DUP3 DUP2 LT PUSH2 0x273B JUMPI PUSH2 0x280 MLOAD DUP1 RETURN JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x2751 PUSH2 0xE41 DUP4 DUP7 DUP10 PUSH2 0x305F JUMP JUMPDEST AND PUSH2 0x280 MLOAD MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0xFF DUP1 PUSH1 0x40 PUSH2 0x280 MLOAD KECCAK256 SLOAD AND PUSH2 0x29D9 JUMPI JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x2783 PUSH2 0xE41 DUP5 DUP8 DUP11 PUSH2 0x305F JUMP JUMPDEST AND PUSH2 0x280 MLOAD MSTORE PUSH1 0x9 SWAP1 DUP2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH2 0x280 MLOAD KECCAK256 SLOAD AND ISZERO PUSH2 0x298C JUMPI JUMPDEST POP PUSH2 0x27AB DUP2 DUP4 DUP7 PUSH2 0x305F JUMP JUMPDEST CALLDATALOAD PUSH1 0x40 MLOAD PUSH2 0x27B8 DUP2 PUSH2 0x2A88 JUMP JUMPDEST PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 DUP3 MSTORE PUSH1 0x40 DUP2 ADD PUSH1 0x2 DUP2 MSTORE PUSH2 0x27D3 PUSH2 0x3203 JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x280 MLOAD PUSH1 0x80 DUP4 ADD MSTORE TIMESTAMP PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x27FD PUSH2 0xE41 DUP7 DUP10 DUP13 PUSH2 0x305F JUMP JUMPDEST AND PUSH2 0x280 MLOAD MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH2 0x280 MLOAD SWAP1 PUSH1 0x40 DUP3 KECCAK256 SWAP4 PUSH2 0x282B DUP5 MLOAD ISZERO ISZERO DUP7 SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST MLOAD PUSH1 0x1 DUP6 ADD SSTORE MLOAD SWAP1 PUSH1 0x3 DUP3 LT ISZERO PUSH2 0x10CF JUMPI POP PUSH2 0x284A SWAP1 PUSH1 0x2 DUP5 ADD PUSH2 0x316F JUMP JUMPDEST PUSH1 0x60 DUP2 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x10B5 JUMPI PUSH2 0x286D PUSH1 0x3 DUP6 ADD SLOAD PUSH2 0x2A4E JUMP JUMPDEST SWAP1 PUSH1 0x1F SWAP2 DUP3 DUP2 GT PUSH2 0x2955 JUMPI JUMPDEST POP PUSH2 0x280 MLOAD PUSH1 0x20 SWAP3 DUP5 GT PUSH1 0x1 EQ PUSH2 0x28DD JUMPI POP SWAP3 DUP3 PUSH1 0x5 SWAP4 PUSH1 0xA0 SWAP4 PUSH2 0x28CD SWAP9 SWAP8 SWAP7 PUSH2 0x280 MLOAD SWAP3 PUSH2 0x28D2 JUMPI POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x3 DUP6 ADD SSTORE PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x4 DUP6 ADD SSTORE ADD MLOAD SWAP2 ADD SSTORE PUSH2 0x303A JUMP JUMPDEST PUSH2 0x272D JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP13 DUP1 PUSH2 0xFBD JUMP JUMPDEST PUSH1 0x3 DUP7 ADD SWAP1 MSTORE PUSH2 0x280 MLOAD PUSH1 0x20 DUP2 KECCAK256 SWAP3 SWAP2 SWAP1 PUSH1 0x1F NOT DUP6 AND SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x293D JUMPI POP SWAP4 PUSH1 0xA0 SWAP4 PUSH2 0x28CD SWAP9 SWAP8 SWAP7 SWAP4 PUSH1 0x1 SWAP4 DUP4 PUSH1 0x5 SWAP9 LT PUSH2 0x2924 JUMPI POP POP POP DUP2 SHL ADD PUSH1 0x3 DUP6 ADD SSTORE PUSH2 0xFD5 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP13 DUP1 DUP1 PUSH2 0x1033 JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0x28F5 JUMP JUMPDEST PUSH2 0x2986 SWAP1 PUSH1 0x3 DUP8 ADD PUSH2 0x280 MLOAD MSTORE PUSH1 0x20 PUSH2 0x280 MLOAD KECCAK256 PUSH1 0x5 DUP6 DUP1 DUP9 ADD DUP3 SHR DUP4 ADD SWAP4 PUSH1 0x20 DUP10 LT PUSH2 0x10AC JUMPI ADD SWAP1 SHR ADD SWAP1 PUSH2 0x3187 JUMP JUMPDEST DUP11 PUSH2 0x2879 JUMP JUMPDEST PUSH2 0x29A2 PUSH2 0x299D PUSH2 0xE41 DUP5 DUP8 DUP11 PUSH2 0x305F JUMP JUMPDEST PUSH2 0x30C4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x29B8 PUSH2 0xE41 DUP5 DUP8 DUP11 PUSH2 0x305F JUMP JUMPDEST AND PUSH2 0x280 MLOAD MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH2 0x280 MLOAD KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE DUP6 PUSH2 0x279F JUMP JUMPDEST PUSH2 0x29EF PUSH2 0x29EA PUSH2 0xE41 DUP5 DUP8 DUP11 PUSH2 0x305F JUMP JUMPDEST PUSH2 0x323B JUMP JUMPDEST PUSH2 0x276D JUMP JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2714 JUMP JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0xA29 JUMPI DUP3 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0xA29 JUMPI PUSH1 0x20 DUP1 DUP6 ADD SWAP5 DUP5 PUSH1 0x5 SHL ADD ADD GT PUSH2 0xA29 JUMPI JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xA29 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x2A7E JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x2A68 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x2A5D JUMP JUMPDEST PUSH1 0xC0 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x2AA3 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2AA3 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x120 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x2AA3 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x2AA3 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH1 0x0 DUP3 SLOAD SWAP3 PUSH2 0x2B1D DUP5 PUSH2 0x2A4E JUMP JUMPDEST SWAP1 DUP2 DUP5 MSTORE PUSH1 0x1 SWAP5 DUP6 DUP2 AND SWAP1 DUP2 PUSH1 0x0 EQ PUSH2 0x2B8C JUMPI POP PUSH1 0x1 EQ PUSH2 0x2B49 JUMPI JUMPDEST POP POP PUSH2 0x2B47 SWAP3 POP SUB DUP4 PUSH2 0x2AE8 JUMP JUMPDEST JUMP JUMPDEST SWAP1 SWAP4 SWAP2 POP PUSH1 0x0 MSTORE PUSH1 0x20 SWAP1 DUP2 PUSH1 0x0 KECCAK256 SWAP4 PUSH1 0x0 SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x2B74 JUMPI POP POP PUSH2 0x2B47 SWAP4 POP DUP3 ADD ADD CODESIZE DUP1 PUSH2 0x2B39 JUMP JUMPDEST DUP6 SLOAD DUP9 DUP5 ADD DUP6 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP8 SWAP5 POP SWAP2 DUP4 ADD SWAP2 PUSH2 0x2B5C JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2B47 SWAP5 POP PUSH1 0x20 SWAP3 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE DUP1 PUSH2 0x2B39 JUMP JUMPDEST SWAP1 PUSH1 0x3 DUP3 LT ISZERO PUSH2 0x2BBC JUMPI MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x2BFE JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD MLOAD DUP5 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x2BDD JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 PUSH1 0x40 DUP2 DUP4 ADD SWAP3 DUP3 DUP2 MSTORE DUP6 MLOAD DUP1 SWAP5 MSTORE ADD SWAP4 ADD SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x2C39 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x2C2B JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x2C8D JUMPI PUSH1 0x6 PUSH1 0x0 MSTORE PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x2C8D JUMPI PUSH1 0x7 PUSH1 0x0 MSTORE PUSH32 0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C688 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x2C8D JUMPI PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 MUL ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x3 DUP3 LT ISZERO PUSH2 0x2BBC JUMPI MSTORE JUMP JUMPDEST MLOAD PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x2BBC JUMPI SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x2D16 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42616420626F74206465746563746564202D2074726164696E6720626C6F636B PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x656421 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x2D6E JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x125B9D985B1A5908185B5BDD5B9D PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0x2AA3 JUMPI PUSH2 0x2DC1 SWAP2 PUSH1 0x1 DUP3 ADD DUP2 SSTORE PUSH2 0x2CDA JUMP JUMPDEST PUSH2 0x2E49 JUMPI PUSH1 0x4 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP4 MLOAD AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP3 SLOAD AND OR DUP2 SSTORE PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x1 DUP3 ADD SSTORE PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x2 DUP3 ADD SSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x3 DUP3 ADD SSTORE ADD SWAP1 PUSH1 0x80 DUP2 ADD MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH16 0xFFFFFFFFFFFFFFFF0000000000000000 PUSH1 0xA0 DUP6 SLOAD SWAP4 ADD MLOAD PUSH1 0x40 SHL AND SWAP3 AND SWAP1 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND OR OR SWAP1 SSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 DUP1 PUSH1 0x20 SWAP4 SWAP3 DUP2 DUP5 MSTORE DUP5 DUP5 ADD CALLDATACOPY PUSH1 0x0 DUP3 DUP3 ADD DUP5 ADD MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x20 DUP2 DUP2 DUP6 ADD DUP3 DUP7 MSTORE MSTORE PUSH1 0x40 DUP5 ADD SWAP4 PUSH1 0x40 DUP4 PUSH1 0x5 SHL DUP3 ADD ADD SWAP5 DUP5 PUSH1 0x0 SWAP3 JUMPDEST DUP6 DUP5 LT PUSH2 0x2EB0 JUMPI POP POP POP POP POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 PUSH1 0x3F NOT DUP3 DUP3 SUB ADD DUP5 MSTORE DUP8 CALLDATALOAD PUSH1 0x1E NOT DUP5 CALLDATASIZE SUB ADD DUP2 SLT ISZERO PUSH2 0xA29 JUMPI DUP4 ADD DUP7 DUP2 ADD SWAP2 SWAP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xA29 JUMPI DUP1 CALLDATASIZE SUB DUP4 SGT PUSH2 0xA29 JUMPI PUSH2 0x2EFE DUP9 SWAP3 DUP4 SWAP3 PUSH1 0x1 SWAP6 PUSH2 0x2E5F JUMP JUMPDEST SWAP10 ADD SWAP5 ADD SWAP5 ADD SWAP3 SWAP6 SWAP5 SWAP4 SWAP2 SWAP1 PUSH2 0x2E9F JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x80 SWAP2 SUB SLT PUSH2 0xA29 JUMPI PUSH1 0x40 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x80 DUP4 ADD DUP2 DUP2 GT DUP5 DUP3 LT OR PUSH2 0x2AA3 JUMPI PUSH1 0x40 MSTORE DUP2 MLOAD DUP1 PUSH1 0x7 SIGNEXTEND DUP2 SUB PUSH2 0xA29 JUMPI DUP4 MSTORE PUSH1 0x20 DUP3 ADD MLOAD SWAP1 DUP2 AND DUP2 SUB PUSH2 0xA29 JUMPI PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD SWAP1 DUP2 PUSH1 0x3 SIGNEXTEND DUP3 SUB PUSH2 0xA29 JUMPI PUSH1 0x60 SWAP2 PUSH1 0x40 DUP5 ADD MSTORE ADD MLOAD PUSH1 0x60 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x2F82 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x139BDD08185D5D1A1BDC9A5E9959 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x2FBF JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x98CADCCEE8D040DAD2E6DAC2E8C6D PUSH1 0x8B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x2FFD JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x496E73756666696369656E74205079746820666565 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x3049 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0x2C8D JUMPI PUSH1 0x5 SHL ADD SWAP1 JUMP JUMPDEST CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0xA29 JUMPI SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0x2C8D JUMPI PUSH1 0x5 SHL DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x1E NOT DUP2 CALLDATASIZE SUB ADD DUP3 SLT ISZERO PUSH2 0xA29 JUMPI ADD SWAP1 DUP2 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0xA29 JUMPI PUSH1 0x20 ADD DUP3 CALLDATASIZE SUB DUP2 SGT PUSH2 0xA29 JUMPI SWAP2 SWAP1 JUMP JUMPDEST PUSH1 0x7 SLOAD SWAP1 PUSH1 0x1 PUSH1 0x40 SHL DUP3 LT ISZERO PUSH2 0x2AA3 JUMPI PUSH2 0x30E7 DUP3 PUSH1 0x1 PUSH2 0x2B47 SWAP5 ADD PUSH1 0x7 SSTORE PUSH2 0x2CA3 JUMP JUMPDEST SWAP1 SWAP2 SWAP1 DUP3 SLOAD SWAP1 PUSH1 0x3 SHL SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP2 AND DUP4 SHL SWAP3 SHL NOT AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x6 SLOAD SWAP1 PUSH1 0x1 PUSH1 0x40 SHL DUP3 LT ISZERO PUSH2 0x2AA3 JUMPI PUSH2 0x30E7 DUP3 PUSH1 0x1 PUSH2 0x2B47 SWAP5 ADD PUSH1 0x6 SSTORE PUSH2 0x2C56 JUMP JUMPDEST SWAP3 SWAP2 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x2AA3 JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0x3152 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP5 PUSH2 0x2AE8 JUMP JUMPDEST DUP3 SWAP5 DUP2 DUP5 MSTORE DUP2 DUP4 ADD GT PUSH2 0xA29 JUMPI DUP3 DUP2 PUSH1 0x20 SWAP4 DUP5 PUSH1 0x0 SWAP7 ADD CALLDATACOPY ADD ADD MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x2BBC JUMPI PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 AND OR SWAP1 SSTORE JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0x3192 JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x3187 JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x3049 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD PUSH2 0x31B8 DUP2 PUSH2 0x2A88 JUMP JUMPDEST PUSH1 0xA0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x4 DUP4 SWAP6 PUSH1 0x1 DUP1 DUP6 SHL SUB DUP2 SLOAD AND DUP6 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP7 ADD MSTORE ADD SLOAD DUP1 PUSH1 0x7 SIGNEXTEND PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0x40 SHR AND SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x40 DUP3 ADD DUP3 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x2AA3 JUMPI PUSH1 0x40 MSTORE PUSH1 0xC DUP3 MSTORE PUSH12 0x4D616E6970756C6174697665 PUSH1 0xA0 SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x6 DUP1 SLOAD SWAP1 DUP2 DUP4 LT ISZERO PUSH2 0x3310 JUMPI PUSH2 0x3254 DUP4 PUSH2 0x2C56 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP5 SWAP1 SWAP3 PUSH1 0x3 SWAP3 SWAP1 DUP4 SHL SHR DUP4 AND DUP6 EQ PUSH2 0x3286 JUMPI POP POP POP POP POP PUSH2 0x3281 SWAP1 PUSH2 0x303A JUMP JUMPDEST PUSH2 0x323E JUMP JUMPDEST SWAP4 SWAP6 POP SWAP2 SWAP4 PUSH1 0x0 NOT SWAP4 SWAP1 SWAP2 DUP5 DUP3 ADD SWAP2 DUP3 GT PUSH2 0x3049 JUMPI PUSH2 0x32B7 SWAP4 PUSH2 0x32AB PUSH2 0x30E7 SWAP4 PUSH2 0x2C56 JUMP JUMPDEST SWAP1 SLOAD SWAP2 SHL SHR AND SWAP2 PUSH2 0x2C56 JUMP JUMPDEST DUP2 SLOAD DUP1 ISZERO PUSH2 0x32FA JUMPI ADD SWAP1 PUSH2 0x32E2 PUSH2 0x32CD DUP4 PUSH2 0x2C56 JUMP JUMPDEST DUP2 SLOAD SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 PUSH1 0x3 SHL SHL NOT AND SWAP1 SSTORE JUMP JUMPDEST SSTORE PUSH1 0x0 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x7 DUP1 SLOAD SWAP1 DUP2 DUP4 LT ISZERO PUSH2 0x3310 JUMPI PUSH2 0x332F DUP4 PUSH2 0x2CA3 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP5 SWAP1 SWAP3 PUSH1 0x3 SWAP3 SWAP1 DUP4 SHL SHR DUP4 AND DUP6 EQ PUSH2 0x3361 JUMPI POP POP POP POP POP PUSH2 0x335C SWAP1 PUSH2 0x303A JUMP JUMPDEST PUSH2 0x3319 JUMP JUMPDEST SWAP4 SWAP6 POP SWAP2 SWAP4 PUSH1 0x0 NOT SWAP4 SWAP1 SWAP2 DUP5 DUP3 ADD SWAP2 DUP3 GT PUSH2 0x3049 JUMPI PUSH2 0x3392 SWAP4 PUSH2 0x3386 PUSH2 0x30E7 SWAP4 PUSH2 0x2CA3 JUMP JUMPDEST SWAP1 SLOAD SWAP2 SHL SHR AND SWAP2 PUSH2 0x2CA3 JUMP JUMPDEST DUP2 SLOAD DUP1 ISZERO PUSH2 0x32FA JUMPI ADD SWAP1 PUSH2 0x33A8 PUSH2 0x32CD DUP4 PUSH2 0x2CA3 JUMP JUMPDEST SSTORE PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x33CA DUP2 SLOAD PUSH2 0x2A4E JUMP JUMPDEST SWAP1 DUP2 PUSH2 0x33D4 JUMPI POP POP JUMP JUMPDEST DUP2 PUSH1 0x1F PUSH1 0x0 SWAP4 GT PUSH1 0x1 EQ PUSH2 0x33E6 JUMPI POP SSTORE JUMP JUMPDEST SWAP1 DUP1 DUP4 SWAP2 DUP3 MSTORE PUSH2 0x3405 PUSH1 0x1F PUSH1 0x20 DUP5 KECCAK256 SWAP5 ADD PUSH1 0x5 SHR DUP5 ADD PUSH1 0x1 DUP6 ADD PUSH2 0x3187 JUMP JUMPDEST SSTORE SSTORE JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE2 GAS 0xBF SSTORE 0x5F PUSH12 0xD6C4D0E7B9CB09CF7921FADB CREATE LOG3 0xC2 0xD9 TIMESTAMP DUP4 0x2D 0xCA MSIZE 0x4B NOT RETURNDATASIZE PUSH20 0x8C64736F6C634300081300330000000000000000 ","sourceMap":"172:16477:3:-:0;;;;;;;;;;;;;-1:-1:-1;;172:16477:3;;;;-1:-1:-1;;;;;172:16477:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;-1:-1:-1;172:16477:3;;-1:-1:-1;;;;;;172:16477:3;;;-1:-1:-1;;;;;172:16477:3;;;;;;;;;;;;2667:10;172:16477;;;2688:26;172:16477;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;172:16477:3;;;;;;-1:-1:-1;172:16477:3;;;;;-1:-1:-1;172:16477:3;;;;-1:-1:-1;;;;;172:16477:3;;;;;;:::o"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":10808,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_array_address_dyn_calldata":{"entryPoint":10760,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_available_length_string":{"entryPoint":12585,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_struct_Price_fromMemory":{"entryPoint":12047,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_address_dyn":{"entryPoint":11282,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_bytes_calldata_dyn_calldata":{"entryPoint":11904,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_bytes_calldata":{"entryPoint":11871,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_enum_BotCategory":{"entryPoint":11183,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_string":{"entryPoint":11218,"id":null,"parameterSlots":2,"returnSlots":1},"array_push_from_address_to_array_address_dyn_storage_ptr":{"entryPoint":12484,"id":null,"parameterSlots":1,"returnSlots":0},"array_push_from_address_to_array_address_dyn_storage_ptr_43967":{"entryPoint":12550,"id":null,"parameterSlots":1,"returnSlots":0},"array_push_from_struct_TradeRecord_to_array_struct_TradeRecord_storage_dyn_ptr":{"entryPoint":11684,"id":null,"parameterSlots":2,"returnSlots":0},"calldata_array_index_access_address_dyn_calldata":{"entryPoint":12383,"id":null,"parameterSlots":3,"returnSlots":1},"calldata_array_index_access_string_calldata_dyn_calldata":{"entryPoint":12419,"id":null,"parameterSlots":3,"returnSlots":2},"checked_sub_uint256":{"entryPoint":12702,"id":null,"parameterSlots":2,"returnSlots":1},"clear_storage_range_bytes1":{"entryPoint":12679,"id":null,"parameterSlots":2,"returnSlots":0},"copy_array_from_storage_to_memory_string":{"entryPoint":11017,"id":null,"parameterSlots":1,"returnSlots":1},"copy_literal_to_memory_aec8c60e86e50c531be35a4ff48e525e05e9c6889e65b14725fee158081aec23":{"entryPoint":12803,"id":null,"parameterSlots":0,"returnSlots":1},"extract_byte_array_length":{"entryPoint":10830,"id":null,"parameterSlots":1,"returnSlots":1},"finalize_allocation":{"entryPoint":10984,"id":null,"parameterSlots":2,"returnSlots":0},"finalize_allocation_43963":{"entryPoint":10888,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_43966":{"entryPoint":10937,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_43969":{"entryPoint":10956,"id":null,"parameterSlots":1,"returnSlots":0},"fun_removeFromBadBots":{"entryPoint":13078,"id":1387,"parameterSlots":1,"returnSlots":0},"fun_removeFromGoodBots":{"entryPoint":12859,"id":1337,"parameterSlots":1,"returnSlots":0},"increment_uint256":{"entryPoint":12346,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_calldatat_address":{"entryPoint":12399,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_memoryt_enum_BotCategory":{"entryPoint":11522,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_reference_type_struct_TradeRecord":{"entryPoint":12715,"id":null,"parameterSlots":1,"returnSlots":1},"require_helper_stringliteral_289d":{"entryPoint":11535,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_2fd1":{"entryPoint":11623,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_632c":{"entryPoint":12278,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_bb46":{"entryPoint":12216,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_fac3":{"entryPoint":12155,"id":null,"parameterSlots":1,"returnSlots":0},"storage_array_index_access_address_dyn":{"entryPoint":11350,"id":null,"parameterSlots":1,"returnSlots":2},"storage_array_index_access_address_dyn_43992":{"entryPoint":11427,"id":null,"parameterSlots":1,"returnSlots":2},"storage_array_index_access_struct_TradeRecord_dyn":{"entryPoint":11482,"id":null,"parameterSlots":2,"returnSlots":2},"storage_set_to_zero_string":{"entryPoint":13248,"id":null,"parameterSlots":1,"returnSlots":0},"update_storage_value_address_to_address":{"entryPoint":null,"id":null,"parameterSlots":3,"returnSlots":0},"update_storage_value_address_to_address_44093":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offsett_bool_to_bool":{"entryPoint":null,"id":null,"parameterSlots":2,"returnSlots":0},"update_storage_value_offsett_enum_BotCategory_to_enum_BotCategory":{"entryPoint":12655,"id":null,"parameterSlots":2,"returnSlots":0},"write_to_memory_enum_BotCategory":{"entryPoint":11510,"id":null,"parameterSlots":2,"returnSlots":0}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"610360604052600436101561001357600080fd5b60006102805260003560e01c8062d2798b1461268c57806302d2838b146125525780630d7555cc14611c6e57806320bae1cb14611bd257806326463b6314611b8f57806331eba1af14611b6e57806336786d0214611ae3578063382ec63f146112085780633bbac5791461116b578063472279a214610d4d5780634d4ca30914610bd357806381d1ae6214610baa57806388bbafb214610b89578063927c774214610a4f5780639cda890814610747578063aa2ca71b146106cc578063b1b1ffab1461062e578063c32d2a021461056f578063c35fc52414610543578063d739080d146104a8578063d90c410f14610465578063eaca6a7814610423578063f851a440146103f7578063f98d06f0146103ca578063fb4aaf0f146102af5763fed20c781461014057600080fd5b346102a8576020806003193601126102a8577f7cbd5e661dde6a21cf48d6cf4909acf3b8c27773f4cd5050ab0cf692833173c261017b612a38565b9160018060a01b0380600254163314801561029b575b61019a90612f7b565b83169283610280515260048252610280519060ff6040816002828620015416936008865220541661028d575b8461028051526009835260ff60406102805120541661027e575b50836102805152600482528360056102805160408120908082558060018301556002820155610211600382016133c0565b61028051918183600481940155015552600582526102805160408120908082558060018301558060028301558060038301558060048301558060058301556006820155610260600782016133c0565b6008610280519101556102766040518092612baf565ba26102805180f35b61028790613316565b386101e0565b6102968161323b565b6101c6565b5060015481163314610191565b6102805180fd5b346102a8576020806003193601126102a8576102c9612a38565b6040516102d581612a88565b610280518152610280518382015261028051604082015260608082015261028051608082015260a06102805191015260018060a01b0316610280515260048152604061028051206040519061032982612a88565b60ff8154161515825260018101548383019081526103b960ff600284015416610356604086019182612cf6565b6103a761036560038601612b09565b916060870192835260056004870154966080890197885201549460a08801958652604051988998818a5251151590890152516040880152516060870190612baf565b5160c0608086015260e0850190612bd2565b915160a08401525160c08301520390f35b346102a85761028051806003193601126103f457546040516001600160a01b039091168152602090f35b80fd5b346102a85761028051806003193601126103f4576001546040516001600160a01b039091168152602090f35b346102a85760203660031901126102a8576004356007548110156102a85761044c602091612ca3565b905460405160039290921b1c6001600160a01b03168152f35b346102a85760203660031901126102a8576001600160a01b03610486612a38565b1661028051526009602052602060ff6040610280512054166040519015158152f35b346102a85761028051806003193601126103f4576040518060065491828152602080910192600661028051527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f9161028051905b8282106105235761051f8561051381890382612ae8565b60405191829182612c12565b0390f35b83546001600160a01b0316865294850194600193840193909101906104fc565b346102a85761028051806003193601126103f4576002546040516001600160a01b039091168152602090f35b346102a85760203660031901126102a8576001600160a01b0380610591612a38565b166102805152600560205260406102805120908154166001820154916106236002820154916106126003820154600483015460058401549060ff6006860154169260086105e060078801612b09565b960154976040519a8b9a8b5260208b015260408a015260070b6060890152608088015260a087015260c0860190612baf565b6101208060e0860152840190612bd2565b906101008301520390f35b346102a85760403660031901126102a857610647612a38565b61028080516001600160a01b0392831690526003602052516040812080546024359392908410156103f4575061068760c0936001600160401b0392612cda565b509182541691600181015490600281015460046003830154920154926040519586526020860152604085015260608401528060070b608084015260401c1660a0820152f35b346102a85760203660031901126102a8576106e5612a38565b6001546001600160a01b0391908216330361071557166001600160601b0360a01b60025416176002556102805180f35b60405162461bcd60e51b815260206004820152600a60248201526927b7363c9030b236b4b760b11b6044820152606490fd5b60603660031901126102a8576004356001600160401b036024358181116102a857610776903690600401612a08565b90923361028051526020926004845260406102805120926107f160405161079c81612a88565b60ff8654161515815260018601548782015260ff600287015416906107c5604082019283612cf6565b6107d160038801612b09565b606082015260a060056004890154986080998a8501520154910152612d02565b6003811015610a35576002610807911415612d0f565b610812831515612d67565b610280515460405163d47eed4560e01b81526001600160a01b0397909290918816878480610844858760048401612e80565b0381845afa9384156109a5576102805194610a01575b508334106109c957803b156102a85761088e91604051948580948193631df3cbc560e31b8352610280519760048401612e80565b03925af180156109a5576109b3575b5082604494956102805154166040519586809263052571af60e51b825282356004830152603c60248301525afa9081156109a5577f3a41b4a45381e8007eceed209f6413255128c9faf4a51f718825cab30cb89ffb946102805192610972575b5061094e9033610280515260038752604061028051208351916060850151166040519261092984612a88565b338452428a85015286604085015243606085015260070b8784015260a0830152612da4565b5160070b906040519442865285015243604085015260608401523392a26102805180f35b61094e91925061099790853d871161099e575b61098f8183612ae8565b810190612f0f565b91906108fd565b503d610985565b6040513d61028051823e3d90fd5b6109bc90612ab9565b61028051801561089d5780fd5b60405162461bcd60e51b815260048101899052601060248201526f496e73756666696369656e742066656560801b6044820152606490fd5b9093508781813d8311610a2e575b610a198183612ae8565b81010312610a295751928961085a565b600080fd5b503d610a0f565b634e487b7160e01b61028051526021600452602461028051fd5b346102a8576020806003193601126102a8576001600160a01b0380610a72612a38565b16610280515260038252610280519160408320908154906001600160401b0394858311610b7157509290604051906005610ab08683831b0184612ae8565b818352858301809561028051526102805187812090915b848310610b4d57505050505060405193808501918186525180925260408501939261028051905b838210610afb5786860387f35b84518051821687528084015187850152604080820151908801526060808201519088015260808082015160070b9088015260a09081015189169087015260c09095019493820193600190910190610aee565b8389600192610b5f859c999a9c6131ab565b81520192019201919097959497610ac7565b634e487b7160e01b9052604160045261028051602490fd5b346102a85761028051806003193601126103f4576020600654604051908152f35b346102a85760203660031901126102a8576004356006548110156102a85761044c602091612c56565b346102a8576020806003193601126102a857610d2f90610bf1612a38565b604051610bfd81612acc565b61028051815261028051838201526102805160408201526102805160608201526102805160808201526102805160a08201526102805160c0820152606060e0820152610280516101008092015260018060a01b03809216610280515260058352610d436040610280512092604051958680958193610c7a83612acc565b8082541683526001820154898401908152600283015460408501908152600384015491606086019260070b83528b600486015494608088019586528b600860058901549860a08b01998a52610cdb60c060ff6006840154169c019b8c612cf6565b60e0610ce960078301612b09565b9d019c8d5201549d019c8d526040519e8f9e8f525116908d01525160408c01525160608b01525160070b60808a01525160a08901525160c08801525160e0870190612baf565b516101208093860152610140850190612bd2565b9151908301520390f35b346102a85760803660031901126102a8576004356001600160401b0381116102a857610d7d903690600401612a08565b90610340526024356001600160401b0381116102a857610da1903690600401612a08565b61030052610320526044356001600160401b0381116102a857610dc8903690600401612a08565b90916064356001600160401b0381116102a857610de9903690600401612a08565b919060018060a01b036002541633148015611157575b610e0890612f7b565b610e16610300518314612fb8565b610280515b828110610e29576102805180f35b60018060a01b03610e46610e4183866103405161305f565b61306f565b166102805152600960205260ff80604061028051205416611139575b60018060a01b03610e7a610e4184876103405161305f565b16610280515260089081602052604061028051205416156110e7575b50610ea881610300516103205161305f565b35610eb4828789613083565b9190610eec610ec485898861305f565b359160405193610ed385612a88565b6001855260208501526040840194600186523691613129565b606083015260808201524260a082015260018060a01b03610f14610e4185886103405161305f565b1661028051526004602052610280516040812092610f4183511515859060ff801983541691151516179055565b60208301516001850155519060038210156110cf5750610f64906002840161316f565b60608101518051906001600160401b0382116110b557610f876003850154612a4e565b90601f91828111611074575b50610280516020928411600114610ff95750928260059360a093610fe99897966102805192610fee575b50508160011b916000199060031b1c19161760038501555b60808101516004850155015191015561303a565b610e1b565b015190508d80610fbd565b60038601905261028051602081209291905b601f198516811061105c57508360a093610fe998979693600193600597601f19811610611043575b505050811b016003850155610fd5565b015160001960f88460031b161c191690558d8080611033565b9192602060018192868501518155019401920161100b565b6110a69060038701610280515260206102805120600585808801821c830193602089106110ac575b01901c0190613187565b8b610f93565b9350829361109c565b634e487b7160e01b61028051526041600452602461028051fd5b634e487b7160e01b9052602160045261028051602490fd5b6111006110fb610e4184876103405161305f565b613106565b60018060a01b03611118610e4184876103405161305f565b16610280515260205260406102805120600160ff1982541617905586610e96565b61115261114d610e4184876103405161305f565b613316565b610e62565b506001546001600160a01b03163314610dff565b346102a85760203660031901126102a8576001600160a01b0361118c612a38565b1661028051526004602052604080610280512081516111aa81612a88565b60ff825416151581526005600183015492602083019384526111d560ff600283015416868501612cf6565b6111e160038201612b09565b606084015260048101546080840152015460a0820152511515905182519182526020820152f35b60c03660031901126102a8576004356001600160401b0381116102a857611233903690600401612a08565b90610120526024356001600160401b0381116102a857611257903690600401612a08565b610240526101c0526044356001600160401b0381116102a85761127e903690600401612a08565b6101005260a0526064356001600160401b0381116102a8576112a4903690600401612a08565b610220526102e0526084356001600160401b0381116102a8576112cb903690600401612a08565b9060018060a01b036002541633148015611acf575b6112e990612f7b565b6112f7610240518414612fb8565b611305610100518414612fb8565b611313610220518414612fb8565b610280515460405163d47eed4560e01b815292906001600160a01b031660208480611342858760048401612e80565b0381845afa9384156109a5576102805194611a9b575b5061136584341015612ff6565b803b156102a85761139191604051948580948193631df3cbc560e31b8352610280519760048401612e80565b03925af180156109a557611a85575b5061028051546040516396834ad360e01b815260a435600482015290608090829060249082906001600160a01b03165afa80156109a5576102805161016052611a63575b50610280515b8181106113f8576102805180f35b611409610e4182846101205161305f565b61141a82610240516101c05161305f565b3561142b836101005160a051613083565b91909261143f85610220516102e051613083565b9060018060a01b0383166102805152600860205260ff80604061028051205416611a55575b60018060a01b03841661028051526009908160205260406102805120541615611a23575b5060405161149581612a88565b60018152846020820152600260408201526114ae613203565b6060820152610280805160808301524260a083015280516001600160a01b0386169052600460205251604081208251815460ff191690151560ff1617815591906020820151600184015560408201519060038210156110cf5750611515906002840161316f565b60608101518051906001600160401b0382116110b5576115386003850154612a4e565b601f81116119df575b506102805190602091601f8411600114611969575091806005949260a094610280519261195e575b50508160011b916000199060031b1c19161760038501555b60808101516004850155015191015561028080516001600160a01b03851690526003602052516040812080549091816115cc575b5050505050505050506115c79061303a565b6113ea565b8160001981011161194657506115ec6020926115f2926000190190612cda565b506131ab565b019182516060610160510151610280519181811160001461193e57611617925061319e565b6103e89080828102048214811517156119245702925b516101605160608101519051906040519261164784612acc565b6001600160a01b03881684526020840152604083015260070b60608201526080810184905260a08101869052600260c0820152611682613203565b60e08201526102805161010082015260018060a01b038516610280515260056020526102805190604082209160018060a01b038251166001600160601b0360a01b84541617835560208201516001840155604082015160028401556003830160608301516001600160401b0319825416906001600160401b03161790556080820151600484015560a0820151600584015560c08201519060038210156110cf5750611730906006840161316f565b60e08101518051906001600160401b0382116110b5576117536007850154612a4e565b601f81116118e0575b506102805190602091601f841160011461183857506101006115c79d9c9b999794847f92971f04373cb63faf3272641a4532c832ab490e5cba6d98cb3805e2e0530e089c9a98956118059895600895610280519261182d575b50508160011b916000199060031b1c19161760078501555b01519101556117f7610160515160070b99604051988998895260a060208a015260a0890191612e5f565b918683036040880152612e5f565b606084019690965260808301526001600160a01b0316930390a29083808080808080806115b5565b0151905038806117b5565b60078601905261028051602081209291905b601f19851681106118c857506115c79d9c9b99979460018561180598956008957f92971f04373cb63faf3272641a4532c832ab490e5cba6d98cb3805e2e0530e089f9d9b989561010096601f198116106118af575b505050811b0160078501556117cd565b015160001960f88460031b161c1916905538808061189f565b9192602060018192868501518155019401920161184a565b6119149060078601610280515260206102805120601f850160051c8101916020861061191a575b601f0160051c0190613187565b8d61175c565b9091508190611907565b634e487b7160e01b61028051526011600452602461028051fd5b50509261162d565b634e487b7160e01b9052601160045261028051602490fd5b015190508e80611569565b60038601905261028051602081209291905b601f19851681106119c75750926005949260019260a09583601f198116106119ae575b505050811b016003850155611581565b015160001960f88460031b161c191690558e808061199e565b9192602060018192868501518155019401920161197b565b611a1390600386016102805152602061028051206005601f8601811c82019260208710611a19575b601f01901c0190613187565b8c611541565b9192508291611a07565b611a2c846130c4565b60018060a01b038416610280515260205260406102805120600160ff1982541617905588611488565b611a5e8461323b565b611464565b611a7b9060803d60801161099e5761098f8183612ae8565b61016052816113e4565b611a8e90612ab9565b6102805180156113a05780fd5b9093506020813d602011611ac7575b81611ab760209383612ae8565b81010312610a2957519285611358565b3d9150611aaa565b506001546001600160a01b031633146112e0565b346102a85761028051806003193601126103f4576040518060075491828152602080910192600761028051527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c6889161028051905b828210611b4e5761051f8561051381890382612ae8565b83546001600160a01b031686529485019460019384019390910190611b37565b346102a85761028051806003193601126103f4576020600754604051908152f35b346102a85760203660031901126102a8576001600160a01b03611bb0612a38565b1661028051526008602052602060ff6040610280512054166040519015158152f35b346102a85760203660031901126102a8576001600160a01b03611bf3612a38565b16610280515260046020526040610280512060ff81541660018201549160ff600282015416611c5f611c2760038401612b09565b611c4e60056004860154950154936040519788971515885260208801526040870190612baf565b60c0606086015260c0850190612bd2565b91608084015260a08301520390f35b60e03660031901126102a8576004356001600160401b0381116102a857611c99903690600401612a08565b6102c0526101a0526024356001600160401b0381116102a857611cc0903690600401612a08565b61020052610260526044356001600160401b0381116102a857611ce7903690600401612a08565b60c0526080526064356001600160401b0381116102a857611d0c903690600401612a08565b6102a052610180526084356001600160401b0381116102a857611d33903690600401612a08565b610140526101e05260a4356001600160401b0381116102a857611d5a903690600401612a08565b9060018060a01b03600254163314801561253e575b611d7890612f7b565b611d89610200516102c05114612fb8565b611d9960c0516102c05114612fb8565b611daa6102a0516102c05114612fb8565b611dbb610140516102c05114612fb8565b610280515460405163d47eed4560e01b815292906001600160a01b031660208480611dea858760048401612e80565b0381845afa9384156109a557610280519461250a575b50611e0d84341015612ff6565b803b156102a857611e3991604051948580948193631df3cbc560e31b8352610280519760048401612e80565b03925af180156109a5576124fb575b5061028051546040516396834ad360e01b815260c435600482015290608090829060249082906001600160a01b03165afa80156109a5576102805160e0526124da575b50610280515b6102c051808210156124d357610e4182611eae926101a05161305f565b90611ec081610200516102605161305f565b3591611ed18260c051608051613083565b9091611ee4846102a0516101805161305f565b35611ef685610140516101e051613083565b61028080516001600160a01b0386169052600960205251604090205491929160ff9081166124c5575b61028080516001600160a01b038716905260086020525160409020541615612491575b604051611f4e81612a88565b6001815288602082015260016040820152611f6a368789613129565b6060820152608081018390524260a082015261028080516001600160a01b0387169052600460205251604081208251815460ff191690151560ff1617815591906020820151600184015560408201519060038210156110cf5750611fd1906002840161316f565b60608101518051906001600160401b0382116110b557611ff46003850154612a4e565b601f8111612458575b506102805190602091601f84116001146123e2575091806005949260a09461028051926123d7575b50508160011b916000199060031b1c19161760038501555b60808101516004850155015191015561028080516001600160a01b0386169052600360205251604081208054909181612089575b505050505050505050612084915061303a565b611e91565b8160001981011161194657506115ec6020926120a9926000190190612cda565b01928351606060e051015161028051918181116000146123cf576120cd925061319e565b6103e89080828102048214811517156119245702935b5160e0516060810151905190604051926120fc84612acc565b6001600160a01b03891684526020840152604083015260070b60608201526080810185905260a081018a9052600160c082015261213a36888a613129565b60e08201528361010082015260018060a01b038616610280515260056020526102805190604082209160018060a01b038251166001600160601b0360a01b84541617835560208201516001840155604082015160028401556003830160608301516001600160401b0319825416906001600160401b03161790556080820151600484015560a0820151600584015560c08201519060038210156110cf57506121e5906006840161316f565b60e08101518051906001600160401b0382116110b5576122086007850154612a4e565b601f8111612396575b506102805190602091601f84116001146122f057506101006120849e999794846122bd98957faef9510f1fea4f9e98d52edc9ed5ecbb70fb93a756262405e9abcaff965d9b199e9d9b989560089561028051926122e5575b50508160011b916000199060031b1c19161760078501555b01519101556122aa60e0515160070b9a604051998a998a5260c060208b015260c08a0191612e5f565b9260408801528683036060880152612e5f565b608084019690965260a08301526001600160a01b0316930390a2828080808080808080612071565b015190503880612269565b60078601905261028051602081209291905b601f198516811061237e57506120849e9997946001857faef9510f1fea4f9e98d52edc9ed5ecbb70fb93a756262405e9abcaff965d9b199e9d9b9895600895610100956122bd9c99601f19811610612365575b505050811b016007850155612281565b015160001960f88460031b161c19169055388080612355565b91926020600181928685015181550194019201612302565b6123c99060078601610280515260206102805120601f850160051c8101916020861061191a57601f0160051c0190613187565b8d612211565b5050936120e3565b015190508e80612025565b60038601905261028051602081209291905b601f19851681106124405750926005949260019260a09583601f19811610612427575b505050811b01600385015561203d565b015160001960f88460031b161c191690558e8080612417565b919260206001819286850151815501940192016123f4565b61248b90600386016102805152602061028051206005601f8601811c82019260208710611a1957601f01901c0190613187565b8c611ffd565b61249a84613106565b61028080516001600160a01b038616905260086020525160409020805460ff19166001179055611f42565b6124ce85613316565b611f1f565b6102805180f35b6124f29060803d60801161099e5761098f8183612ae8565b60e05280611e8b565b61250490612ab9565b80611e48565b9093506020813d602011612536575b8161252660209383612ae8565b810103126102a857519284611e00565b3d9150612519565b506001546001600160a01b03163314611d6f565b346102a8576020806003193601126102a857600435336102805152600482526125d96040610280512060405161258781612a88565b60ff8254161515815260018201548582015260a0600560ff600285015416936125b4604085019586612cf6565b6125c060038201612b09565b6060850152600481015460808501520154910152612d02565b6003811015610a355760026125ef911415612d0f565b6125fa811515612d67565b33610280515260038252612646604061028051206040519061261b82612a88565b33825242858301528360408301524360608301526102805160808301526102805160a0830152612da4565b604051914283528201524360408201526102805160608201527f3a41b4a45381e8007eceed209f6413255128c9faf4a51f718825cab30cb89ffb60803392a26102805180f35b34610a29576060366003190112610a29576004356001600160401b038111610a29576126bc903690600401612a08565b6024356001600160401b038111610a29576126db903690600401612a08565b6044929192356001600160401b038111610a29576126fd903690600401612a08565b50506002546001600160a01b0316331480156129f4575b61271d90612f7b565b612728818314612fb8565b610280515b82811061273b576102805180f35b6001600160a01b03612751610e4183868961305f565b166102805152600860205260ff806040610280512054166129d9575b6001600160a01b03612783610e4184878a61305f565b166102805152600990816020526040610280512054161561298c575b506127ab81838661305f565b356040516127b881612a88565b600181526020810191825260408101600281526127d3613203565b60608301526102805160808301524260a08301526001600160a01b036127fd610e4186898c61305f565b16610280515260046020526102805190604082209361282b84511515869060ff801983541691151516179055565b516001850155519060038210156110cf575061284a906002840161316f565b60608101518051906001600160401b0382116110b55761286d6003850154612a4e565b90601f91828111612955575b506102805160209284116001146128dd5750928260059360a0936128cd98979661028051926128d25750508160011b916000199060031b1c191617600385015560808101516004850155015191015561303a565b61272d565b015190508c80610fbd565b6003860190526102805160208120929190601f198516905b81811061293d57509360a0936128cd98979693600193836005981061292457505050811b016003850155610fd5565b015160001960f88460031b161c191690558c8080611033565b929360206001819287860151815501950193016128f5565b6129869060038701610280515260206102805120600585808801821c830193602089106110ac5701901c0190613187565b8a612879565b6129a261299d610e4184878a61305f565b6130c4565b6001600160a01b036129b8610e4184878a61305f565b16610280515260205260406102805120600160ff198254161790558561279f565b6129ef6129ea610e4184878a61305f565b61323b565b61276d565b506001546001600160a01b03163314612714565b9181601f84011215610a29578235916001600160401b038311610a29576020808501948460051b010111610a2957565b600435906001600160a01b0382168203610a2957565b90600182811c92168015612a7e575b6020831014612a6857565b634e487b7160e01b600052602260045260246000fd5b91607f1691612a5d565b60c081019081106001600160401b03821117612aa357604052565b634e487b7160e01b600052604160045260246000fd5b6001600160401b038111612aa357604052565b61012081019081106001600160401b03821117612aa357604052565b90601f801991011681019081106001600160401b03821117612aa357604052565b9060405191826000825492612b1d84612a4e565b908184526001948581169081600014612b8c5750600114612b49575b5050612b4792500383612ae8565b565b9093915060005260209081600020936000915b818310612b74575050612b4793508201013880612b39565b85548884018501529485019487945091830191612b5c565b915050612b4794506020925060ff191682840152151560051b8201013880612b39565b906003821015612bbc5752565b634e487b7160e01b600052602160045260246000fd5b919082519283825260005b848110612bfe575050826000602080949584010152601f8019910116010190565b602081830181015184830182015201612bdd565b6020908160408183019282815285518094520193019160005b828110612c39575050505090565b83516001600160a01b031685529381019392810192600101612c2b565b600654811015612c8d5760066000527ff652222313e28459528d920b65115c16c04f3efc82aaedc97be59f3f377c0d3f0190600090565b634e487b7160e01b600052603260045260246000fd5b600754811015612c8d5760076000527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c6880190600090565b8054821015612c8d576000526005602060002091020190600090565b6003821015612bbc5752565b516003811015612bbc5790565b15612d1657565b60405162461bcd60e51b815260206004820152602360248201527f42616420626f74206465746563746564202d2074726164696e6720626c6f636b60448201526265642160e81b6064820152608490fd5b15612d6e57565b60405162461bcd60e51b815260206004820152600e60248201526d125b9d985b1a5908185b5bdd5b9d60921b6044820152606490fd5b8054600160401b811015612aa357612dc191600182018155612cda565b612e495760049060018060a01b038351166001600160601b0360a01b82541617815560208301516001820155604083015160028201556060830151600382015501906080810151906001600160401b036fffffffffffffffff000000000000000060a0855493015160401b169216906fffffffffffffffffffffffffffffffff191617179055565b634e487b7160e01b600052600060045260246000fd5b908060209392818452848401376000828201840152601f01601f1916010190565b9160208181850182865252604084019360408360051b82010194846000925b858410612eb0575050505050505090565b90919293949596603f198282030184528735601e1984360301811215610a295783018681019190356001600160401b038111610a29578036038313610a2957612efe88928392600195612e5f565b990194019401929594939190612e9f565b90816080910312610a2957604051906001600160401b036080830181811184821017612aa35760405281518060070b8103610a2957835260208201519081168103610a295760208301526040810151908160030b8203610a295760609160408401520151606082015290565b15612f8257565b60405162461bcd60e51b815260206004820152600e60248201526d139bdd08185d5d1a1bdc9a5e995960921b6044820152606490fd5b15612fbf57565b60405162461bcd60e51b815260206004820152600f60248201526e098cadccee8d040dad2e6dac2e8c6d608b1b6044820152606490fd5b15612ffd57565b60405162461bcd60e51b8152602060048201526015602482015274496e73756666696369656e7420507974682066656560581b6044820152606490fd5b60001981146130495760010190565b634e487b7160e01b600052601160045260246000fd5b9190811015612c8d5760051b0190565b356001600160a01b0381168103610a295790565b9190811015612c8d5760051b81013590601e1981360301821215610a295701908135916001600160401b038311610a29576020018236038113610a29579190565b60075490600160401b821015612aa3576130e7826001612b479401600755612ca3565b90919082549060031b9160018060a01b03809116831b921b1916179055565b60065490600160401b821015612aa3576130e7826001612b479401600655612c56565b9291926001600160401b038211612aa35760405191613152601f8201601f191660200184612ae8565b829481845281830111610a29578281602093846000960137010152565b906003811015612bbc5760ff80198354169116179055565b818110613192575050565b60008155600101613187565b9190820391821161304957565b906040516131b881612a88565b60a06001600160401b0360048395600180851b03815416855260018101546020860152600281015460408601526003810154606086015201548060070b608085015260401c16910152565b60405190604082018281106001600160401b03821117612aa357604052600c82526b4d616e6970756c617469766560a01b6020830152565b60005b6006805490818310156133105761325483612c56565b90546001600160a01b0386811694909260039290831b1c831685146132865750505050506132819061303a565b61323e565b9395509193600019939091848201918211613049576132b7936132ab6130e793612c56565b9054911b1c1691612c56565b815480156132fa5701906132e26132cd83612c56565b81549060018060a01b039060031b1b19169055565b556000526008602052604060002060ff198154169055565b634e487b7160e01b600052603160045260246000fd5b50505050565b60005b6007805490818310156133105761332f83612ca3565b90546001600160a01b0386811694909260039290831b1c8316851461336157505050505061335c9061303a565b613319565b939550919360001993909184820191821161304957613392936133866130e793612ca3565b9054911b1c1691612ca3565b815480156132fa5701906133a86132cd83612ca3565b556000526009602052604060002060ff198154169055565b6133ca8154612a4e565b90816133d4575050565b81601f600093116001146133e6575055565b908083918252613405601f60208420940160051c840160018501613187565b555556fea2646970667358221220f55abf555f6bd6c4d0e7b9cb09cf7921fadbf0a3c2d942832dca594b193d738c64736f6c63430008130033","opcodes":"PUSH2 0x360 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x13 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x280 MSTORE PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH3 0xD2798B EQ PUSH2 0x268C JUMPI DUP1 PUSH4 0x2D2838B EQ PUSH2 0x2552 JUMPI DUP1 PUSH4 0xD7555CC EQ PUSH2 0x1C6E JUMPI DUP1 PUSH4 0x20BAE1CB EQ PUSH2 0x1BD2 JUMPI DUP1 PUSH4 0x26463B63 EQ PUSH2 0x1B8F JUMPI DUP1 PUSH4 0x31EBA1AF EQ PUSH2 0x1B6E JUMPI DUP1 PUSH4 0x36786D02 EQ PUSH2 0x1AE3 JUMPI DUP1 PUSH4 0x382EC63F EQ PUSH2 0x1208 JUMPI DUP1 PUSH4 0x3BBAC579 EQ PUSH2 0x116B JUMPI DUP1 PUSH4 0x472279A2 EQ PUSH2 0xD4D JUMPI DUP1 PUSH4 0x4D4CA309 EQ PUSH2 0xBD3 JUMPI DUP1 PUSH4 0x81D1AE62 EQ PUSH2 0xBAA JUMPI DUP1 PUSH4 0x88BBAFB2 EQ PUSH2 0xB89 JUMPI DUP1 PUSH4 0x927C7742 EQ PUSH2 0xA4F JUMPI DUP1 PUSH4 0x9CDA8908 EQ PUSH2 0x747 JUMPI DUP1 PUSH4 0xAA2CA71B EQ PUSH2 0x6CC JUMPI DUP1 PUSH4 0xB1B1FFAB EQ PUSH2 0x62E JUMPI DUP1 PUSH4 0xC32D2A02 EQ PUSH2 0x56F JUMPI DUP1 PUSH4 0xC35FC524 EQ PUSH2 0x543 JUMPI DUP1 PUSH4 0xD739080D EQ PUSH2 0x4A8 JUMPI DUP1 PUSH4 0xD90C410F EQ PUSH2 0x465 JUMPI DUP1 PUSH4 0xEACA6A78 EQ PUSH2 0x423 JUMPI DUP1 PUSH4 0xF851A440 EQ PUSH2 0x3F7 JUMPI DUP1 PUSH4 0xF98D06F0 EQ PUSH2 0x3CA JUMPI DUP1 PUSH4 0xFB4AAF0F EQ PUSH2 0x2AF JUMPI PUSH4 0xFED20C78 EQ PUSH2 0x140 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x2A8 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2A8 JUMPI PUSH32 0x7CBD5E661DDE6A21CF48D6CF4909ACF3B8C27773F4CD5050AB0CF692833173C2 PUSH2 0x17B PUSH2 0x2A38 JUMP JUMPDEST SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 PUSH1 0x2 SLOAD AND CALLER EQ DUP1 ISZERO PUSH2 0x29B JUMPI JUMPDEST PUSH2 0x19A SWAP1 PUSH2 0x2F7B JUMP JUMPDEST DUP4 AND SWAP3 DUP4 PUSH2 0x280 MLOAD MSTORE PUSH1 0x4 DUP3 MSTORE PUSH2 0x280 MLOAD SWAP1 PUSH1 0xFF PUSH1 0x40 DUP2 PUSH1 0x2 DUP3 DUP7 KECCAK256 ADD SLOAD AND SWAP4 PUSH1 0x8 DUP7 MSTORE KECCAK256 SLOAD AND PUSH2 0x28D JUMPI JUMPDEST DUP5 PUSH2 0x280 MLOAD MSTORE PUSH1 0x9 DUP4 MSTORE PUSH1 0xFF PUSH1 0x40 PUSH2 0x280 MLOAD KECCAK256 SLOAD AND PUSH2 0x27E JUMPI JUMPDEST POP DUP4 PUSH2 0x280 MLOAD MSTORE PUSH1 0x4 DUP3 MSTORE DUP4 PUSH1 0x5 PUSH2 0x280 MLOAD PUSH1 0x40 DUP2 KECCAK256 SWAP1 DUP1 DUP3 SSTORE DUP1 PUSH1 0x1 DUP4 ADD SSTORE PUSH1 0x2 DUP3 ADD SSTORE PUSH2 0x211 PUSH1 0x3 DUP3 ADD PUSH2 0x33C0 JUMP JUMPDEST PUSH2 0x280 MLOAD SWAP2 DUP2 DUP4 PUSH1 0x4 DUP2 SWAP5 ADD SSTORE ADD SSTORE MSTORE PUSH1 0x5 DUP3 MSTORE PUSH2 0x280 MLOAD PUSH1 0x40 DUP2 KECCAK256 SWAP1 DUP1 DUP3 SSTORE DUP1 PUSH1 0x1 DUP4 ADD SSTORE DUP1 PUSH1 0x2 DUP4 ADD SSTORE DUP1 PUSH1 0x3 DUP4 ADD SSTORE DUP1 PUSH1 0x4 DUP4 ADD SSTORE DUP1 PUSH1 0x5 DUP4 ADD SSTORE PUSH1 0x6 DUP3 ADD SSTORE PUSH2 0x260 PUSH1 0x7 DUP3 ADD PUSH2 0x33C0 JUMP JUMPDEST PUSH1 0x8 PUSH2 0x280 MLOAD SWAP2 ADD SSTORE PUSH2 0x276 PUSH1 0x40 MLOAD DUP1 SWAP3 PUSH2 0x2BAF JUMP JUMPDEST LOG2 PUSH2 0x280 MLOAD DUP1 RETURN JUMPDEST PUSH2 0x287 SWAP1 PUSH2 0x3316 JUMP JUMPDEST CODESIZE PUSH2 0x1E0 JUMP JUMPDEST PUSH2 0x296 DUP2 PUSH2 0x323B JUMP JUMPDEST PUSH2 0x1C6 JUMP JUMPDEST POP PUSH1 0x1 SLOAD DUP2 AND CALLER EQ PUSH2 0x191 JUMP JUMPDEST PUSH2 0x280 MLOAD DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x2A8 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2A8 JUMPI PUSH2 0x2C9 PUSH2 0x2A38 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D5 DUP2 PUSH2 0x2A88 JUMP JUMPDEST PUSH2 0x280 MLOAD DUP2 MSTORE PUSH2 0x280 MLOAD DUP4 DUP3 ADD MSTORE PUSH2 0x280 MLOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 DUP1 DUP3 ADD MSTORE PUSH2 0x280 MLOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0xA0 PUSH2 0x280 MLOAD SWAP2 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB AND PUSH2 0x280 MLOAD MSTORE PUSH1 0x4 DUP2 MSTORE PUSH1 0x40 PUSH2 0x280 MLOAD KECCAK256 PUSH1 0x40 MLOAD SWAP1 PUSH2 0x329 DUP3 PUSH2 0x2A88 JUMP JUMPDEST PUSH1 0xFF DUP2 SLOAD AND ISZERO ISZERO DUP3 MSTORE PUSH1 0x1 DUP2 ADD SLOAD DUP4 DUP4 ADD SWAP1 DUP2 MSTORE PUSH2 0x3B9 PUSH1 0xFF PUSH1 0x2 DUP5 ADD SLOAD AND PUSH2 0x356 PUSH1 0x40 DUP7 ADD SWAP2 DUP3 PUSH2 0x2CF6 JUMP JUMPDEST PUSH2 0x3A7 PUSH2 0x365 PUSH1 0x3 DUP7 ADD PUSH2 0x2B09 JUMP JUMPDEST SWAP2 PUSH1 0x60 DUP8 ADD SWAP3 DUP4 MSTORE PUSH1 0x5 PUSH1 0x4 DUP8 ADD SLOAD SWAP7 PUSH1 0x80 DUP10 ADD SWAP8 DUP9 MSTORE ADD SLOAD SWAP5 PUSH1 0xA0 DUP9 ADD SWAP6 DUP7 MSTORE PUSH1 0x40 MLOAD SWAP9 DUP10 SWAP9 DUP2 DUP11 MSTORE MLOAD ISZERO ISZERO SWAP1 DUP10 ADD MSTORE MLOAD PUSH1 0x40 DUP9 ADD MSTORE MLOAD PUSH1 0x60 DUP8 ADD SWAP1 PUSH2 0x2BAF JUMP JUMPDEST MLOAD PUSH1 0xC0 PUSH1 0x80 DUP7 ADD MSTORE PUSH1 0xE0 DUP6 ADD SWAP1 PUSH2 0x2BD2 JUMP JUMPDEST SWAP2 MLOAD PUSH1 0xA0 DUP5 ADD MSTORE MLOAD PUSH1 0xC0 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x2A8 JUMPI PUSH2 0x280 MLOAD DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3F4 JUMPI SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x2A8 JUMPI PUSH2 0x280 MLOAD DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3F4 JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x2A8 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2A8 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x2A8 JUMPI PUSH2 0x44C PUSH1 0x20 SWAP2 PUSH2 0x2CA3 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x3 SWAP3 SWAP1 SWAP3 SHL SHR PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2A8 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2A8 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x486 PUSH2 0x2A38 JUMP JUMPDEST AND PUSH2 0x280 MLOAD MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH2 0x280 MLOAD KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2A8 JUMPI PUSH2 0x280 MLOAD DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3F4 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x6 SLOAD SWAP2 DUP3 DUP2 MSTORE PUSH1 0x20 DUP1 SWAP2 ADD SWAP3 PUSH1 0x6 PUSH2 0x280 MLOAD MSTORE PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F SWAP2 PUSH2 0x280 MLOAD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x523 JUMPI PUSH2 0x51F DUP6 PUSH2 0x513 DUP2 DUP10 SUB DUP3 PUSH2 0x2AE8 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 DUP3 SWAP2 DUP3 PUSH2 0x2C12 JUMP JUMPDEST SUB SWAP1 RETURN JUMPDEST DUP4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 MSTORE SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x4FC JUMP JUMPDEST CALLVALUE PUSH2 0x2A8 JUMPI PUSH2 0x280 MLOAD DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3F4 JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x2A8 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2A8 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 PUSH2 0x591 PUSH2 0x2A38 JUMP JUMPDEST AND PUSH2 0x280 MLOAD MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH2 0x280 MLOAD KECCAK256 SWAP1 DUP2 SLOAD AND PUSH1 0x1 DUP3 ADD SLOAD SWAP2 PUSH2 0x623 PUSH1 0x2 DUP3 ADD SLOAD SWAP2 PUSH2 0x612 PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x4 DUP4 ADD SLOAD PUSH1 0x5 DUP5 ADD SLOAD SWAP1 PUSH1 0xFF PUSH1 0x6 DUP7 ADD SLOAD AND SWAP3 PUSH1 0x8 PUSH2 0x5E0 PUSH1 0x7 DUP9 ADD PUSH2 0x2B09 JUMP JUMPDEST SWAP7 ADD SLOAD SWAP8 PUSH1 0x40 MLOAD SWAP11 DUP12 SWAP11 DUP12 MSTORE PUSH1 0x20 DUP12 ADD MSTORE PUSH1 0x40 DUP11 ADD MSTORE PUSH1 0x7 SIGNEXTEND PUSH1 0x60 DUP10 ADD MSTORE PUSH1 0x80 DUP9 ADD MSTORE PUSH1 0xA0 DUP8 ADD MSTORE PUSH1 0xC0 DUP7 ADD SWAP1 PUSH2 0x2BAF JUMP JUMPDEST PUSH2 0x120 DUP1 PUSH1 0xE0 DUP7 ADD MSTORE DUP5 ADD SWAP1 PUSH2 0x2BD2 JUMP JUMPDEST SWAP1 PUSH2 0x100 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x2A8 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2A8 JUMPI PUSH2 0x647 PUSH2 0x2A38 JUMP JUMPDEST PUSH2 0x280 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND SWAP1 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE MLOAD PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x24 CALLDATALOAD SWAP4 SWAP3 SWAP1 DUP5 LT ISZERO PUSH2 0x3F4 JUMPI POP PUSH2 0x687 PUSH1 0xC0 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP3 PUSH2 0x2CDA JUMP JUMPDEST POP SWAP2 DUP3 SLOAD AND SWAP2 PUSH1 0x1 DUP2 ADD SLOAD SWAP1 PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x4 PUSH1 0x3 DUP4 ADD SLOAD SWAP3 ADD SLOAD SWAP3 PUSH1 0x40 MLOAD SWAP6 DUP7 MSTORE PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP5 ADD MSTORE DUP1 PUSH1 0x7 SIGNEXTEND PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x40 SHR AND PUSH1 0xA0 DUP3 ADD MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2A8 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2A8 JUMPI PUSH2 0x6E5 PUSH2 0x2A38 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 DUP3 AND CALLER SUB PUSH2 0x715 JUMPI AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0x2 SLOAD AND OR PUSH1 0x2 SSTORE PUSH2 0x280 MLOAD DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x27B7363C9030B236B4B7 PUSH1 0xB1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2A8 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x24 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x2A8 JUMPI PUSH2 0x776 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2A08 JUMP JUMPDEST SWAP1 SWAP3 CALLER PUSH2 0x280 MLOAD MSTORE PUSH1 0x20 SWAP3 PUSH1 0x4 DUP5 MSTORE PUSH1 0x40 PUSH2 0x280 MLOAD KECCAK256 SWAP3 PUSH2 0x7F1 PUSH1 0x40 MLOAD PUSH2 0x79C DUP2 PUSH2 0x2A88 JUMP JUMPDEST PUSH1 0xFF DUP7 SLOAD AND ISZERO ISZERO DUP2 MSTORE PUSH1 0x1 DUP7 ADD SLOAD DUP8 DUP3 ADD MSTORE PUSH1 0xFF PUSH1 0x2 DUP8 ADD SLOAD AND SWAP1 PUSH2 0x7C5 PUSH1 0x40 DUP3 ADD SWAP3 DUP4 PUSH2 0x2CF6 JUMP JUMPDEST PUSH2 0x7D1 PUSH1 0x3 DUP9 ADD PUSH2 0x2B09 JUMP JUMPDEST PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x5 PUSH1 0x4 DUP10 ADD SLOAD SWAP9 PUSH1 0x80 SWAP10 DUP11 DUP6 ADD MSTORE ADD SLOAD SWAP2 ADD MSTORE PUSH2 0x2D02 JUMP JUMPDEST PUSH1 0x3 DUP2 LT ISZERO PUSH2 0xA35 JUMPI PUSH1 0x2 PUSH2 0x807 SWAP2 EQ ISZERO PUSH2 0x2D0F JUMP JUMPDEST PUSH2 0x812 DUP4 ISZERO ISZERO PUSH2 0x2D67 JUMP JUMPDEST PUSH2 0x280 MLOAD SLOAD PUSH1 0x40 MLOAD PUSH4 0xD47EED45 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP8 SWAP1 SWAP3 SWAP1 SWAP2 DUP9 AND DUP8 DUP5 DUP1 PUSH2 0x844 DUP6 DUP8 PUSH1 0x4 DUP5 ADD PUSH2 0x2E80 JUMP JUMPDEST SUB DUP2 DUP5 GAS STATICCALL SWAP4 DUP5 ISZERO PUSH2 0x9A5 JUMPI PUSH2 0x280 MLOAD SWAP5 PUSH2 0xA01 JUMPI JUMPDEST POP DUP4 CALLVALUE LT PUSH2 0x9C9 JUMPI DUP1 EXTCODESIZE ISZERO PUSH2 0x2A8 JUMPI PUSH2 0x88E SWAP2 PUSH1 0x40 MLOAD SWAP5 DUP6 DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x1DF3CBC5 PUSH1 0xE3 SHL DUP4 MSTORE PUSH2 0x280 MLOAD SWAP8 PUSH1 0x4 DUP5 ADD PUSH2 0x2E80 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x9A5 JUMPI PUSH2 0x9B3 JUMPI JUMPDEST POP DUP3 PUSH1 0x44 SWAP5 SWAP6 PUSH2 0x280 MLOAD SLOAD AND PUSH1 0x40 MLOAD SWAP6 DUP7 DUP1 SWAP3 PUSH4 0x52571AF PUSH1 0xE5 SHL DUP3 MSTORE DUP3 CALLDATALOAD PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x3C PUSH1 0x24 DUP4 ADD MSTORE GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0x9A5 JUMPI PUSH32 0x3A41B4A45381E8007ECEED209F6413255128C9FAF4A51F718825CAB30CB89FFB SWAP5 PUSH2 0x280 MLOAD SWAP3 PUSH2 0x972 JUMPI JUMPDEST POP PUSH2 0x94E SWAP1 CALLER PUSH2 0x280 MLOAD MSTORE PUSH1 0x3 DUP8 MSTORE PUSH1 0x40 PUSH2 0x280 MLOAD KECCAK256 DUP4 MLOAD SWAP2 PUSH1 0x60 DUP6 ADD MLOAD AND PUSH1 0x40 MLOAD SWAP3 PUSH2 0x929 DUP5 PUSH2 0x2A88 JUMP JUMPDEST CALLER DUP5 MSTORE TIMESTAMP DUP11 DUP6 ADD MSTORE DUP7 PUSH1 0x40 DUP6 ADD MSTORE NUMBER PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x7 SIGNEXTEND DUP8 DUP5 ADD MSTORE PUSH1 0xA0 DUP4 ADD MSTORE PUSH2 0x2DA4 JUMP JUMPDEST MLOAD PUSH1 0x7 SIGNEXTEND SWAP1 PUSH1 0x40 MLOAD SWAP5 TIMESTAMP DUP7 MSTORE DUP6 ADD MSTORE NUMBER PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP5 ADD MSTORE CALLER SWAP3 LOG2 PUSH2 0x280 MLOAD DUP1 RETURN JUMPDEST PUSH2 0x94E SWAP2 SWAP3 POP PUSH2 0x997 SWAP1 DUP6 RETURNDATASIZE DUP8 GT PUSH2 0x99E JUMPI JUMPDEST PUSH2 0x98F DUP2 DUP4 PUSH2 0x2AE8 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x2F0F JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x8FD JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x985 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE PUSH2 0x280 MLOAD DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x9BC SWAP1 PUSH2 0x2AB9 JUMP JUMPDEST PUSH2 0x280 MLOAD DUP1 ISZERO PUSH2 0x89D JUMPI DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP10 SWAP1 MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x496E73756666696369656E7420666565 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 SWAP4 POP DUP8 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0xA2E JUMPI JUMPDEST PUSH2 0xA19 DUP2 DUP4 PUSH2 0x2AE8 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xA29 JUMPI MLOAD SWAP3 DUP10 PUSH2 0x85A JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0xA0F JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH2 0x280 MLOAD MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH2 0x280 MLOAD REVERT JUMPDEST CALLVALUE PUSH2 0x2A8 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2A8 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 PUSH2 0xA72 PUSH2 0x2A38 JUMP JUMPDEST AND PUSH2 0x280 MLOAD MSTORE PUSH1 0x3 DUP3 MSTORE PUSH2 0x280 MLOAD SWAP2 PUSH1 0x40 DUP4 KECCAK256 SWAP1 DUP2 SLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP5 DUP6 DUP4 GT PUSH2 0xB71 JUMPI POP SWAP3 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH1 0x5 PUSH2 0xAB0 DUP7 DUP4 DUP4 SHL ADD DUP5 PUSH2 0x2AE8 JUMP JUMPDEST DUP2 DUP4 MSTORE DUP6 DUP4 ADD DUP1 SWAP6 PUSH2 0x280 MLOAD MSTORE PUSH2 0x280 MLOAD DUP8 DUP2 KECCAK256 SWAP1 SWAP2 JUMPDEST DUP5 DUP4 LT PUSH2 0xB4D JUMPI POP POP POP POP POP PUSH1 0x40 MLOAD SWAP4 DUP1 DUP6 ADD SWAP2 DUP2 DUP7 MSTORE MLOAD DUP1 SWAP3 MSTORE PUSH1 0x40 DUP6 ADD SWAP4 SWAP3 PUSH2 0x280 MLOAD SWAP1 JUMPDEST DUP4 DUP3 LT PUSH2 0xAFB JUMPI DUP7 DUP7 SUB DUP8 RETURN JUMPDEST DUP5 MLOAD DUP1 MLOAD DUP3 AND DUP8 MSTORE DUP1 DUP5 ADD MLOAD DUP8 DUP6 ADD MSTORE PUSH1 0x40 DUP1 DUP3 ADD MLOAD SWAP1 DUP9 ADD MSTORE PUSH1 0x60 DUP1 DUP3 ADD MLOAD SWAP1 DUP9 ADD MSTORE PUSH1 0x80 DUP1 DUP3 ADD MLOAD PUSH1 0x7 SIGNEXTEND SWAP1 DUP9 ADD MSTORE PUSH1 0xA0 SWAP1 DUP2 ADD MLOAD DUP10 AND SWAP1 DUP8 ADD MSTORE PUSH1 0xC0 SWAP1 SWAP6 ADD SWAP5 SWAP4 DUP3 ADD SWAP4 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH2 0xAEE JUMP JUMPDEST DUP4 DUP10 PUSH1 0x1 SWAP3 PUSH2 0xB5F DUP6 SWAP13 SWAP10 SWAP11 SWAP13 PUSH2 0x31AB JUMP JUMPDEST DUP2 MSTORE ADD SWAP3 ADD SWAP3 ADD SWAP2 SWAP1 SWAP8 SWAP6 SWAP5 SWAP8 PUSH2 0xAC7 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL SWAP1 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH2 0x280 MLOAD PUSH1 0x24 SWAP1 REVERT JUMPDEST CALLVALUE PUSH2 0x2A8 JUMPI PUSH2 0x280 MLOAD DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3F4 JUMPI PUSH1 0x20 PUSH1 0x6 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2A8 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2A8 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x2A8 JUMPI PUSH2 0x44C PUSH1 0x20 SWAP2 PUSH2 0x2C56 JUMP JUMPDEST CALLVALUE PUSH2 0x2A8 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2A8 JUMPI PUSH2 0xD2F SWAP1 PUSH2 0xBF1 PUSH2 0x2A38 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBFD DUP2 PUSH2 0x2ACC JUMP JUMPDEST PUSH2 0x280 MLOAD DUP2 MSTORE PUSH2 0x280 MLOAD DUP4 DUP3 ADD MSTORE PUSH2 0x280 MLOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x280 MLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x280 MLOAD PUSH1 0x80 DUP3 ADD MSTORE PUSH2 0x280 MLOAD PUSH1 0xA0 DUP3 ADD MSTORE PUSH2 0x280 MLOAD PUSH1 0xC0 DUP3 ADD MSTORE PUSH1 0x60 PUSH1 0xE0 DUP3 ADD MSTORE PUSH2 0x280 MLOAD PUSH2 0x100 DUP1 SWAP3 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP3 AND PUSH2 0x280 MLOAD MSTORE PUSH1 0x5 DUP4 MSTORE PUSH2 0xD43 PUSH1 0x40 PUSH2 0x280 MLOAD KECCAK256 SWAP3 PUSH1 0x40 MLOAD SWAP6 DUP7 DUP1 SWAP6 DUP2 SWAP4 PUSH2 0xC7A DUP4 PUSH2 0x2ACC JUMP JUMPDEST DUP1 DUP3 SLOAD AND DUP4 MSTORE PUSH1 0x1 DUP3 ADD SLOAD DUP10 DUP5 ADD SWAP1 DUP2 MSTORE PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x40 DUP6 ADD SWAP1 DUP2 MSTORE PUSH1 0x3 DUP5 ADD SLOAD SWAP2 PUSH1 0x60 DUP7 ADD SWAP3 PUSH1 0x7 SIGNEXTEND DUP4 MSTORE DUP12 PUSH1 0x4 DUP7 ADD SLOAD SWAP5 PUSH1 0x80 DUP9 ADD SWAP6 DUP7 MSTORE DUP12 PUSH1 0x8 PUSH1 0x5 DUP10 ADD SLOAD SWAP9 PUSH1 0xA0 DUP12 ADD SWAP10 DUP11 MSTORE PUSH2 0xCDB PUSH1 0xC0 PUSH1 0xFF PUSH1 0x6 DUP5 ADD SLOAD AND SWAP13 ADD SWAP12 DUP13 PUSH2 0x2CF6 JUMP JUMPDEST PUSH1 0xE0 PUSH2 0xCE9 PUSH1 0x7 DUP4 ADD PUSH2 0x2B09 JUMP JUMPDEST SWAP14 ADD SWAP13 DUP14 MSTORE ADD SLOAD SWAP14 ADD SWAP13 DUP14 MSTORE PUSH1 0x40 MLOAD SWAP15 DUP16 SWAP15 DUP16 MSTORE MLOAD AND SWAP1 DUP14 ADD MSTORE MLOAD PUSH1 0x40 DUP13 ADD MSTORE MLOAD PUSH1 0x60 DUP12 ADD MSTORE MLOAD PUSH1 0x7 SIGNEXTEND PUSH1 0x80 DUP11 ADD MSTORE MLOAD PUSH1 0xA0 DUP10 ADD MSTORE MLOAD PUSH1 0xC0 DUP9 ADD MSTORE MLOAD PUSH1 0xE0 DUP8 ADD SWAP1 PUSH2 0x2BAF JUMP JUMPDEST MLOAD PUSH2 0x120 DUP1 SWAP4 DUP7 ADD MSTORE PUSH2 0x140 DUP6 ADD SWAP1 PUSH2 0x2BD2 JUMP JUMPDEST SWAP2 MLOAD SWAP1 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST CALLVALUE PUSH2 0x2A8 JUMPI PUSH1 0x80 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2A8 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2A8 JUMPI PUSH2 0xD7D SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2A08 JUMP JUMPDEST SWAP1 PUSH2 0x340 MSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2A8 JUMPI PUSH2 0xDA1 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2A08 JUMP JUMPDEST PUSH2 0x300 MSTORE PUSH2 0x320 MSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2A8 JUMPI PUSH2 0xDC8 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2A08 JUMP JUMPDEST SWAP1 SWAP2 PUSH1 0x64 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2A8 JUMPI PUSH2 0xDE9 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2A08 JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x2 SLOAD AND CALLER EQ DUP1 ISZERO PUSH2 0x1157 JUMPI JUMPDEST PUSH2 0xE08 SWAP1 PUSH2 0x2F7B JUMP JUMPDEST PUSH2 0xE16 PUSH2 0x300 MLOAD DUP4 EQ PUSH2 0x2FB8 JUMP JUMPDEST PUSH2 0x280 MLOAD JUMPDEST DUP3 DUP2 LT PUSH2 0xE29 JUMPI PUSH2 0x280 MLOAD DUP1 RETURN JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH2 0xE46 PUSH2 0xE41 DUP4 DUP7 PUSH2 0x340 MLOAD PUSH2 0x305F JUMP JUMPDEST PUSH2 0x306F JUMP JUMPDEST AND PUSH2 0x280 MLOAD MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0xFF DUP1 PUSH1 0x40 PUSH2 0x280 MLOAD KECCAK256 SLOAD AND PUSH2 0x1139 JUMPI JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH2 0xE7A PUSH2 0xE41 DUP5 DUP8 PUSH2 0x340 MLOAD PUSH2 0x305F JUMP JUMPDEST AND PUSH2 0x280 MLOAD MSTORE PUSH1 0x8 SWAP1 DUP2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH2 0x280 MLOAD KECCAK256 SLOAD AND ISZERO PUSH2 0x10E7 JUMPI JUMPDEST POP PUSH2 0xEA8 DUP2 PUSH2 0x300 MLOAD PUSH2 0x320 MLOAD PUSH2 0x305F JUMP JUMPDEST CALLDATALOAD PUSH2 0xEB4 DUP3 DUP8 DUP10 PUSH2 0x3083 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0xEEC PUSH2 0xEC4 DUP6 DUP10 DUP9 PUSH2 0x305F JUMP JUMPDEST CALLDATALOAD SWAP2 PUSH1 0x40 MLOAD SWAP4 PUSH2 0xED3 DUP6 PUSH2 0x2A88 JUMP JUMPDEST PUSH1 0x1 DUP6 MSTORE PUSH1 0x20 DUP6 ADD MSTORE PUSH1 0x40 DUP5 ADD SWAP5 PUSH1 0x1 DUP7 MSTORE CALLDATASIZE SWAP2 PUSH2 0x3129 JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x80 DUP3 ADD MSTORE TIMESTAMP PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH2 0xF14 PUSH2 0xE41 DUP6 DUP9 PUSH2 0x340 MLOAD PUSH2 0x305F JUMP JUMPDEST AND PUSH2 0x280 MLOAD MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH2 0x280 MLOAD PUSH1 0x40 DUP2 KECCAK256 SWAP3 PUSH2 0xF41 DUP4 MLOAD ISZERO ISZERO DUP6 SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x1 DUP6 ADD SSTORE MLOAD SWAP1 PUSH1 0x3 DUP3 LT ISZERO PUSH2 0x10CF JUMPI POP PUSH2 0xF64 SWAP1 PUSH1 0x2 DUP5 ADD PUSH2 0x316F JUMP JUMPDEST PUSH1 0x60 DUP2 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x10B5 JUMPI PUSH2 0xF87 PUSH1 0x3 DUP6 ADD SLOAD PUSH2 0x2A4E JUMP JUMPDEST SWAP1 PUSH1 0x1F SWAP2 DUP3 DUP2 GT PUSH2 0x1074 JUMPI JUMPDEST POP PUSH2 0x280 MLOAD PUSH1 0x20 SWAP3 DUP5 GT PUSH1 0x1 EQ PUSH2 0xFF9 JUMPI POP SWAP3 DUP3 PUSH1 0x5 SWAP4 PUSH1 0xA0 SWAP4 PUSH2 0xFE9 SWAP9 SWAP8 SWAP7 PUSH2 0x280 MLOAD SWAP3 PUSH2 0xFEE JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x3 DUP6 ADD SSTORE JUMPDEST PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x4 DUP6 ADD SSTORE ADD MLOAD SWAP2 ADD SSTORE PUSH2 0x303A JUMP JUMPDEST PUSH2 0xE1B JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP14 DUP1 PUSH2 0xFBD JUMP JUMPDEST PUSH1 0x3 DUP7 ADD SWAP1 MSTORE PUSH2 0x280 MLOAD PUSH1 0x20 DUP2 KECCAK256 SWAP3 SWAP2 SWAP1 JUMPDEST PUSH1 0x1F NOT DUP6 AND DUP2 LT PUSH2 0x105C JUMPI POP DUP4 PUSH1 0xA0 SWAP4 PUSH2 0xFE9 SWAP9 SWAP8 SWAP7 SWAP4 PUSH1 0x1 SWAP4 PUSH1 0x5 SWAP8 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x1043 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x3 DUP6 ADD SSTORE PUSH2 0xFD5 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP14 DUP1 DUP1 PUSH2 0x1033 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x100B JUMP JUMPDEST PUSH2 0x10A6 SWAP1 PUSH1 0x3 DUP8 ADD PUSH2 0x280 MLOAD MSTORE PUSH1 0x20 PUSH2 0x280 MLOAD KECCAK256 PUSH1 0x5 DUP6 DUP1 DUP9 ADD DUP3 SHR DUP4 ADD SWAP4 PUSH1 0x20 DUP10 LT PUSH2 0x10AC JUMPI JUMPDEST ADD SWAP1 SHR ADD SWAP1 PUSH2 0x3187 JUMP JUMPDEST DUP12 PUSH2 0xF93 JUMP JUMPDEST SWAP4 POP DUP3 SWAP4 PUSH2 0x109C JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH2 0x280 MLOAD MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH2 0x280 MLOAD REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL SWAP1 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH2 0x280 MLOAD PUSH1 0x24 SWAP1 REVERT JUMPDEST PUSH2 0x1100 PUSH2 0x10FB PUSH2 0xE41 DUP5 DUP8 PUSH2 0x340 MLOAD PUSH2 0x305F JUMP JUMPDEST PUSH2 0x3106 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH2 0x1118 PUSH2 0xE41 DUP5 DUP8 PUSH2 0x340 MLOAD PUSH2 0x305F JUMP JUMPDEST AND PUSH2 0x280 MLOAD MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH2 0x280 MLOAD KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE DUP7 PUSH2 0xE96 JUMP JUMPDEST PUSH2 0x1152 PUSH2 0x114D PUSH2 0xE41 DUP5 DUP8 PUSH2 0x340 MLOAD PUSH2 0x305F JUMP JUMPDEST PUSH2 0x3316 JUMP JUMPDEST PUSH2 0xE62 JUMP JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xDFF JUMP JUMPDEST CALLVALUE PUSH2 0x2A8 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2A8 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x118C PUSH2 0x2A38 JUMP JUMPDEST AND PUSH2 0x280 MLOAD MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 PUSH2 0x280 MLOAD KECCAK256 DUP2 MLOAD PUSH2 0x11AA DUP2 PUSH2 0x2A88 JUMP JUMPDEST PUSH1 0xFF DUP3 SLOAD AND ISZERO ISZERO DUP2 MSTORE PUSH1 0x5 PUSH1 0x1 DUP4 ADD SLOAD SWAP3 PUSH1 0x20 DUP4 ADD SWAP4 DUP5 MSTORE PUSH2 0x11D5 PUSH1 0xFF PUSH1 0x2 DUP4 ADD SLOAD AND DUP7 DUP6 ADD PUSH2 0x2CF6 JUMP JUMPDEST PUSH2 0x11E1 PUSH1 0x3 DUP3 ADD PUSH2 0x2B09 JUMP JUMPDEST PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP5 ADD MSTORE ADD SLOAD PUSH1 0xA0 DUP3 ADD MSTORE MLOAD ISZERO ISZERO SWAP1 MLOAD DUP3 MLOAD SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST PUSH1 0xC0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2A8 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2A8 JUMPI PUSH2 0x1233 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2A08 JUMP JUMPDEST SWAP1 PUSH2 0x120 MSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2A8 JUMPI PUSH2 0x1257 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2A08 JUMP JUMPDEST PUSH2 0x240 MSTORE PUSH2 0x1C0 MSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2A8 JUMPI PUSH2 0x127E SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2A08 JUMP JUMPDEST PUSH2 0x100 MSTORE PUSH1 0xA0 MSTORE PUSH1 0x64 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2A8 JUMPI PUSH2 0x12A4 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2A08 JUMP JUMPDEST PUSH2 0x220 MSTORE PUSH2 0x2E0 MSTORE PUSH1 0x84 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2A8 JUMPI PUSH2 0x12CB SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2A08 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x2 SLOAD AND CALLER EQ DUP1 ISZERO PUSH2 0x1ACF JUMPI JUMPDEST PUSH2 0x12E9 SWAP1 PUSH2 0x2F7B JUMP JUMPDEST PUSH2 0x12F7 PUSH2 0x240 MLOAD DUP5 EQ PUSH2 0x2FB8 JUMP JUMPDEST PUSH2 0x1305 PUSH2 0x100 MLOAD DUP5 EQ PUSH2 0x2FB8 JUMP JUMPDEST PUSH2 0x1313 PUSH2 0x220 MLOAD DUP5 EQ PUSH2 0x2FB8 JUMP JUMPDEST PUSH2 0x280 MLOAD SLOAD PUSH1 0x40 MLOAD PUSH4 0xD47EED45 PUSH1 0xE0 SHL DUP2 MSTORE SWAP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP5 DUP1 PUSH2 0x1342 DUP6 DUP8 PUSH1 0x4 DUP5 ADD PUSH2 0x2E80 JUMP JUMPDEST SUB DUP2 DUP5 GAS STATICCALL SWAP4 DUP5 ISZERO PUSH2 0x9A5 JUMPI PUSH2 0x280 MLOAD SWAP5 PUSH2 0x1A9B JUMPI JUMPDEST POP PUSH2 0x1365 DUP5 CALLVALUE LT ISZERO PUSH2 0x2FF6 JUMP JUMPDEST DUP1 EXTCODESIZE ISZERO PUSH2 0x2A8 JUMPI PUSH2 0x1391 SWAP2 PUSH1 0x40 MLOAD SWAP5 DUP6 DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x1DF3CBC5 PUSH1 0xE3 SHL DUP4 MSTORE PUSH2 0x280 MLOAD SWAP8 PUSH1 0x4 DUP5 ADD PUSH2 0x2E80 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x9A5 JUMPI PUSH2 0x1A85 JUMPI JUMPDEST POP PUSH2 0x280 MLOAD SLOAD PUSH1 0x40 MLOAD PUSH4 0x96834AD3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0xA4 CALLDATALOAD PUSH1 0x4 DUP3 ADD MSTORE SWAP1 PUSH1 0x80 SWAP1 DUP3 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL DUP1 ISZERO PUSH2 0x9A5 JUMPI PUSH2 0x280 MLOAD PUSH2 0x160 MSTORE PUSH2 0x1A63 JUMPI JUMPDEST POP PUSH2 0x280 MLOAD JUMPDEST DUP2 DUP2 LT PUSH2 0x13F8 JUMPI PUSH2 0x280 MLOAD DUP1 RETURN JUMPDEST PUSH2 0x1409 PUSH2 0xE41 DUP3 DUP5 PUSH2 0x120 MLOAD PUSH2 0x305F JUMP JUMPDEST PUSH2 0x141A DUP3 PUSH2 0x240 MLOAD PUSH2 0x1C0 MLOAD PUSH2 0x305F JUMP JUMPDEST CALLDATALOAD PUSH2 0x142B DUP4 PUSH2 0x100 MLOAD PUSH1 0xA0 MLOAD PUSH2 0x3083 JUMP JUMPDEST SWAP2 SWAP1 SWAP3 PUSH2 0x143F DUP6 PUSH2 0x220 MLOAD PUSH2 0x2E0 MLOAD PUSH2 0x3083 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x280 MLOAD MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0xFF DUP1 PUSH1 0x40 PUSH2 0x280 MLOAD KECCAK256 SLOAD AND PUSH2 0x1A55 JUMPI JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x280 MLOAD MSTORE PUSH1 0x9 SWAP1 DUP2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH2 0x280 MLOAD KECCAK256 SLOAD AND ISZERO PUSH2 0x1A23 JUMPI JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1495 DUP2 PUSH2 0x2A88 JUMP JUMPDEST PUSH1 0x1 DUP2 MSTORE DUP5 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x2 PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x14AE PUSH2 0x3203 JUMP JUMPDEST PUSH1 0x60 DUP3 ADD MSTORE PUSH2 0x280 DUP1 MLOAD PUSH1 0x80 DUP4 ADD MSTORE TIMESTAMP PUSH1 0xA0 DUP4 ADD MSTORE DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE MLOAD PUSH1 0x40 DUP2 KECCAK256 DUP3 MLOAD DUP2 SLOAD PUSH1 0xFF NOT AND SWAP1 ISZERO ISZERO PUSH1 0xFF AND OR DUP2 SSTORE SWAP2 SWAP1 PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x1 DUP5 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD SWAP1 PUSH1 0x3 DUP3 LT ISZERO PUSH2 0x10CF JUMPI POP PUSH2 0x1515 SWAP1 PUSH1 0x2 DUP5 ADD PUSH2 0x316F JUMP JUMPDEST PUSH1 0x60 DUP2 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x10B5 JUMPI PUSH2 0x1538 PUSH1 0x3 DUP6 ADD SLOAD PUSH2 0x2A4E JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x19DF JUMPI JUMPDEST POP PUSH2 0x280 MLOAD SWAP1 PUSH1 0x20 SWAP2 PUSH1 0x1F DUP5 GT PUSH1 0x1 EQ PUSH2 0x1969 JUMPI POP SWAP2 DUP1 PUSH1 0x5 SWAP5 SWAP3 PUSH1 0xA0 SWAP5 PUSH2 0x280 MLOAD SWAP3 PUSH2 0x195E JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x3 DUP6 ADD SSTORE JUMPDEST PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x4 DUP6 ADD SSTORE ADD MLOAD SWAP2 ADD SSTORE PUSH2 0x280 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE MLOAD PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 DUP2 PUSH2 0x15CC JUMPI JUMPDEST POP POP POP POP POP POP POP POP POP PUSH2 0x15C7 SWAP1 PUSH2 0x303A JUMP JUMPDEST PUSH2 0x13EA JUMP JUMPDEST DUP2 PUSH1 0x0 NOT DUP2 ADD GT PUSH2 0x1946 JUMPI POP PUSH2 0x15EC PUSH1 0x20 SWAP3 PUSH2 0x15F2 SWAP3 PUSH1 0x0 NOT ADD SWAP1 PUSH2 0x2CDA JUMP JUMPDEST POP PUSH2 0x31AB JUMP JUMPDEST ADD SWAP2 DUP3 MLOAD PUSH1 0x60 PUSH2 0x160 MLOAD ADD MLOAD PUSH2 0x280 MLOAD SWAP2 DUP2 DUP2 GT PUSH1 0x0 EQ PUSH2 0x193E JUMPI PUSH2 0x1617 SWAP3 POP PUSH2 0x319E JUMP JUMPDEST PUSH2 0x3E8 SWAP1 DUP1 DUP3 DUP2 MUL DIV DUP3 EQ DUP2 ISZERO OR ISZERO PUSH2 0x1924 JUMPI MUL SWAP3 JUMPDEST MLOAD PUSH2 0x160 MLOAD PUSH1 0x60 DUP2 ADD MLOAD SWAP1 MLOAD SWAP1 PUSH1 0x40 MLOAD SWAP3 PUSH2 0x1647 DUP5 PUSH2 0x2ACC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP9 AND DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x7 SIGNEXTEND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0xA0 DUP2 ADD DUP7 SWAP1 MSTORE PUSH1 0x2 PUSH1 0xC0 DUP3 ADD MSTORE PUSH2 0x1682 PUSH2 0x3203 JUMP JUMPDEST PUSH1 0xE0 DUP3 ADD MSTORE PUSH2 0x280 MLOAD PUSH2 0x100 DUP3 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH2 0x280 MLOAD MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH2 0x280 MLOAD SWAP1 PUSH1 0x40 DUP3 KECCAK256 SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 MLOAD AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP5 SLOAD AND OR DUP4 SSTORE PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x1 DUP5 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x2 DUP5 ADD SSTORE PUSH1 0x3 DUP4 ADD PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB NOT DUP3 SLOAD AND SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND OR SWAP1 SSTORE PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x4 DUP5 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD PUSH1 0x5 DUP5 ADD SSTORE PUSH1 0xC0 DUP3 ADD MLOAD SWAP1 PUSH1 0x3 DUP3 LT ISZERO PUSH2 0x10CF JUMPI POP PUSH2 0x1730 SWAP1 PUSH1 0x6 DUP5 ADD PUSH2 0x316F JUMP JUMPDEST PUSH1 0xE0 DUP2 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x10B5 JUMPI PUSH2 0x1753 PUSH1 0x7 DUP6 ADD SLOAD PUSH2 0x2A4E JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x18E0 JUMPI JUMPDEST POP PUSH2 0x280 MLOAD SWAP1 PUSH1 0x20 SWAP2 PUSH1 0x1F DUP5 GT PUSH1 0x1 EQ PUSH2 0x1838 JUMPI POP PUSH2 0x100 PUSH2 0x15C7 SWAP14 SWAP13 SWAP12 SWAP10 SWAP8 SWAP5 DUP5 PUSH32 0x92971F04373CB63FAF3272641A4532C832AB490E5CBA6D98CB3805E2E0530E08 SWAP13 SWAP11 SWAP9 SWAP6 PUSH2 0x1805 SWAP9 SWAP6 PUSH1 0x8 SWAP6 PUSH2 0x280 MLOAD SWAP3 PUSH2 0x182D JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x7 DUP6 ADD SSTORE JUMPDEST ADD MLOAD SWAP2 ADD SSTORE PUSH2 0x17F7 PUSH2 0x160 MLOAD MLOAD PUSH1 0x7 SIGNEXTEND SWAP10 PUSH1 0x40 MLOAD SWAP9 DUP10 SWAP9 DUP10 MSTORE PUSH1 0xA0 PUSH1 0x20 DUP11 ADD MSTORE PUSH1 0xA0 DUP10 ADD SWAP2 PUSH2 0x2E5F JUMP JUMPDEST SWAP2 DUP7 DUP4 SUB PUSH1 0x40 DUP9 ADD MSTORE PUSH2 0x2E5F JUMP JUMPDEST PUSH1 0x60 DUP5 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP4 SUB SWAP1 LOG2 SWAP1 DUP4 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 PUSH2 0x15B5 JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x17B5 JUMP JUMPDEST PUSH1 0x7 DUP7 ADD SWAP1 MSTORE PUSH2 0x280 MLOAD PUSH1 0x20 DUP2 KECCAK256 SWAP3 SWAP2 SWAP1 JUMPDEST PUSH1 0x1F NOT DUP6 AND DUP2 LT PUSH2 0x18C8 JUMPI POP PUSH2 0x15C7 SWAP14 SWAP13 SWAP12 SWAP10 SWAP8 SWAP5 PUSH1 0x1 DUP6 PUSH2 0x1805 SWAP9 SWAP6 PUSH1 0x8 SWAP6 PUSH32 0x92971F04373CB63FAF3272641A4532C832AB490E5CBA6D98CB3805E2E0530E08 SWAP16 SWAP14 SWAP12 SWAP9 SWAP6 PUSH2 0x100 SWAP7 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x18AF JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x7 DUP6 ADD SSTORE PUSH2 0x17CD JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x189F JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x184A JUMP JUMPDEST PUSH2 0x1914 SWAP1 PUSH1 0x7 DUP7 ADD PUSH2 0x280 MLOAD MSTORE PUSH1 0x20 PUSH2 0x280 MLOAD KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP7 LT PUSH2 0x191A JUMPI JUMPDEST PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x3187 JUMP JUMPDEST DUP14 PUSH2 0x175C JUMP JUMPDEST SWAP1 SWAP2 POP DUP2 SWAP1 PUSH2 0x1907 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH2 0x280 MLOAD MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH2 0x280 MLOAD REVERT JUMPDEST POP POP SWAP3 PUSH2 0x162D JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL SWAP1 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH2 0x280 MLOAD PUSH1 0x24 SWAP1 REVERT JUMPDEST ADD MLOAD SWAP1 POP DUP15 DUP1 PUSH2 0x1569 JUMP JUMPDEST PUSH1 0x3 DUP7 ADD SWAP1 MSTORE PUSH2 0x280 MLOAD PUSH1 0x20 DUP2 KECCAK256 SWAP3 SWAP2 SWAP1 JUMPDEST PUSH1 0x1F NOT DUP6 AND DUP2 LT PUSH2 0x19C7 JUMPI POP SWAP3 PUSH1 0x5 SWAP5 SWAP3 PUSH1 0x1 SWAP3 PUSH1 0xA0 SWAP6 DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x19AE JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x3 DUP6 ADD SSTORE PUSH2 0x1581 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP15 DUP1 DUP1 PUSH2 0x199E JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x197B JUMP JUMPDEST PUSH2 0x1A13 SWAP1 PUSH1 0x3 DUP7 ADD PUSH2 0x280 MLOAD MSTORE PUSH1 0x20 PUSH2 0x280 MLOAD KECCAK256 PUSH1 0x5 PUSH1 0x1F DUP7 ADD DUP2 SHR DUP3 ADD SWAP3 PUSH1 0x20 DUP8 LT PUSH2 0x1A19 JUMPI JUMPDEST PUSH1 0x1F ADD SWAP1 SHR ADD SWAP1 PUSH2 0x3187 JUMP JUMPDEST DUP13 PUSH2 0x1541 JUMP JUMPDEST SWAP2 SWAP3 POP DUP3 SWAP2 PUSH2 0x1A07 JUMP JUMPDEST PUSH2 0x1A2C DUP5 PUSH2 0x30C4 JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH2 0x280 MLOAD MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH2 0x280 MLOAD KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE DUP9 PUSH2 0x1488 JUMP JUMPDEST PUSH2 0x1A5E DUP5 PUSH2 0x323B JUMP JUMPDEST PUSH2 0x1464 JUMP JUMPDEST PUSH2 0x1A7B SWAP1 PUSH1 0x80 RETURNDATASIZE PUSH1 0x80 GT PUSH2 0x99E JUMPI PUSH2 0x98F DUP2 DUP4 PUSH2 0x2AE8 JUMP JUMPDEST PUSH2 0x160 MSTORE DUP2 PUSH2 0x13E4 JUMP JUMPDEST PUSH2 0x1A8E SWAP1 PUSH2 0x2AB9 JUMP JUMPDEST PUSH2 0x280 MLOAD DUP1 ISZERO PUSH2 0x13A0 JUMPI DUP1 REVERT JUMPDEST SWAP1 SWAP4 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x1AC7 JUMPI JUMPDEST DUP2 PUSH2 0x1AB7 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x2AE8 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xA29 JUMPI MLOAD SWAP3 DUP6 PUSH2 0x1358 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x1AAA JUMP JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x12E0 JUMP JUMPDEST CALLVALUE PUSH2 0x2A8 JUMPI PUSH2 0x280 MLOAD DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3F4 JUMPI PUSH1 0x40 MLOAD DUP1 PUSH1 0x7 SLOAD SWAP2 DUP3 DUP2 MSTORE PUSH1 0x20 DUP1 SWAP2 ADD SWAP3 PUSH1 0x7 PUSH2 0x280 MLOAD MSTORE PUSH32 0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C688 SWAP2 PUSH2 0x280 MLOAD SWAP1 JUMPDEST DUP3 DUP3 LT PUSH2 0x1B4E JUMPI PUSH2 0x51F DUP6 PUSH2 0x513 DUP2 DUP10 SUB DUP3 PUSH2 0x2AE8 JUMP JUMPDEST DUP4 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP7 MSTORE SWAP5 DUP6 ADD SWAP5 PUSH1 0x1 SWAP4 DUP5 ADD SWAP4 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x1B37 JUMP JUMPDEST CALLVALUE PUSH2 0x2A8 JUMPI PUSH2 0x280 MLOAD DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x3F4 JUMPI PUSH1 0x20 PUSH1 0x7 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2A8 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2A8 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1BB0 PUSH2 0x2A38 JUMP JUMPDEST AND PUSH2 0x280 MLOAD MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x20 PUSH1 0xFF PUSH1 0x40 PUSH2 0x280 MLOAD KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST CALLVALUE PUSH2 0x2A8 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2A8 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1BF3 PUSH2 0x2A38 JUMP JUMPDEST AND PUSH2 0x280 MLOAD MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH2 0x280 MLOAD KECCAK256 PUSH1 0xFF DUP2 SLOAD AND PUSH1 0x1 DUP3 ADD SLOAD SWAP2 PUSH1 0xFF PUSH1 0x2 DUP3 ADD SLOAD AND PUSH2 0x1C5F PUSH2 0x1C27 PUSH1 0x3 DUP5 ADD PUSH2 0x2B09 JUMP JUMPDEST PUSH2 0x1C4E PUSH1 0x5 PUSH1 0x4 DUP7 ADD SLOAD SWAP6 ADD SLOAD SWAP4 PUSH1 0x40 MLOAD SWAP8 DUP9 SWAP8 ISZERO ISZERO DUP9 MSTORE PUSH1 0x20 DUP9 ADD MSTORE PUSH1 0x40 DUP8 ADD SWAP1 PUSH2 0x2BAF JUMP JUMPDEST PUSH1 0xC0 PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0xC0 DUP6 ADD SWAP1 PUSH2 0x2BD2 JUMP JUMPDEST SWAP2 PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP4 ADD MSTORE SUB SWAP1 RETURN JUMPDEST PUSH1 0xE0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x2A8 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2A8 JUMPI PUSH2 0x1C99 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2A08 JUMP JUMPDEST PUSH2 0x2C0 MSTORE PUSH2 0x1A0 MSTORE PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2A8 JUMPI PUSH2 0x1CC0 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2A08 JUMP JUMPDEST PUSH2 0x200 MSTORE PUSH2 0x260 MSTORE PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2A8 JUMPI PUSH2 0x1CE7 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2A08 JUMP JUMPDEST PUSH1 0xC0 MSTORE PUSH1 0x80 MSTORE PUSH1 0x64 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2A8 JUMPI PUSH2 0x1D0C SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2A08 JUMP JUMPDEST PUSH2 0x2A0 MSTORE PUSH2 0x180 MSTORE PUSH1 0x84 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2A8 JUMPI PUSH2 0x1D33 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2A08 JUMP JUMPDEST PUSH2 0x140 MSTORE PUSH2 0x1E0 MSTORE PUSH1 0xA4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2A8 JUMPI PUSH2 0x1D5A SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2A08 JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x2 SLOAD AND CALLER EQ DUP1 ISZERO PUSH2 0x253E JUMPI JUMPDEST PUSH2 0x1D78 SWAP1 PUSH2 0x2F7B JUMP JUMPDEST PUSH2 0x1D89 PUSH2 0x200 MLOAD PUSH2 0x2C0 MLOAD EQ PUSH2 0x2FB8 JUMP JUMPDEST PUSH2 0x1D99 PUSH1 0xC0 MLOAD PUSH2 0x2C0 MLOAD EQ PUSH2 0x2FB8 JUMP JUMPDEST PUSH2 0x1DAA PUSH2 0x2A0 MLOAD PUSH2 0x2C0 MLOAD EQ PUSH2 0x2FB8 JUMP JUMPDEST PUSH2 0x1DBB PUSH2 0x140 MLOAD PUSH2 0x2C0 MLOAD EQ PUSH2 0x2FB8 JUMP JUMPDEST PUSH2 0x280 MLOAD SLOAD PUSH1 0x40 MLOAD PUSH4 0xD47EED45 PUSH1 0xE0 SHL DUP2 MSTORE SWAP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 DUP5 DUP1 PUSH2 0x1DEA DUP6 DUP8 PUSH1 0x4 DUP5 ADD PUSH2 0x2E80 JUMP JUMPDEST SUB DUP2 DUP5 GAS STATICCALL SWAP4 DUP5 ISZERO PUSH2 0x9A5 JUMPI PUSH2 0x280 MLOAD SWAP5 PUSH2 0x250A JUMPI JUMPDEST POP PUSH2 0x1E0D DUP5 CALLVALUE LT ISZERO PUSH2 0x2FF6 JUMP JUMPDEST DUP1 EXTCODESIZE ISZERO PUSH2 0x2A8 JUMPI PUSH2 0x1E39 SWAP2 PUSH1 0x40 MLOAD SWAP5 DUP6 DUP1 SWAP5 DUP2 SWAP4 PUSH4 0x1DF3CBC5 PUSH1 0xE3 SHL DUP4 MSTORE PUSH2 0x280 MLOAD SWAP8 PUSH1 0x4 DUP5 ADD PUSH2 0x2E80 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x9A5 JUMPI PUSH2 0x24FB JUMPI JUMPDEST POP PUSH2 0x280 MLOAD SLOAD PUSH1 0x40 MLOAD PUSH4 0x96834AD3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0xC4 CALLDATALOAD PUSH1 0x4 DUP3 ADD MSTORE SWAP1 PUSH1 0x80 SWAP1 DUP3 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL DUP1 ISZERO PUSH2 0x9A5 JUMPI PUSH2 0x280 MLOAD PUSH1 0xE0 MSTORE PUSH2 0x24DA JUMPI JUMPDEST POP PUSH2 0x280 MLOAD JUMPDEST PUSH2 0x2C0 MLOAD DUP1 DUP3 LT ISZERO PUSH2 0x24D3 JUMPI PUSH2 0xE41 DUP3 PUSH2 0x1EAE SWAP3 PUSH2 0x1A0 MLOAD PUSH2 0x305F JUMP JUMPDEST SWAP1 PUSH2 0x1EC0 DUP2 PUSH2 0x200 MLOAD PUSH2 0x260 MLOAD PUSH2 0x305F JUMP JUMPDEST CALLDATALOAD SWAP2 PUSH2 0x1ED1 DUP3 PUSH1 0xC0 MLOAD PUSH1 0x80 MLOAD PUSH2 0x3083 JUMP JUMPDEST SWAP1 SWAP2 PUSH2 0x1EE4 DUP5 PUSH2 0x2A0 MLOAD PUSH2 0x180 MLOAD PUSH2 0x305F JUMP JUMPDEST CALLDATALOAD PUSH2 0x1EF6 DUP6 PUSH2 0x140 MLOAD PUSH2 0x1E0 MLOAD PUSH2 0x3083 JUMP JUMPDEST PUSH2 0x280 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE MLOAD PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP2 SWAP3 SWAP2 PUSH1 0xFF SWAP1 DUP2 AND PUSH2 0x24C5 JUMPI JUMPDEST PUSH2 0x280 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP1 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE MLOAD PUSH1 0x40 SWAP1 KECCAK256 SLOAD AND ISZERO PUSH2 0x2491 JUMPI JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F4E DUP2 PUSH2 0x2A88 JUMP JUMPDEST PUSH1 0x1 DUP2 MSTORE DUP9 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x1F6A CALLDATASIZE DUP8 DUP10 PUSH2 0x3129 JUMP JUMPDEST PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP2 ADD DUP4 SWAP1 MSTORE TIMESTAMP PUSH1 0xA0 DUP3 ADD MSTORE PUSH2 0x280 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP1 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE MLOAD PUSH1 0x40 DUP2 KECCAK256 DUP3 MLOAD DUP2 SLOAD PUSH1 0xFF NOT AND SWAP1 ISZERO ISZERO PUSH1 0xFF AND OR DUP2 SSTORE SWAP2 SWAP1 PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x1 DUP5 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD SWAP1 PUSH1 0x3 DUP3 LT ISZERO PUSH2 0x10CF JUMPI POP PUSH2 0x1FD1 SWAP1 PUSH1 0x2 DUP5 ADD PUSH2 0x316F JUMP JUMPDEST PUSH1 0x60 DUP2 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x10B5 JUMPI PUSH2 0x1FF4 PUSH1 0x3 DUP6 ADD SLOAD PUSH2 0x2A4E JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x2458 JUMPI JUMPDEST POP PUSH2 0x280 MLOAD SWAP1 PUSH1 0x20 SWAP2 PUSH1 0x1F DUP5 GT PUSH1 0x1 EQ PUSH2 0x23E2 JUMPI POP SWAP2 DUP1 PUSH1 0x5 SWAP5 SWAP3 PUSH1 0xA0 SWAP5 PUSH2 0x280 MLOAD SWAP3 PUSH2 0x23D7 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x3 DUP6 ADD SSTORE JUMPDEST PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x4 DUP6 ADD SSTORE ADD MLOAD SWAP2 ADD SSTORE PUSH2 0x280 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE MLOAD PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD SWAP1 SWAP2 DUP2 PUSH2 0x2089 JUMPI JUMPDEST POP POP POP POP POP POP POP POP POP PUSH2 0x2084 SWAP2 POP PUSH2 0x303A JUMP JUMPDEST PUSH2 0x1E91 JUMP JUMPDEST DUP2 PUSH1 0x0 NOT DUP2 ADD GT PUSH2 0x1946 JUMPI POP PUSH2 0x15EC PUSH1 0x20 SWAP3 PUSH2 0x20A9 SWAP3 PUSH1 0x0 NOT ADD SWAP1 PUSH2 0x2CDA JUMP JUMPDEST ADD SWAP3 DUP4 MLOAD PUSH1 0x60 PUSH1 0xE0 MLOAD ADD MLOAD PUSH2 0x280 MLOAD SWAP2 DUP2 DUP2 GT PUSH1 0x0 EQ PUSH2 0x23CF JUMPI PUSH2 0x20CD SWAP3 POP PUSH2 0x319E JUMP JUMPDEST PUSH2 0x3E8 SWAP1 DUP1 DUP3 DUP2 MUL DIV DUP3 EQ DUP2 ISZERO OR ISZERO PUSH2 0x1924 JUMPI MUL SWAP4 JUMPDEST MLOAD PUSH1 0xE0 MLOAD PUSH1 0x60 DUP2 ADD MLOAD SWAP1 MLOAD SWAP1 PUSH1 0x40 MLOAD SWAP3 PUSH2 0x20FC DUP5 PUSH2 0x2ACC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND DUP5 MSTORE PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x7 SIGNEXTEND PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0xA0 DUP2 ADD DUP11 SWAP1 MSTORE PUSH1 0x1 PUSH1 0xC0 DUP3 ADD MSTORE PUSH2 0x213A CALLDATASIZE DUP9 DUP11 PUSH2 0x3129 JUMP JUMPDEST PUSH1 0xE0 DUP3 ADD MSTORE DUP4 PUSH2 0x100 DUP3 ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH2 0x280 MLOAD MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH2 0x280 MLOAD SWAP1 PUSH1 0x40 DUP3 KECCAK256 SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP3 MLOAD AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP5 SLOAD AND OR DUP4 SSTORE PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x1 DUP5 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x2 DUP5 ADD SSTORE PUSH1 0x3 DUP4 ADD PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB NOT DUP3 SLOAD AND SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND OR SWAP1 SSTORE PUSH1 0x80 DUP3 ADD MLOAD PUSH1 0x4 DUP5 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD PUSH1 0x5 DUP5 ADD SSTORE PUSH1 0xC0 DUP3 ADD MLOAD SWAP1 PUSH1 0x3 DUP3 LT ISZERO PUSH2 0x10CF JUMPI POP PUSH2 0x21E5 SWAP1 PUSH1 0x6 DUP5 ADD PUSH2 0x316F JUMP JUMPDEST PUSH1 0xE0 DUP2 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x10B5 JUMPI PUSH2 0x2208 PUSH1 0x7 DUP6 ADD SLOAD PUSH2 0x2A4E JUMP JUMPDEST PUSH1 0x1F DUP2 GT PUSH2 0x2396 JUMPI JUMPDEST POP PUSH2 0x280 MLOAD SWAP1 PUSH1 0x20 SWAP2 PUSH1 0x1F DUP5 GT PUSH1 0x1 EQ PUSH2 0x22F0 JUMPI POP PUSH2 0x100 PUSH2 0x2084 SWAP15 SWAP10 SWAP8 SWAP5 DUP5 PUSH2 0x22BD SWAP9 SWAP6 PUSH32 0xAEF9510F1FEA4F9E98D52EDC9ED5ECBB70FB93A756262405E9ABCAFF965D9B19 SWAP15 SWAP14 SWAP12 SWAP9 SWAP6 PUSH1 0x8 SWAP6 PUSH2 0x280 MLOAD SWAP3 PUSH2 0x22E5 JUMPI JUMPDEST POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x7 DUP6 ADD SSTORE JUMPDEST ADD MLOAD SWAP2 ADD SSTORE PUSH2 0x22AA PUSH1 0xE0 MLOAD MLOAD PUSH1 0x7 SIGNEXTEND SWAP11 PUSH1 0x40 MLOAD SWAP10 DUP11 SWAP10 DUP11 MSTORE PUSH1 0xC0 PUSH1 0x20 DUP12 ADD MSTORE PUSH1 0xC0 DUP11 ADD SWAP2 PUSH2 0x2E5F JUMP JUMPDEST SWAP3 PUSH1 0x40 DUP9 ADD MSTORE DUP7 DUP4 SUB PUSH1 0x60 DUP9 ADD MSTORE PUSH2 0x2E5F JUMP JUMPDEST PUSH1 0x80 DUP5 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP4 SUB SWAP1 LOG2 DUP3 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 DUP1 PUSH2 0x2071 JUMP JUMPDEST ADD MLOAD SWAP1 POP CODESIZE DUP1 PUSH2 0x2269 JUMP JUMPDEST PUSH1 0x7 DUP7 ADD SWAP1 MSTORE PUSH2 0x280 MLOAD PUSH1 0x20 DUP2 KECCAK256 SWAP3 SWAP2 SWAP1 JUMPDEST PUSH1 0x1F NOT DUP6 AND DUP2 LT PUSH2 0x237E JUMPI POP PUSH2 0x2084 SWAP15 SWAP10 SWAP8 SWAP5 PUSH1 0x1 DUP6 PUSH32 0xAEF9510F1FEA4F9E98D52EDC9ED5ECBB70FB93A756262405E9ABCAFF965D9B19 SWAP15 SWAP14 SWAP12 SWAP9 SWAP6 PUSH1 0x8 SWAP6 PUSH2 0x100 SWAP6 PUSH2 0x22BD SWAP13 SWAP10 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x2365 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x7 DUP6 ADD SSTORE PUSH2 0x2281 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE CODESIZE DUP1 DUP1 PUSH2 0x2355 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x2302 JUMP JUMPDEST PUSH2 0x23C9 SWAP1 PUSH1 0x7 DUP7 ADD PUSH2 0x280 MLOAD MSTORE PUSH1 0x20 PUSH2 0x280 MLOAD KECCAK256 PUSH1 0x1F DUP6 ADD PUSH1 0x5 SHR DUP2 ADD SWAP2 PUSH1 0x20 DUP7 LT PUSH2 0x191A JUMPI PUSH1 0x1F ADD PUSH1 0x5 SHR ADD SWAP1 PUSH2 0x3187 JUMP JUMPDEST DUP14 PUSH2 0x2211 JUMP JUMPDEST POP POP SWAP4 PUSH2 0x20E3 JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP15 DUP1 PUSH2 0x2025 JUMP JUMPDEST PUSH1 0x3 DUP7 ADD SWAP1 MSTORE PUSH2 0x280 MLOAD PUSH1 0x20 DUP2 KECCAK256 SWAP3 SWAP2 SWAP1 JUMPDEST PUSH1 0x1F NOT DUP6 AND DUP2 LT PUSH2 0x2440 JUMPI POP SWAP3 PUSH1 0x5 SWAP5 SWAP3 PUSH1 0x1 SWAP3 PUSH1 0xA0 SWAP6 DUP4 PUSH1 0x1F NOT DUP2 AND LT PUSH2 0x2427 JUMPI JUMPDEST POP POP POP DUP2 SHL ADD PUSH1 0x3 DUP6 ADD SSTORE PUSH2 0x203D JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP15 DUP1 DUP1 PUSH2 0x2417 JUMP JUMPDEST SWAP2 SWAP3 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP7 DUP6 ADD MLOAD DUP2 SSTORE ADD SWAP5 ADD SWAP3 ADD PUSH2 0x23F4 JUMP JUMPDEST PUSH2 0x248B SWAP1 PUSH1 0x3 DUP7 ADD PUSH2 0x280 MLOAD MSTORE PUSH1 0x20 PUSH2 0x280 MLOAD KECCAK256 PUSH1 0x5 PUSH1 0x1F DUP7 ADD DUP2 SHR DUP3 ADD SWAP3 PUSH1 0x20 DUP8 LT PUSH2 0x1A19 JUMPI PUSH1 0x1F ADD SWAP1 SHR ADD SWAP1 PUSH2 0x3187 JUMP JUMPDEST DUP13 PUSH2 0x1FFD JUMP JUMPDEST PUSH2 0x249A DUP5 PUSH2 0x3106 JUMP JUMPDEST PUSH2 0x280 DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE MLOAD PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x1F42 JUMP JUMPDEST PUSH2 0x24CE DUP6 PUSH2 0x3316 JUMP JUMPDEST PUSH2 0x1F1F JUMP JUMPDEST PUSH2 0x280 MLOAD DUP1 RETURN JUMPDEST PUSH2 0x24F2 SWAP1 PUSH1 0x80 RETURNDATASIZE PUSH1 0x80 GT PUSH2 0x99E JUMPI PUSH2 0x98F DUP2 DUP4 PUSH2 0x2AE8 JUMP JUMPDEST PUSH1 0xE0 MSTORE DUP1 PUSH2 0x1E8B JUMP JUMPDEST PUSH2 0x2504 SWAP1 PUSH2 0x2AB9 JUMP JUMPDEST DUP1 PUSH2 0x1E48 JUMP JUMPDEST SWAP1 SWAP4 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0x2536 JUMPI JUMPDEST DUP2 PUSH2 0x2526 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x2AE8 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x2A8 JUMPI MLOAD SWAP3 DUP5 PUSH2 0x1E00 JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0x2519 JUMP JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1D6F JUMP JUMPDEST CALLVALUE PUSH2 0x2A8 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x2A8 JUMPI PUSH1 0x4 CALLDATALOAD CALLER PUSH2 0x280 MLOAD MSTORE PUSH1 0x4 DUP3 MSTORE PUSH2 0x25D9 PUSH1 0x40 PUSH2 0x280 MLOAD KECCAK256 PUSH1 0x40 MLOAD PUSH2 0x2587 DUP2 PUSH2 0x2A88 JUMP JUMPDEST PUSH1 0xFF DUP3 SLOAD AND ISZERO ISZERO DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD DUP6 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x5 PUSH1 0xFF PUSH1 0x2 DUP6 ADD SLOAD AND SWAP4 PUSH2 0x25B4 PUSH1 0x40 DUP6 ADD SWAP6 DUP7 PUSH2 0x2CF6 JUMP JUMPDEST PUSH2 0x25C0 PUSH1 0x3 DUP3 ADD PUSH2 0x2B09 JUMP JUMPDEST PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x4 DUP2 ADD SLOAD PUSH1 0x80 DUP6 ADD MSTORE ADD SLOAD SWAP2 ADD MSTORE PUSH2 0x2D02 JUMP JUMPDEST PUSH1 0x3 DUP2 LT ISZERO PUSH2 0xA35 JUMPI PUSH1 0x2 PUSH2 0x25EF SWAP2 EQ ISZERO PUSH2 0x2D0F JUMP JUMPDEST PUSH2 0x25FA DUP2 ISZERO ISZERO PUSH2 0x2D67 JUMP JUMPDEST CALLER PUSH2 0x280 MLOAD MSTORE PUSH1 0x3 DUP3 MSTORE PUSH2 0x2646 PUSH1 0x40 PUSH2 0x280 MLOAD KECCAK256 PUSH1 0x40 MLOAD SWAP1 PUSH2 0x261B DUP3 PUSH2 0x2A88 JUMP JUMPDEST CALLER DUP3 MSTORE TIMESTAMP DUP6 DUP4 ADD MSTORE DUP4 PUSH1 0x40 DUP4 ADD MSTORE NUMBER PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x280 MLOAD PUSH1 0x80 DUP4 ADD MSTORE PUSH2 0x280 MLOAD PUSH1 0xA0 DUP4 ADD MSTORE PUSH2 0x2DA4 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP2 TIMESTAMP DUP4 MSTORE DUP3 ADD MSTORE NUMBER PUSH1 0x40 DUP3 ADD MSTORE PUSH2 0x280 MLOAD PUSH1 0x60 DUP3 ADD MSTORE PUSH32 0x3A41B4A45381E8007ECEED209F6413255128C9FAF4A51F718825CAB30CB89FFB PUSH1 0x80 CALLER SWAP3 LOG2 PUSH2 0x280 MLOAD DUP1 RETURN JUMPDEST CALLVALUE PUSH2 0xA29 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0xA29 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xA29 JUMPI PUSH2 0x26BC SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2A08 JUMP JUMPDEST PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xA29 JUMPI PUSH2 0x26DB SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2A08 JUMP JUMPDEST PUSH1 0x44 SWAP3 SWAP2 SWAP3 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xA29 JUMPI PUSH2 0x26FD SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0x2A08 JUMP JUMPDEST POP POP PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ DUP1 ISZERO PUSH2 0x29F4 JUMPI JUMPDEST PUSH2 0x271D SWAP1 PUSH2 0x2F7B JUMP JUMPDEST PUSH2 0x2728 DUP2 DUP4 EQ PUSH2 0x2FB8 JUMP JUMPDEST PUSH2 0x280 MLOAD JUMPDEST DUP3 DUP2 LT PUSH2 0x273B JUMPI PUSH2 0x280 MLOAD DUP1 RETURN JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x2751 PUSH2 0xE41 DUP4 DUP7 DUP10 PUSH2 0x305F JUMP JUMPDEST AND PUSH2 0x280 MLOAD MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0xFF DUP1 PUSH1 0x40 PUSH2 0x280 MLOAD KECCAK256 SLOAD AND PUSH2 0x29D9 JUMPI JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x2783 PUSH2 0xE41 DUP5 DUP8 DUP11 PUSH2 0x305F JUMP JUMPDEST AND PUSH2 0x280 MLOAD MSTORE PUSH1 0x9 SWAP1 DUP2 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH2 0x280 MLOAD KECCAK256 SLOAD AND ISZERO PUSH2 0x298C JUMPI JUMPDEST POP PUSH2 0x27AB DUP2 DUP4 DUP7 PUSH2 0x305F JUMP JUMPDEST CALLDATALOAD PUSH1 0x40 MLOAD PUSH2 0x27B8 DUP2 PUSH2 0x2A88 JUMP JUMPDEST PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 DUP3 MSTORE PUSH1 0x40 DUP2 ADD PUSH1 0x2 DUP2 MSTORE PUSH2 0x27D3 PUSH2 0x3203 JUMP JUMPDEST PUSH1 0x60 DUP4 ADD MSTORE PUSH2 0x280 MLOAD PUSH1 0x80 DUP4 ADD MSTORE TIMESTAMP PUSH1 0xA0 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x27FD PUSH2 0xE41 DUP7 DUP10 DUP13 PUSH2 0x305F JUMP JUMPDEST AND PUSH2 0x280 MLOAD MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH2 0x280 MLOAD SWAP1 PUSH1 0x40 DUP3 KECCAK256 SWAP4 PUSH2 0x282B DUP5 MLOAD ISZERO ISZERO DUP7 SWAP1 PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 ISZERO ISZERO AND OR SWAP1 SSTORE JUMP JUMPDEST MLOAD PUSH1 0x1 DUP6 ADD SSTORE MLOAD SWAP1 PUSH1 0x3 DUP3 LT ISZERO PUSH2 0x10CF JUMPI POP PUSH2 0x284A SWAP1 PUSH1 0x2 DUP5 ADD PUSH2 0x316F JUMP JUMPDEST PUSH1 0x60 DUP2 ADD MLOAD DUP1 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x10B5 JUMPI PUSH2 0x286D PUSH1 0x3 DUP6 ADD SLOAD PUSH2 0x2A4E JUMP JUMPDEST SWAP1 PUSH1 0x1F SWAP2 DUP3 DUP2 GT PUSH2 0x2955 JUMPI JUMPDEST POP PUSH2 0x280 MLOAD PUSH1 0x20 SWAP3 DUP5 GT PUSH1 0x1 EQ PUSH2 0x28DD JUMPI POP SWAP3 DUP3 PUSH1 0x5 SWAP4 PUSH1 0xA0 SWAP4 PUSH2 0x28CD SWAP9 SWAP8 SWAP7 PUSH2 0x280 MLOAD SWAP3 PUSH2 0x28D2 JUMPI POP POP DUP2 PUSH1 0x1 SHL SWAP2 PUSH1 0x0 NOT SWAP1 PUSH1 0x3 SHL SHR NOT AND OR PUSH1 0x3 DUP6 ADD SSTORE PUSH1 0x80 DUP2 ADD MLOAD PUSH1 0x4 DUP6 ADD SSTORE ADD MLOAD SWAP2 ADD SSTORE PUSH2 0x303A JUMP JUMPDEST PUSH2 0x272D JUMP JUMPDEST ADD MLOAD SWAP1 POP DUP13 DUP1 PUSH2 0xFBD JUMP JUMPDEST PUSH1 0x3 DUP7 ADD SWAP1 MSTORE PUSH2 0x280 MLOAD PUSH1 0x20 DUP2 KECCAK256 SWAP3 SWAP2 SWAP1 PUSH1 0x1F NOT DUP6 AND SWAP1 JUMPDEST DUP2 DUP2 LT PUSH2 0x293D JUMPI POP SWAP4 PUSH1 0xA0 SWAP4 PUSH2 0x28CD SWAP9 SWAP8 SWAP7 SWAP4 PUSH1 0x1 SWAP4 DUP4 PUSH1 0x5 SWAP9 LT PUSH2 0x2924 JUMPI POP POP POP DUP2 SHL ADD PUSH1 0x3 DUP6 ADD SSTORE PUSH2 0xFD5 JUMP JUMPDEST ADD MLOAD PUSH1 0x0 NOT PUSH1 0xF8 DUP5 PUSH1 0x3 SHL AND SHR NOT AND SWAP1 SSTORE DUP13 DUP1 DUP1 PUSH2 0x1033 JUMP JUMPDEST SWAP3 SWAP4 PUSH1 0x20 PUSH1 0x1 DUP2 SWAP3 DUP8 DUP7 ADD MLOAD DUP2 SSTORE ADD SWAP6 ADD SWAP4 ADD PUSH2 0x28F5 JUMP JUMPDEST PUSH2 0x2986 SWAP1 PUSH1 0x3 DUP8 ADD PUSH2 0x280 MLOAD MSTORE PUSH1 0x20 PUSH2 0x280 MLOAD KECCAK256 PUSH1 0x5 DUP6 DUP1 DUP9 ADD DUP3 SHR DUP4 ADD SWAP4 PUSH1 0x20 DUP10 LT PUSH2 0x10AC JUMPI ADD SWAP1 SHR ADD SWAP1 PUSH2 0x3187 JUMP JUMPDEST DUP11 PUSH2 0x2879 JUMP JUMPDEST PUSH2 0x29A2 PUSH2 0x299D PUSH2 0xE41 DUP5 DUP8 DUP11 PUSH2 0x305F JUMP JUMPDEST PUSH2 0x30C4 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x29B8 PUSH2 0xE41 DUP5 DUP8 DUP11 PUSH2 0x305F JUMP JUMPDEST AND PUSH2 0x280 MLOAD MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 PUSH2 0x280 MLOAD KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE DUP6 PUSH2 0x279F JUMP JUMPDEST PUSH2 0x29EF PUSH2 0x29EA PUSH2 0xE41 DUP5 DUP8 DUP11 PUSH2 0x305F JUMP JUMPDEST PUSH2 0x323B JUMP JUMPDEST PUSH2 0x276D JUMP JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x2714 JUMP JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0xA29 JUMPI DUP3 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0xA29 JUMPI PUSH1 0x20 DUP1 DUP6 ADD SWAP5 DUP5 PUSH1 0x5 SHL ADD ADD GT PUSH2 0xA29 JUMPI JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0xA29 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP3 DUP2 SHR SWAP3 AND DUP1 ISZERO PUSH2 0x2A7E JUMPI JUMPDEST PUSH1 0x20 DUP4 LT EQ PUSH2 0x2A68 JUMPI JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 PUSH1 0x7F AND SWAP2 PUSH2 0x2A5D JUMP JUMPDEST PUSH1 0xC0 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x2AA3 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x2AA3 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH2 0x120 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x2AA3 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x2AA3 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD SWAP2 DUP3 PUSH1 0x0 DUP3 SLOAD SWAP3 PUSH2 0x2B1D DUP5 PUSH2 0x2A4E JUMP JUMPDEST SWAP1 DUP2 DUP5 MSTORE PUSH1 0x1 SWAP5 DUP6 DUP2 AND SWAP1 DUP2 PUSH1 0x0 EQ PUSH2 0x2B8C JUMPI POP PUSH1 0x1 EQ PUSH2 0x2B49 JUMPI JUMPDEST POP POP PUSH2 0x2B47 SWAP3 POP SUB DUP4 PUSH2 0x2AE8 JUMP JUMPDEST JUMP JUMPDEST SWAP1 SWAP4 SWAP2 POP PUSH1 0x0 MSTORE PUSH1 0x20 SWAP1 DUP2 PUSH1 0x0 KECCAK256 SWAP4 PUSH1 0x0 SWAP2 JUMPDEST DUP2 DUP4 LT PUSH2 0x2B74 JUMPI POP POP PUSH2 0x2B47 SWAP4 POP DUP3 ADD ADD CODESIZE DUP1 PUSH2 0x2B39 JUMP JUMPDEST DUP6 SLOAD DUP9 DUP5 ADD DUP6 ADD MSTORE SWAP5 DUP6 ADD SWAP5 DUP8 SWAP5 POP SWAP2 DUP4 ADD SWAP2 PUSH2 0x2B5C JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2B47 SWAP5 POP PUSH1 0x20 SWAP3 POP PUSH1 0xFF NOT AND DUP3 DUP5 ADD MSTORE ISZERO ISZERO PUSH1 0x5 SHL DUP3 ADD ADD CODESIZE DUP1 PUSH2 0x2B39 JUMP JUMPDEST SWAP1 PUSH1 0x3 DUP3 LT ISZERO PUSH2 0x2BBC JUMPI MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP3 MLOAD SWAP3 DUP4 DUP3 MSTORE PUSH1 0x0 JUMPDEST DUP5 DUP2 LT PUSH2 0x2BFE JUMPI POP POP DUP3 PUSH1 0x0 PUSH1 0x20 DUP1 SWAP5 SWAP6 DUP5 ADD ADD MSTORE PUSH1 0x1F DUP1 NOT SWAP2 ADD AND ADD ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 DUP4 ADD DUP2 ADD MLOAD DUP5 DUP4 ADD DUP3 ADD MSTORE ADD PUSH2 0x2BDD JUMP JUMPDEST PUSH1 0x20 SWAP1 DUP2 PUSH1 0x40 DUP2 DUP4 ADD SWAP3 DUP3 DUP2 MSTORE DUP6 MLOAD DUP1 SWAP5 MSTORE ADD SWAP4 ADD SWAP2 PUSH1 0x0 JUMPDEST DUP3 DUP2 LT PUSH2 0x2C39 JUMPI POP POP POP POP SWAP1 JUMP JUMPDEST DUP4 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 MSTORE SWAP4 DUP2 ADD SWAP4 SWAP3 DUP2 ADD SWAP3 PUSH1 0x1 ADD PUSH2 0x2C2B JUMP JUMPDEST PUSH1 0x6 SLOAD DUP2 LT ISZERO PUSH2 0x2C8D JUMPI PUSH1 0x6 PUSH1 0x0 MSTORE PUSH32 0xF652222313E28459528D920B65115C16C04F3EFC82AAEDC97BE59F3F377C0D3F ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x7 SLOAD DUP2 LT ISZERO PUSH2 0x2C8D JUMPI PUSH1 0x7 PUSH1 0x0 MSTORE PUSH32 0xA66CC928B5EDB82AF9BD49922954155AB7B0942694BEA4CE44661D9A8736C688 ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0x2C8D JUMPI PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 MUL ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH1 0x3 DUP3 LT ISZERO PUSH2 0x2BBC JUMPI MSTORE JUMP JUMPDEST MLOAD PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x2BBC JUMPI SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x2D16 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x42616420626F74206465746563746564202D2074726164696E6720626C6F636B PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x656421 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x2D6E JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x125B9D985B1A5908185B5BDD5B9D PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 LT ISZERO PUSH2 0x2AA3 JUMPI PUSH2 0x2DC1 SWAP2 PUSH1 0x1 DUP3 ADD DUP2 SSTORE PUSH2 0x2CDA JUMP JUMPDEST PUSH2 0x2E49 JUMPI PUSH1 0x4 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP4 MLOAD AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP3 SLOAD AND OR DUP2 SSTORE PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x1 DUP3 ADD SSTORE PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x2 DUP3 ADD SSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x3 DUP3 ADD SSTORE ADD SWAP1 PUSH1 0x80 DUP2 ADD MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH16 0xFFFFFFFFFFFFFFFF0000000000000000 PUSH1 0xA0 DUP6 SLOAD SWAP4 ADD MLOAD PUSH1 0x40 SHL AND SWAP3 AND SWAP1 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND OR OR SWAP1 SSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 DUP1 PUSH1 0x20 SWAP4 SWAP3 DUP2 DUP5 MSTORE DUP5 DUP5 ADD CALLDATACOPY PUSH1 0x0 DUP3 DUP3 ADD DUP5 ADD MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x20 DUP2 DUP2 DUP6 ADD DUP3 DUP7 MSTORE MSTORE PUSH1 0x40 DUP5 ADD SWAP4 PUSH1 0x40 DUP4 PUSH1 0x5 SHL DUP3 ADD ADD SWAP5 DUP5 PUSH1 0x0 SWAP3 JUMPDEST DUP6 DUP5 LT PUSH2 0x2EB0 JUMPI POP POP POP POP POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 PUSH1 0x3F NOT DUP3 DUP3 SUB ADD DUP5 MSTORE DUP8 CALLDATALOAD PUSH1 0x1E NOT DUP5 CALLDATASIZE SUB ADD DUP2 SLT ISZERO PUSH2 0xA29 JUMPI DUP4 ADD DUP7 DUP2 ADD SWAP2 SWAP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xA29 JUMPI DUP1 CALLDATASIZE SUB DUP4 SGT PUSH2 0xA29 JUMPI PUSH2 0x2EFE DUP9 SWAP3 DUP4 SWAP3 PUSH1 0x1 SWAP6 PUSH2 0x2E5F JUMP JUMPDEST SWAP10 ADD SWAP5 ADD SWAP5 ADD SWAP3 SWAP6 SWAP5 SWAP4 SWAP2 SWAP1 PUSH2 0x2E9F JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x80 SWAP2 SUB SLT PUSH2 0xA29 JUMPI PUSH1 0x40 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x80 DUP4 ADD DUP2 DUP2 GT DUP5 DUP3 LT OR PUSH2 0x2AA3 JUMPI PUSH1 0x40 MSTORE DUP2 MLOAD DUP1 PUSH1 0x7 SIGNEXTEND DUP2 SUB PUSH2 0xA29 JUMPI DUP4 MSTORE PUSH1 0x20 DUP3 ADD MLOAD SWAP1 DUP2 AND DUP2 SUB PUSH2 0xA29 JUMPI PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD SWAP1 DUP2 PUSH1 0x3 SIGNEXTEND DUP3 SUB PUSH2 0xA29 JUMPI PUSH1 0x60 SWAP2 PUSH1 0x40 DUP5 ADD MSTORE ADD MLOAD PUSH1 0x60 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x2F82 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x139BDD08185D5D1A1BDC9A5E9959 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x2FBF JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x98CADCCEE8D040DAD2E6DAC2E8C6D PUSH1 0x8B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x2FFD JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x496E73756666696369656E74205079746820666565 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0x3049 JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0x2C8D JUMPI PUSH1 0x5 SHL ADD SWAP1 JUMP JUMPDEST CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0xA29 JUMPI SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0x2C8D JUMPI PUSH1 0x5 SHL DUP2 ADD CALLDATALOAD SWAP1 PUSH1 0x1E NOT DUP2 CALLDATASIZE SUB ADD DUP3 SLT ISZERO PUSH2 0xA29 JUMPI ADD SWAP1 DUP2 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0xA29 JUMPI PUSH1 0x20 ADD DUP3 CALLDATASIZE SUB DUP2 SGT PUSH2 0xA29 JUMPI SWAP2 SWAP1 JUMP JUMPDEST PUSH1 0x7 SLOAD SWAP1 PUSH1 0x1 PUSH1 0x40 SHL DUP3 LT ISZERO PUSH2 0x2AA3 JUMPI PUSH2 0x30E7 DUP3 PUSH1 0x1 PUSH2 0x2B47 SWAP5 ADD PUSH1 0x7 SSTORE PUSH2 0x2CA3 JUMP JUMPDEST SWAP1 SWAP2 SWAP1 DUP3 SLOAD SWAP1 PUSH1 0x3 SHL SWAP2 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP2 AND DUP4 SHL SWAP3 SHL NOT AND OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x6 SLOAD SWAP1 PUSH1 0x1 PUSH1 0x40 SHL DUP3 LT ISZERO PUSH2 0x2AA3 JUMPI PUSH2 0x30E7 DUP3 PUSH1 0x1 PUSH2 0x2B47 SWAP5 ADD PUSH1 0x6 SSTORE PUSH2 0x2C56 JUMP JUMPDEST SWAP3 SWAP2 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT PUSH2 0x2AA3 JUMPI PUSH1 0x40 MLOAD SWAP2 PUSH2 0x3152 PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD DUP5 PUSH2 0x2AE8 JUMP JUMPDEST DUP3 SWAP5 DUP2 DUP5 MSTORE DUP2 DUP4 ADD GT PUSH2 0xA29 JUMPI DUP3 DUP2 PUSH1 0x20 SWAP4 DUP5 PUSH1 0x0 SWAP7 ADD CALLDATACOPY ADD ADD MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x3 DUP2 LT ISZERO PUSH2 0x2BBC JUMPI PUSH1 0xFF DUP1 NOT DUP4 SLOAD AND SWAP2 AND OR SWAP1 SSTORE JUMP JUMPDEST DUP2 DUP2 LT PUSH2 0x3192 JUMPI POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x3187 JUMP JUMPDEST SWAP2 SWAP1 DUP3 SUB SWAP2 DUP3 GT PUSH2 0x3049 JUMPI JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD PUSH2 0x31B8 DUP2 PUSH2 0x2A88 JUMP JUMPDEST PUSH1 0xA0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x4 DUP4 SWAP6 PUSH1 0x1 DUP1 DUP6 SHL SUB DUP2 SLOAD AND DUP6 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP7 ADD MSTORE ADD SLOAD DUP1 PUSH1 0x7 SIGNEXTEND PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0x40 SHR AND SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 PUSH1 0x40 DUP3 ADD DUP3 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x2AA3 JUMPI PUSH1 0x40 MSTORE PUSH1 0xC DUP3 MSTORE PUSH12 0x4D616E6970756C6174697665 PUSH1 0xA0 SHL PUSH1 0x20 DUP4 ADD MSTORE JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x6 DUP1 SLOAD SWAP1 DUP2 DUP4 LT ISZERO PUSH2 0x3310 JUMPI PUSH2 0x3254 DUP4 PUSH2 0x2C56 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP5 SWAP1 SWAP3 PUSH1 0x3 SWAP3 SWAP1 DUP4 SHL SHR DUP4 AND DUP6 EQ PUSH2 0x3286 JUMPI POP POP POP POP POP PUSH2 0x3281 SWAP1 PUSH2 0x303A JUMP JUMPDEST PUSH2 0x323E JUMP JUMPDEST SWAP4 SWAP6 POP SWAP2 SWAP4 PUSH1 0x0 NOT SWAP4 SWAP1 SWAP2 DUP5 DUP3 ADD SWAP2 DUP3 GT PUSH2 0x3049 JUMPI PUSH2 0x32B7 SWAP4 PUSH2 0x32AB PUSH2 0x30E7 SWAP4 PUSH2 0x2C56 JUMP JUMPDEST SWAP1 SLOAD SWAP2 SHL SHR AND SWAP2 PUSH2 0x2C56 JUMP JUMPDEST DUP2 SLOAD DUP1 ISZERO PUSH2 0x32FA JUMPI ADD SWAP1 PUSH2 0x32E2 PUSH2 0x32CD DUP4 PUSH2 0x2C56 JUMP JUMPDEST DUP2 SLOAD SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB SWAP1 PUSH1 0x3 SHL SHL NOT AND SWAP1 SSTORE JUMP JUMPDEST SSTORE PUSH1 0x0 MSTORE PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST PUSH1 0x7 DUP1 SLOAD SWAP1 DUP2 DUP4 LT ISZERO PUSH2 0x3310 JUMPI PUSH2 0x332F DUP4 PUSH2 0x2CA3 JUMP JUMPDEST SWAP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 DUP2 AND SWAP5 SWAP1 SWAP3 PUSH1 0x3 SWAP3 SWAP1 DUP4 SHL SHR DUP4 AND DUP6 EQ PUSH2 0x3361 JUMPI POP POP POP POP POP PUSH2 0x335C SWAP1 PUSH2 0x303A JUMP JUMPDEST PUSH2 0x3319 JUMP JUMPDEST SWAP4 SWAP6 POP SWAP2 SWAP4 PUSH1 0x0 NOT SWAP4 SWAP1 SWAP2 DUP5 DUP3 ADD SWAP2 DUP3 GT PUSH2 0x3049 JUMPI PUSH2 0x3392 SWAP4 PUSH2 0x3386 PUSH2 0x30E7 SWAP4 PUSH2 0x2CA3 JUMP JUMPDEST SWAP1 SLOAD SWAP2 SHL SHR AND SWAP2 PUSH2 0x2CA3 JUMP JUMPDEST DUP2 SLOAD DUP1 ISZERO PUSH2 0x32FA JUMPI ADD SWAP1 PUSH2 0x33A8 PUSH2 0x32CD DUP4 PUSH2 0x2CA3 JUMP JUMPDEST SSTORE PUSH1 0x0 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH1 0x40 PUSH1 0x0 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE JUMP JUMPDEST PUSH2 0x33CA DUP2 SLOAD PUSH2 0x2A4E JUMP JUMPDEST SWAP1 DUP2 PUSH2 0x33D4 JUMPI POP POP JUMP JUMPDEST DUP2 PUSH1 0x1F PUSH1 0x0 SWAP4 GT PUSH1 0x1 EQ PUSH2 0x33E6 JUMPI POP SSTORE JUMP JUMPDEST SWAP1 DUP1 DUP4 SWAP2 DUP3 MSTORE PUSH2 0x3405 PUSH1 0x1F PUSH1 0x20 DUP5 KECCAK256 SWAP5 ADD PUSH1 0x5 SHR DUP5 ADD PUSH1 0x1 DUP6 ADD PUSH2 0x3187 JUMP JUMPDEST SSTORE SSTORE JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE2 GAS 0xBF SSTORE 0x5F PUSH12 0xD6C4D0E7B9CB09CF7921FADB CREATE LOG3 0xC2 0xD9 TIMESTAMP DUP4 0x2D 0xCA MSIZE 0x4B NOT RETURNDATASIZE PUSH20 0x8C64736F6C634300081300330000000000000000 ","sourceMap":"172:16477:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14634:36;172:16477;;:::i;:::-;;;;;;;;2449:11;172:16477;;2435:10;:25;:48;;;;172:16477;2413:112;;;:::i;:::-;172:16477;;;;;;;;;;;;;;;;2449:11;172:16477;;;14347:26;172:16477;;;14390:9;172:16477;;;;;14386:73;;172:16477;;;;;14473:8;172:16477;;;;;;;;;14469:71;;172:16477;;;;;;;;;;;;;;;;;;;;;;;;;2449:11;172:16477;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2449:11;172:16477;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14390:9;172:16477;;;;;;;;;;;:::i;:::-;14634:36;172:16477;;;;14469:71;14523:4;;;:::i;:::-;14469:71;;;14386:73;14442:4;;;:::i;:::-;14386:73;;2435:48;-1:-1:-1;172:16477:3;;;;2435:10;2464:19;2435:48;;172:16477;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;172:16477:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;172:16477:3;;;;;;;;;;;;;;-1:-1:-1;;172:16477:3;;;;;;1543:24;172:16477;1543:24;;;;;;172:16477;1543:24;;:::i;:::-;172:16477;;;;;;;;;;-1:-1:-1;;;;;172:16477:3;;;;;;;;;;-1:-1:-1;;172:16477:3;;;;-1:-1:-1;;;;;172:16477:3;;:::i;:::-;;;;;16412:8;172:16477;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15623:8;172:16477;;;;;;;;;;15623:8;172:16477;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;172:16477:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;259:26;172:16477;;;-1:-1:-1;;;;;172:16477:3;;;;;;;;;;;;;;-1:-1:-1;;172:16477:3;;;;-1:-1:-1;;;;;172:16477:3;;;:::i;:::-;;;;;1399:55;172:16477;;;;;;;;;;;1399:55;;172:16477;1399:55;172:16477;1399:55;;;172:16477;1399:55;172:16477;;1399:55;;172:16477;;1399:55;;172:16477;1399:55;;;172:16477;1399:55;172:16477;1399:55;;;172:16477;;1399:55;;;172:16477;1399:55;;;:::i;:::-;;;172:16477;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;172:16477:3;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;172:16477:3;;;;;;;;;;;;;;;;;;;1288:51;;;;;;;172:16477;1288:51;-1:-1:-1;;;;;1288:51:3;;:::i;:::-;172:16477;;;;;1288:51;172:16477;1288:51;;172:16477;1288:51;;;;172:16477;;;1288:51;;172:16477;1288:51;;172:16477;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;172:16477:3;;;;;;:::i;:::-;;;-1:-1:-1;;;;;172:16477:3;;;;16567:10;:19;172:16477;;;-1:-1:-1;;;;;172:16477:3;;16612:26;172:16477;;;16612:26;172:16477;;;;;;;;-1:-1:-1;;;172:16477:3;;;;;;;;;;;;-1:-1:-1;;;172:16477:3;;;;;;;;;;-1:-1:-1;;172:16477:3;;;;;;-1:-1:-1;;;;;172:16477:3;;;;;;;;;;;;;;:::i;:::-;3888:10;;;172:16477;;;;;;;;;;;;;3961:16;172:16477;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3961:16;:::i;:::-;172:16477;;;;;;;3939:124;3961:39;;;3939:124;:::i;:::-;4074:37;4082:10;;;4074:37;:::i;:::-;172:16477;;;;;-1:-1:-1;;;4135:34:3;;-1:-1:-1;;;;;172:16477:3;;;;;;;4135:34;172:16477;;4135:34;172:16477;;;4135:34;;;:::i;:::-;;;;;;;;;;;172:16477;4135:34;;;;172:16477;4188:9;;;:16;172:16477;;4238:50;;;;;;172:16477;;;;;;;;;;;;4238:50;;172:16477;;4238:50;172:16477;4238:50;;;:::i;:::-;;;;;;;;;;;172:16477;;;;;;;;;;;;;;;;;;;4332:37;;172:16477;;;4332:37;;172:16477;4366:2;172:16477;;;;4332:37;;;;;;;4747:153;4332:37;172:16477;4332:37;;;;172:16477;3888:10;4382:347;3888:10;;172:16477;;;;;;;;;;;;4684:17;172:16477;4684:17;;172:16477;;;;;;;;:::i;:::-;3888:10;172:16477;;4501:15;4424:294;;;172:16477;4424:294;172:16477;4424:294;;172:16477;4581:12;172:16477;4424:294;;172:16477;;;4424:294;;;172:16477;;4424:294;;172:16477;4382:347;:::i;:::-;172:16477;;;;;;4501:15;;172:16477;;;;;4581:12;172:16477;;;;;;;;3888:10;4747:153;;172:16477;;;;4332:37;4382:347;4332:37;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;172:16477;;;;;;;;;;4238:50;;;;:::i;:::-;172:16477;;;;4238:50;172:16477;;;;;;-1:-1:-1;;;172:16477:3;;;;;;;;;;;;;-1:-1:-1;;;172:16477:3;;;;;;;4135:34;;;;;;;;;;;;;;;;;:::i;:::-;;;172:16477;;;;;4135:34;;;;172:16477;;;;4135:34;;;;;172:16477;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;172:16477:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;172:16477:3;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;;;172:16477:3;;;;;;;;;;;;;;;;;;;;;;;;;15918:8;172:16477;;;;;;;;;;;;;-1:-1:-1;;172:16477:3;;;;;;1511:25;172:16477;1511:25;;;;;;172:16477;1511:25;;:::i;172:16477::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15459:16;172:16477;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15459:16;172:16477;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;172:16477:3;;;;;;-1:-1:-1;;;;;172:16477:3;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;;;;172:16477:3;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;172:16477:3;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;172:16477:3;;;;;;;;;;;:::i;:::-;;;;;;;;2449:11;172:16477;;2435:10;:25;:48;;;;172:16477;2413:112;;;:::i;:::-;11626:57;11634:29;;;;11626:57;:::i;:::-;172:16477;11701:10;11713:16;;;;;;172:16477;;;;11731:3;172:16477;;;;;11823:8;;;;;;;:::i;:::-;;:::i;:::-;172:16477;;;;11814:8;172:16477;;;;;;;;;;11810:87;;11731:3;172:16477;;;;;11928:8;;;;;;;:::i;:::-;172:16477;;;;11918:9;172:16477;;;;;;;;;;11917:20;11913:129;;11731:3;12150:9;;;;;;;;:::i;:::-;172:16477;12236:11;;;;;:::i;:::-;12285:19;;172:16477;12285:19;;;;;:::i;:::-;172:16477;;;;;;;;:::i;:::-;;;;;12082:283;;172:16477;;12082:283;;172:16477;;;;;;;:::i;:::-;;12082:283;;172:16477;;12082:283;;172:16477;12334:15;172:16477;12082:283;;172:16477;;;;;;12070:8;;;;;;;:::i;:::-;172:16477;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12082:283;;172:16477;;;;;;;;;;;;;;;;2449:11;172:16477;;;:::i;:::-;;12082:283;;172:16477;;;;-1:-1:-1;;;;;172:16477:3;;;;;;;;;;:::i;:::-;;;;;;;;;11731:3;172:16477;;;;;;;;;;;;;;;;;;11731:3;172:16477;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12082:283;;172:16477;;;;;12082:283;172:16477;;;;11731:3;:::i;:::-;11701:10;;172:16477;;;;-1:-1:-1;172:16477:3;;;;;;;;;;;;;;;;;;;-1:-1:-1;;172:16477:3;;;;;;;;;;11731:3;172:16477;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;172:16477:3;;;;;;;;;;11913:129;11958:23;11972:8;;;;;;;:::i;:::-;11958:23;:::i;:::-;172:16477;;;;;12010:8;;;;;;;:::i;:::-;172:16477;;;;;;;;;;;;;;;;;;;11913:129;;;11810:87;11872:8;;;;;;;;:::i;:::-;;:::i;:::-;11810:87;;2435:48;-1:-1:-1;172:16477:3;;-1:-1:-1;;;;;172:16477:3;2435:10;2464:19;2435:48;;172:16477;;;;;;-1:-1:-1;;172:16477:3;;;;-1:-1:-1;;;;;172:16477:3;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;172:16477:3;;;;;;-1:-1:-1;;;;;172:16477:3;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;;;;172:16477:3;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;172:16477:3;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;172:16477:3;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;172:16477:3;;;;;;;;;;;:::i;:::-;;;;;;;2449:11;172:16477;;2435:10;:25;:48;;;;172:16477;2413:112;;;:::i;:::-;8626:57;172:16477;8634:29;;;8626:57;:::i;:::-;8694:61;172:16477;8718:17;8702:33;;8694:61;:::i;:::-;8766:58;172:16477;8790:14;8774:30;;8766:58;:::i;:::-;172:16477;;;;;-1:-1:-1;;;8848:34:3;;172:16477;;-1:-1:-1;;;;;172:16477:3;;;;8848:34;172:16477;8848:34;172:16477;8848:34;;;:::i;:::-;;;;;;;;;;;172:16477;8848:34;;;;172:16477;8901:9;8893:50;8901:9;;:16;;8893:50;:::i;:::-;8956;;;;;;172:16477;;;;;;;;;;;;8956:50;;172:16477;;8956:50;172:16477;8956:50;;;:::i;:::-;;;;;;;;;;;172:16477;-1:-1:-1;172:16477:3;;;;;-1:-1:-1;;;9057:28:3;;172:16477;;;9057:28;;172:16477;;;;;;;;;;-1:-1:-1;;;;;172:16477:3;9057:28;;;;;;172:16477;9057:28;;;;;172:16477;9103:10;172:16477;9103:10;9115:16;;;;;;172:16477;;;;9133:3;9183:8;;;;172:16477;9183:8;;:::i;:::-;9210:9;;172:16477;9210:9;172:16477;9210:9;;:::i;:::-;172:16477;9238:13;;172:16477;9238:13;172:16477;9238:13;;:::i;:::-;9270:10;;;;;172:16477;9270:10;172:16477;9270:10;;:::i;:::-;172:16477;;;;;;;;;;;9686:9;172:16477;;;;;;;;;;9682:73;;9133:3;172:16477;;;;;;;;;;9821:8;172:16477;;;;;;;;;;9820:15;9816:102;;9133:3;172:16477;;;;;;:::i;:::-;;;;9982:235;172:16477;9982:235;;172:16477;2449:11;172:16477;9982:235;;172:16477;;;:::i;:::-;;9982:235;;172:16477;;;;;9982:235;;172:16477;10190:15;172:16477;9982:235;;172:16477;;;-1:-1:-1;;;;;172:16477:3;;;;;;;;;;;;;;;-1:-1:-1;;172:16477:3;;;;;;;;;;9982:235;172:16477;9982:235;;172:16477;;;;;;9982:235;;172:16477;;;;;;;;;;;2449:11;172:16477;;;:::i;:::-;;9982:235;;172:16477;;;;-1:-1:-1;;;;;172:16477:3;;;;;;;;;;:::i;:::-;;;;;;9133:3;172:16477;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9982:235;;172:16477;;;;;9982:235;172:16477;;;;;;;-1:-1:-1;;;;;172:16477:3;;;;;;;;;;;;;;;;10315:998;;172:16477;9133:3;;;;;;;;;;;;:::i;:::-;9103:10;;10315:998;172:16477;;;;;;;;;10384:25;172:16477;;;;;;;10384:25;;:::i;:::-;172:16477;;:::i;:::-;10449:19;172:16477;;;;9057:28;10488:24;;172:16477;;10449:159;:63;;;;:159;:63;;;10533:46;;;;:::i;:::-;10583:4;172:16477;;;;;;;;;;;;;;;10449:159;;172:16477;9057:28;10488:24;172:16477;10488:24;;172:16477;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;172:16477:3;;;;;10650:433;;172:16477;;10650:433;;172:16477;;;;10650:433;;172:16477;;10650:433;;172:16477;;;;10650:433;;172:16477;;;2449:11;172:16477;10650:433;;172:16477;;;:::i;:::-;;10650:433;;172:16477;;;;10650:433;;172:16477;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;172:16477:3;;;;;;;;;10650:433;;172:16477;;;;;;10650:433;;172:16477;2449:11;172:16477;;;;;;;10650:433;;172:16477;-1:-1:-1;;;;;172:16477:3;;;;;-1:-1:-1;;;;;172:16477:3;;;;;10650:433;;172:16477;;;;;;10650:433;;172:16477;;;;;;10650:433;;172:16477;;;;;;;;;;;;;;;:::i;:::-;;10650:433;;172:16477;;;;-1:-1:-1;;;;;172:16477:3;;;;;;;;;;:::i;:::-;;;;;;10449:159;172:16477;;;;;;;;;;;;;;;9133:3;172:16477;;;;;;;11105:196;172:16477;;;;;;;9686:9;172:16477;;;;;;;;;;;;;;;;;;;;;;;;;;;10650:433;172:16477;;;;;9057:28;11237:18;172:16477;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;172:16477:3;;11105:196;;;10315:998;;;;;;;;;;;172:16477;;;;-1:-1:-1;172:16477:3;;;;;;;;;;;;;;;;;;;-1:-1:-1;;172:16477:3;;;;;;;9133:3;172:16477;;;;;;;;;;;9686:9;172:16477;11105:196;172:16477;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;172:16477:3;;;;;;;;;;;;;;;;;;10449:159;;;;;;172:16477;-1:-1:-1;;;172:16477:3;;;;;;;;;;;;;;-1:-1:-1;172:16477:3;;;;;;;;;;;;;;;;;;;-1:-1:-1;;172:16477:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;172:16477:3;;;;9816:102;9852:18;;;:::i;:::-;172:16477;;;;;;;;;;;;;;;;;;;;;;;;;9816:102;;;9682:73;9738:4;;;:::i;:::-;9682:73;;9057:28;;;172:16477;9057:28;172:16477;9057:28;;;;;;;:::i;:::-;;;;;;8956:50;;;;:::i;:::-;172:16477;;;;8956:50;172:16477;;;8848:34;;;;172:16477;8848:34;;172:16477;8848:34;;;;;;172:16477;8848:34;;;:::i;:::-;;;172:16477;;;;;8848:34;;;;;;;-1:-1:-1;8848:34:3;;2435:48;-1:-1:-1;172:16477:3;;-1:-1:-1;;;;;172:16477:3;2435:10;2464:19;2435:48;;172:16477;;;;;;;;;;;;;;;;;15771:7;172:16477;;;;;;;;;;15771:7;172:16477;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;172:16477:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16071:7;172:16477;;;;;;;;;;;;;-1:-1:-1;;172:16477:3;;;;-1:-1:-1;;;;;172:16477:3;;:::i;:::-;;;;;16242:9;172:16477;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;172:16477:3;;;;-1:-1:-1;;;;;172:16477:3;;:::i;:::-;;;;;;;;;;;;;;;;;1346:46;;172:16477;1346:46;172:16477;1346:46;;;172:16477;;;1346:46;172:16477;1346:46;;;:::i;:::-;172:16477;1346:46;172:16477;1346:46;;172:16477;1346:46;;172:16477;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;172:16477:3;;;;;;-1:-1:-1;;;;;172:16477:3;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;172:16477:3;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;172:16477:3;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;172:16477:3;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;172:16477:3;;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;;;172:16477:3;;;;;;;;;;;:::i;:::-;;;;;;;2449:11;172:16477;;2435:10;:25;:48;;;;172:16477;2413:112;;;:::i;:::-;5343:57;172:16477;5351:29;172:16477;5351:29;;5343:57;:::i;:::-;5411:59;172:16477;5435:15;172:16477;5419:31;;5411:59;:::i;:::-;5481:67;172:16477;5505:23;172:16477;5489:39;;5481:67;:::i;:::-;5559:58;172:16477;5583:14;172:16477;5567:30;;5559:58;:::i;:::-;172:16477;;;;;-1:-1:-1;;;5641:34:3;;172:16477;;-1:-1:-1;;;;;172:16477:3;;;;5641:34;172:16477;5641:34;172:16477;5641:34;;;:::i;:::-;;;;;;;;;;;172:16477;;5641:34;;;172:16477;5694:9;5686:50;5694:9;;:16;;5686:50;:::i;:::-;5749;;;;;;172:16477;;;;;;;;;;;;5749:50;;172:16477;;5749:50;172:16477;5749:50;;;:::i;:::-;;;;;;;;;;;172:16477;-1:-1:-1;172:16477:3;;;;;-1:-1:-1;;;5850:28:3;;172:16477;;;5850:28;;172:16477;;;;;;;;;;-1:-1:-1;;;;;172:16477:3;5850:28;;;;;;172:16477;5850:28;172:16477;5850:28;;;172:16477;5896:10;172:16477;5896:10;5926:3;172:16477;5908:16;;;;;;;5977:8;;;;172:16477;5977:8;;:::i;:::-;6004:9;;;172:16477;6004:9;172:16477;6004:9;;:::i;:::-;172:16477;6032:11;;;172:16477;6032:11;172:16477;6032:11;;:::i;:::-;6062:19;;;;172:16477;6062:19;172:16477;6062:19;;:::i;:::-;172:16477;6100:10;;172:16477;6100:10;172:16477;6100:10;;:::i;:::-;172:16477;;;-1:-1:-1;;;;;172:16477:3;;;;6549:8;172:16477;;;;;;;;;;;;;;6545:71;;5926:3;172:16477;;;-1:-1:-1;;;;;172:16477:3;;;;6683:9;172:16477;;;;;;;;6682:16;6678:105;;5926:3;172:16477;;;;;:::i;:::-;;;;6847:243;172:16477;6847:243;;172:16477;;;6847:243;;172:16477;;;;;;:::i;:::-;;6847:243;;172:16477;;6847:243;;172:16477;;;7063:15;172:16477;6847:243;;172:16477;;;;-1:-1:-1;;;;;172:16477:3;;;;;;;;;;;;;;;-1:-1:-1;;172:16477:3;;;;;;;;;;6847:243;172:16477;6847:243;;172:16477;;;;;;6847:243;;172:16477;;;;;;;;;;;2449:11;172:16477;;;:::i;:::-;;6847:243;;172:16477;;;;-1:-1:-1;;;;;172:16477:3;;;;;;;;;;:::i;:::-;;;;;;5926:3;172:16477;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6847:243;;172:16477;;;;;6847:243;172:16477;;;;;;;-1:-1:-1;;;;;172:16477:3;;;;;;;;;;;;;;;;7188:1039;;172:16477;5926:3;;;;;;;;;;;;;:::i;:::-;5896:10;;7188:1039;172:16477;;;;;;;;;7257:25;172:16477;;;;;;;7257:25;;:::i;172:16477::-;7322:19;172:16477;;;;;7361:24;;172:16477;;7322:159;:63;;;;:159;:63;;;7406:46;;;;:::i;:::-;7456:4;172:16477;;;;;;;;;;;;;;;7322:159;;172:16477;;7361:24;172:16477;7361:24;;172:16477;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;172:16477:3;;;;;7523:441;;172:16477;;7523:441;;172:16477;;;;7523:441;;172:16477;;7523:441;;172:16477;;;;7523:441;;172:16477;;;;;7523:441;;172:16477;;;;;;:::i;:::-;;7523:441;;172:16477;7523:441;;;;172:16477;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;172:16477:3;;;;;;;;;7523:441;;172:16477;;;;;;7523:441;;172:16477;2449:11;172:16477;;;;;;;7523:441;;172:16477;-1:-1:-1;;;;;172:16477:3;;;;;-1:-1:-1;;;;;172:16477:3;;;;;7523:441;;172:16477;;;;;;7523:441;;172:16477;;;;;;7523:441;;172:16477;;;;;;;;;;;;;;;:::i;:::-;;7523:441;;172:16477;;;;-1:-1:-1;;;;;172:16477:3;;;;;;;;;;:::i;:::-;;;;;;7322:159;172:16477;;;;;;;;;;;;;;7523:441;5926:3;172:16477;;;;;;;;7986:229;172:16477;;;;;6683:9;172:16477;;;;;;;;;;;;;;;;;;;;;;;;;;;7523:441;172:16477;;;;;;8151:18;172:16477;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;172:16477:3;;7986:229;;;7188:1039;;;;;;;;;;;172:16477;;;;-1:-1:-1;172:16477:3;;;;;;;;;;;;;;;;;;;-1:-1:-1;;172:16477:3;;;;;;;5926:3;172:16477;;;;;;7986:229;172:16477;;;;;6683:9;172:16477;7523:441;172:16477;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;7322:159;;;;;;172:16477;;;;-1:-1:-1;172:16477:3;;;;;;;;;;;;;;;;;;;-1:-1:-1;;172:16477:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;6678:105;6715:19;;;:::i;:::-;172:16477;;;-1:-1:-1;;;;;172:16477:3;;;;6683:9;172:16477;;;;;;;;-1:-1:-1;;172:16477:3;;;;;6678:105;;6545:71;6599:4;;;:::i;:::-;6545:71;;5908:16;172:16477;;;;5850:28;;;172:16477;5850:28;172:16477;5850:28;;;;;;;:::i;:::-;172:16477;5850:28;;;;5749:50;;;;:::i;:::-;;;;5641:34;;;;172:16477;5641:34;;172:16477;5641:34;;;;;;172:16477;5641:34;;;:::i;:::-;;;172:16477;;;;;5641:34;;;;;;;-1:-1:-1;5641:34:3;;2435:48;-1:-1:-1;172:16477:3;;-1:-1:-1;;;;;172:16477:3;2435:10;2464:19;2435:48;;172:16477;;;;;;;;;;;;;;;2883:10;172:16477;;;;;;2969:16;172:16477;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;2969:16;:::i;:::-;172:16477;;;;;;;2947:124;2969:39;;;2947:124;:::i;:::-;3082:37;3090:10;;;3082:37;:::i;:::-;2883:10;172:16477;;;;;;3132:313;172:16477;;;;;;;;;;:::i;:::-;2883:10;172:16477;;3251:15;3174:260;;;172:16477;3174:260;172:16477;3174:260;;172:16477;3331:12;172:16477;3174:260;;172:16477;;;;3174:260;;172:16477;;;;3174:260;;172:16477;3132:313;:::i;:::-;172:16477;;3251:15;;172:16477;;;;;3331:12;172:16477;;;;;;;;;;3463:143;172:16477;2883:10;3463:143;;172:16477;;;;;;;;;;-1:-1:-1;;172:16477:3;;;;;;-1:-1:-1;;;;;172:16477:3;;;;;;;;;;;:::i;:::-;;;-1:-1:-1;;;;;172:16477:3;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;;;;172:16477:3;;;;;;;;;;;:::i;:::-;-1:-1:-1;;2449:11:3;172:16477;-1:-1:-1;;;;;172:16477:3;2435:10;:25;:48;;;;172:16477;2413:112;;;:::i;:::-;12644:57;12652:29;;;12644:57;:::i;:::-;172:16477;;12731:16;;;;;;172:16477;;;;12749:3;-1:-1:-1;;;;;12843:8:3;;;;;;:::i;:::-;172:16477;;;;12833:9;172:16477;;;;;;;;;;12829:89;;12749:3;-1:-1:-1;;;;;12948:8:3;;;;;;:::i;:::-;172:16477;;;;12939:8;172:16477;;;;;;;;;;12938:19;12934:126;;12749:3;13168:9;;;;;;:::i;:::-;172:16477;;;;;;:::i;:::-;;;;;13100:267;;172:16477;;;;13100:267;;2449:11;172:16477;;;;:::i;:::-;;13100:267;;172:16477;;;13100:267;;;172:16477;13336:15;172:16477;13100:267;;172:16477;-1:-1:-1;;;;;13088:8:3;;;;;;:::i;:::-;172:16477;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2449:11;172:16477;;;:::i;:::-;;13100:267;;172:16477;;;;-1:-1:-1;;;;;172:16477:3;;;;;;;;;;:::i;:::-;;;;;;;;;12749:3;172:16477;;;;;;;;;;;;;;;;;;12749:3;172:16477;;;;;;;;;;;;;;;;;;;;;;;;;;;13100:267;;;172:16477;;;;;13100:267;172:16477;;;;12749:3;:::i;:::-;12719:10;;172:16477;;;;-1:-1:-1;172:16477:3;;;;;;;;;;;;;;;;;;-1:-1:-1;;172:16477:3;;;;;;;;;;;;;12749:3;172:16477;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;12934:126;12978:22;12991:8;;;;;;:::i;:::-;12978:22;:::i;:::-;-1:-1:-1;;;;;13028:8:3;;;;;;:::i;:::-;172:16477;;;;;;;;;;;;;;;;;;;12934:126;;;12829:89;12893:8;;;;;;;:::i;:::-;;:::i;:::-;12829:89;;2435:48;-1:-1:-1;172:16477:3;;-1:-1:-1;;;;;172:16477:3;2435:10;2464:19;2435:48;;172:16477;;;;;;;;;;;;;-1:-1:-1;;;;;172:16477:3;;;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;172:16477:3;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;172:16477:3;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;172:16477:3;;;;;;:::o;:::-;;;;;;;-1:-1:-1;;;;;172:16477:3;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;172:16477:3;;;;;;;:::o;:::-;;;;;;-1:-1:-1;172:16477:3;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:::o;:::-;;;;;-1:-1:-1;172:16477:3;;;;-1:-1:-1;172:16477:3;;-1:-1:-1;172:16477:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;172:16477:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;172:16477:3;;;;;-1:-1:-1;172:16477:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;;;172:16477:3;;;;;;;;;;;;;;;;1511:25;172:16477;;;;;;1511:25;-1:-1:-1;172:16477:3;;;;-1:-1:-1;172:16477:3;:::o;:::-;;;;;;;;;;;;;1543:24;172:16477;;;;;;1543:24;-1:-1:-1;172:16477:3;;;;-1:-1:-1;172:16477:3;:::o;:::-;;;;;;;;-1:-1:-1;172:16477:3;;;-1:-1:-1;172:16477:3;;;;;-1:-1:-1;172:16477:3;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;172:16477:3;;;;;;;;;;;;;;;;;-1:-1:-1;;;172:16477:3;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;172:16477:3;;;;;;;;;;;;-1:-1:-1;;;172:16477:3;;;;;;;;;;-1:-1:-1;;;172:16477:3;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;172:16477:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;172:16477:3;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;172:16477:3;;;;;;;;-1:-1:-1;;172:16477:3;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;172:16477:3;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;172:16477:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;172:16477:3;;;;;;;;;;;;-1:-1:-1;;;172:16477:3;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;172:16477:3;;;;;;;;;;;;-1:-1:-1;;;172:16477:3;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;172:16477:3;;;;;;;;;;;;-1:-1:-1;;;172:16477:3;;;;;;;;-1:-1:-1;;172:16477:3;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;-1:-1:-1;;;;;172:16477:3;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;172:16477:3;;;;;;;;;;;;;;;:::o;:::-;12978:7;172:16477;;-1:-1:-1;;;172:16477:3;;;;;;;;;;;12978:7;172:16477;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6715:8;172:16477;;-1:-1:-1;;;172:16477:3;;;;;;;;;;;6715:8;172:16477;;:::i;:::-;;;;-1:-1:-1;;;;;172:16477:3;;;;;;;;;;;-1:-1:-1;;172:16477:3;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;172:16477:3;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;-1:-1:-1;;;;;172:16477:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;-1:-1:-1;;;;;172:16477:3;;;;;;;;;;-1:-1:-1;;;172:16477:3;;;;:::o;13453:340::-;13529:1;13553:3;13536:8;172:16477;;13532:19;;;;;;;13577:11;;;:::i;:::-;172:16477;;-1:-1:-1;;;;;172:16477:3;;;;;;;;;;;;;;13577:19;;13573:202;;13553:3;;;;;;;;:::i;:::-;13520:10;;13573:202;172:16477;;-1:-1:-1;172:16477:3;;-1:-1:-1;;172:16477:3;;;;;;;;;;;13617:43;13631:29;;13617:11;13631:29;;:::i;:::-;172:16477;;;;;;13617:11;;:::i;:43::-;172:16477;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;13529:1;172:16477;13712:9;172:16477;;;13529:1;172:16477;;;;;;;;13453:340::o;172:16477::-;;;;13529:1;172:16477;;;;;13529:1;172:16477;13532:19;;;;;13453:340::o;13859:332::-;13934:1;13957:3;13941:7;172:16477;;13937:18;;;;;;;13981:10;;;:::i;:::-;172:16477;;-1:-1:-1;;;;;172:16477:3;;;;;;;;;;;;;;13981:18;;13977:196;;13957:3;;;;;;;;:::i;:::-;13925:10;;13977:196;172:16477;;-1:-1:-1;172:16477:3;;-1:-1:-1;;172:16477:3;;;;;;;;;;;14020:40;14033:27;;14020:10;14033:27;;:::i;:::-;172:16477;;;;;;14020:10;;:::i;:40::-;172:16477;;;;;;;;;;;;:::i;:::-;;13934:1;172:16477;14111:8;172:16477;;;13934:1;172:16477;;;;;;;;13859:332::o;172:16477::-;;;;;:::i;:::-;;;;;;;:::o;:::-;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o"},"methodIdentifiers":{"admin()":"f851a440","badBots(uint256)":"eaca6a78","botAnalyzer()":"c35fc524","botEvidenceProof(address)":"c32d2a02","botRegistry(address)":"20bae1cb","executeTrade(uint256)":"02d2838b","executeTradeWithPriceProof(uint256,bytes[],bytes32)":"9cda8908","flagBadBots(address[],uint256[],string[])":"00d2798b","flagBadBotsWithPythProof(address[],uint256[],string[],string[],bytes[],bytes32)":"382ec63f","flagGoodBots(address[],uint256[],string[],uint256[])":"472279a2","flagGoodBotsWithPythProof(address[],uint256[],string[],uint256[],string[],bytes[],bytes32)":"0d7555cc","getBadBots()":"36786d02","getBadBotsCount()":"31eba1af","getBotEvidence(address)":"4d4ca309","getBotInfo(address)":"fb4aaf0f","getGoodBots()":"d739080d","getGoodBotsCount()":"88bbafb2","getUserTrades(address)":"927c7742","goodBots(uint256)":"81d1ae62","isBadBotAddress(address)":"d90c410f","isBot(address)":"3bbac579","isGoodBotAddress(address)":"26463b63","pyth()":"f98d06f0","setBotAnalyzer(address)":"aa2ca71b","unflagBot(address)":"fed20c78","userTrades(address,uint256)":"b1b1ffab"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pythContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_botAnalyzer\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"score\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"riskLevel\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int64\",\"name\":\"priceUsed\",\"type\":\"int64\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reactionTimeMs\",\"type\":\"uint256\"}],\"name\":\"BadBotFlagged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enum BotDetectorWithPyth.BotCategory\",\"name\":\"previousCategory\",\"type\":\"uint8\"}],\"name\":\"BotUnflagged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"score\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"botType\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liquidityProvided\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int64\",\"name\":\"priceUsed\",\"type\":\"int64\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reactionTimeMs\",\"type\":\"uint256\"}],\"name\":\"GoodBotFlagged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int64\",\"name\":\"btcPrice\",\"type\":\"int64\"}],\"name\":\"TradeExecuted\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"badBots\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"botAnalyzer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"botEvidenceProof\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tradeTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pricePublishTime\",\"type\":\"uint256\"},{\"internalType\":\"int64\",\"name\":\"priceAtTrade\",\"type\":\"int64\"},{\"internalType\":\"uint256\",\"name\":\"reactionTimeMs\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"botScore\",\"type\":\"uint256\"},{\"internalType\":\"enum BotDetectorWithPyth.BotCategory\",\"name\":\"category\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"botType\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"liquidityProvided\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"botRegistry\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"isFlagged\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"score\",\"type\":\"uint256\"},{\"internalType\":\"enum BotDetectorWithPyth.BotCategory\",\"name\":\"category\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"botType\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"liquidityProvided\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"flaggedAt\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"executeTrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes[]\",\"name\":\"priceUpdateData\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes32\",\"name\":\"priceId\",\"type\":\"bytes32\"}],\"name\":\"executeTradeWithPriceProof\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"users\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"scores\",\"type\":\"uint256[]\"},{\"internalType\":\"string[]\",\"name\":\"riskLevels\",\"type\":\"string[]\"}],\"name\":\"flagBadBots\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"users\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"scores\",\"type\":\"uint256[]\"},{\"internalType\":\"string[]\",\"name\":\"riskLevels\",\"type\":\"string[]\"},{\"internalType\":\"string[]\",\"name\":\"reasons\",\"type\":\"string[]\"},{\"internalType\":\"bytes[]\",\"name\":\"priceUpdateData\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes32\",\"name\":\"priceId\",\"type\":\"bytes32\"}],\"name\":\"flagBadBotsWithPythProof\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"users\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"scores\",\"type\":\"uint256[]\"},{\"internalType\":\"string[]\",\"name\":\"botTypes\",\"type\":\"string[]\"},{\"internalType\":\"uint256[]\",\"name\":\"liquidityAmounts\",\"type\":\"uint256[]\"}],\"name\":\"flagGoodBots\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"users\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"scores\",\"type\":\"uint256[]\"},{\"internalType\":\"string[]\",\"name\":\"botTypes\",\"type\":\"string[]\"},{\"internalType\":\"uint256[]\",\"name\":\"liquidityAmounts\",\"type\":\"uint256[]\"},{\"internalType\":\"string[]\",\"name\":\"reasons\",\"type\":\"string[]\"},{\"internalType\":\"bytes[]\",\"name\":\"priceUpdateData\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes32\",\"name\":\"priceId\",\"type\":\"bytes32\"}],\"name\":\"flagGoodBotsWithPythProof\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBadBots\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getBadBotsCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getBotEvidence\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tradeTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pricePublishTime\",\"type\":\"uint256\"},{\"internalType\":\"int64\",\"name\":\"priceAtTrade\",\"type\":\"int64\"},{\"internalType\":\"uint256\",\"name\":\"reactionTimeMs\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"botScore\",\"type\":\"uint256\"},{\"internalType\":\"enum BotDetectorWithPyth.BotCategory\",\"name\":\"category\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"botType\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"liquidityProvided\",\"type\":\"uint256\"}],\"internalType\":\"struct BotDetectorWithPyth.BotEvidence\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getBotInfo\",\"outputs\":[{\"components\":[{\"internalType\":\"bool\",\"name\":\"isFlagged\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"score\",\"type\":\"uint256\"},{\"internalType\":\"enum BotDetectorWithPyth.BotCategory\",\"name\":\"category\",\"type\":\"uint8\"},{\"internalType\":\"string\",\"name\":\"botType\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"liquidityProvided\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"flaggedAt\",\"type\":\"uint256\"}],\"internalType\":\"struct BotDetectorWithPyth.BotInfo\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getGoodBots\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getGoodBotsCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserTrades\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"int64\",\"name\":\"btcPriceAtTrade\",\"type\":\"int64\"},{\"internalType\":\"uint64\",\"name\":\"pricePublishTime\",\"type\":\"uint64\"}],\"internalType\":\"struct BotDetectorWithPyth.TradeRecord[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"goodBots\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"isBadBotAddress\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"isBot\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"isGoodBotAddress\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pyth\",\"outputs\":[{\"internalType\":\"contract IPyth\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newAnalyzer\",\"type\":\"address\"}],\"name\":\"setBotAnalyzer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"unflagBot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"userTrades\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"int64\",\"name\":\"btcPriceAtTrade\",\"type\":\"int64\"},{\"internalType\":\"uint64\",\"name\":\"pricePublishTime\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"executeTrade(uint256)\":{\"notice\":\"Execute a trade (basic version)\"},\"executeTradeWithPriceProof(uint256,bytes[],bytes32)\":{\"notice\":\"Execute a trade with Pyth price proof\"},\"flagBadBots(address[],uint256[],string[])\":{\"notice\":\"Regular flagging for bad bots (cheaper, no Pyth proof)\"},\"flagBadBotsWithPythProof(address[],uint256[],string[],string[],bytes[],bytes32)\":{\"notice\":\"Flag BAD BOTS with Pyth proof (Manipulative & Front-running)\"},\"flagGoodBots(address[],uint256[],string[],uint256[])\":{\"notice\":\"Regular flagging for good bots (cheaper, no Pyth proof)\"},\"flagGoodBotsWithPythProof(address[],uint256[],string[],uint256[],string[],bytes[],bytes32)\":{\"notice\":\"Flag GOOD BOTS with Pyth proof (Market Makers & Arbitrage)\"},\"getBadBots()\":{\"notice\":\"Get all bad bots\"},\"getBadBotsCount()\":{\"notice\":\"Get bad bots count\"},\"getBotEvidence(address)\":{\"notice\":\"Get bot evidence\"},\"getBotInfo(address)\":{\"notice\":\"Get bot information\"},\"getGoodBots()\":{\"notice\":\"Get all good bots\"},\"getGoodBotsCount()\":{\"notice\":\"Get good bots count\"},\"getUserTrades(address)\":{\"notice\":\"Get user's trade history\"},\"isBadBotAddress(address)\":{\"notice\":\"Check if user is a bad bot\"},\"isBot(address)\":{\"notice\":\"Check if user is flagged and get details\"},\"isGoodBotAddress(address)\":{\"notice\":\"Check if user is a good bot\"},\"setBotAnalyzer(address)\":{\"notice\":\"Set bot analyzer address\"},\"unflagBot(address)\":{\"notice\":\"Unflag a user completely\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BotDetector.sol\":\"BotDetectorWithPyth\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@pythnetwork/pyth-sdk-solidity/IPyth.sol\":{\"keccak256\":\"0xada6a1f4898b056d2804409ecad466b786dc6a12bc6f8f247e7f1471c1b86fcd\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ecee3c205896236fc11bfb1367f033353448fa462b08e5212a32e767f72022c9\",\"dweb:/ipfs/QmeEQpRRza2Swm2gCCC61TDxQ2GNLjqPhdtbSznADMuMni\"]},\"@pythnetwork/pyth-sdk-solidity/IPythEvents.sol\":{\"keccak256\":\"0xd67239becd2c39bd9d065830be24e70606f5747ab31b8818bea849d09ac17ddc\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://e719bd2d8c1d8d46713aeb700dd6b5ddd766a77830ea9ae3cc9327f67ed775d1\",\"dweb:/ipfs/QmNQYyRVFLEvLsCSTkHkAemTvvZm4CzLN7hUdMidMcBS7u\"]},\"@pythnetwork/pyth-sdk-solidity/PythStructs.sol\":{\"keccak256\":\"0x474436bf0d558cc9b2c00a9d0ce318147acdf7963f34ef4acadb9248e65bbc7b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://2b8f9bd9de35e67c7bdbf04d8c2e771718fcc8666456ca5f92dbd914e4a5f2b3\",\"dweb:/ipfs/QmNP3ShBYRp4RiVbAudMB7rNHAqgtwn8pPBzb8JTUaViRh\"]},\"contracts/BotDetector.sol\":{\"keccak256\":\"0x67708932310fcaa5bad30fbbf2290bd8746487f47b8e5169187b8f4e176b0393\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7f0c845539296fe97cd6716e887e7aabbaeb0408566cf5dd7c9859447fc601c5\",\"dweb:/ipfs/QmdYzS1QkMHPQAkuViLZAoPKcQZzj8zSzjVCxpVg3HsUnN\"]}},\"version\":1}"}}}}}