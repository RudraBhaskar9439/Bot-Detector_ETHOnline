{"id":"3e8a3be774b0a84bca3b272b620fa3ef","_format":"hh-sol-build-info-1","solcVersion":"0.8.19","solcLongVersion":"0.8.19+commit.7dd6d404","input":{"language":"Solidity","sources":{"@pythnetwork/pyth-sdk-solidity/IPyth.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.0;\n\nimport \"./PythStructs.sol\";\nimport \"./IPythEvents.sol\";\n\n/// @title Consume prices from the Pyth Network (https://pyth.network/).\n/// @dev Please refer to the guidance at https://docs.pyth.network/documentation/pythnet-price-feeds/best-practices for how to consume prices safely.\n/// @author Pyth Data Association\ninterface IPyth is IPythEvents {\n    /// @notice Returns the price of a price feed without any sanity checks.\n    /// @dev This function returns the most recent price update in this contract without any recency checks.\n    /// This function is unsafe as the returned price update may be arbitrarily far in the past.\n    ///\n    /// Users of this function should check the `publishTime` in the price to ensure that the returned price is\n    /// sufficiently recent for their application. If you are considering using this function, it may be\n    /// safer / easier to use `getPriceNoOlderThan`.\n    /// @return price - please read the documentation of PythStructs.Price to understand how to use this safely.\n    function getPriceUnsafe(\n        bytes32 id\n    ) external view returns (PythStructs.Price memory price);\n\n    /// @notice Returns the price that is no older than `age` seconds of the current time.\n    /// @dev This function is a sanity-checked version of `getPriceUnsafe` which is useful in\n    /// applications that require a sufficiently-recent price. Reverts if the price wasn't updated sufficiently\n    /// recently.\n    /// @return price - please read the documentation of PythStructs.Price to understand how to use this safely.\n    function getPriceNoOlderThan(\n        bytes32 id,\n        uint age\n    ) external view returns (PythStructs.Price memory price);\n\n    /// @notice Returns the exponentially-weighted moving average price of a price feed without any sanity checks.\n    /// @dev This function returns the same price as `getEmaPrice` in the case where the price is available.\n    /// However, if the price is not recent this function returns the latest available price.\n    ///\n    /// The returned price can be from arbitrarily far in the past; this function makes no guarantees that\n    /// the returned price is recent or useful for any particular application.\n    ///\n    /// Users of this function should check the `publishTime` in the price to ensure that the returned price is\n    /// sufficiently recent for their application. If you are considering using this function, it may be\n    /// safer / easier to use either `getEmaPrice` or `getEmaPriceNoOlderThan`.\n    /// @return price - please read the documentation of PythStructs.Price to understand how to use this safely.\n    function getEmaPriceUnsafe(\n        bytes32 id\n    ) external view returns (PythStructs.Price memory price);\n\n    /// @notice Returns the exponentially-weighted moving average price that is no older than `age` seconds\n    /// of the current time.\n    /// @dev This function is a sanity-checked version of `getEmaPriceUnsafe` which is useful in\n    /// applications that require a sufficiently-recent price. Reverts if the price wasn't updated sufficiently\n    /// recently.\n    /// @return price - please read the documentation of PythStructs.Price to understand how to use this safely.\n    function getEmaPriceNoOlderThan(\n        bytes32 id,\n        uint age\n    ) external view returns (PythStructs.Price memory price);\n\n    /// @notice Update price feeds with given update messages.\n    /// This method requires the caller to pay a fee in wei; the required fee can be computed by calling\n    /// `getUpdateFee` with the length of the `updateData` array.\n    /// Prices will be updated if they are more recent than the current stored prices.\n    /// The call will succeed even if the update is not the most recent.\n    /// @dev Reverts if the transferred fee is not sufficient or the updateData is invalid.\n    /// @param updateData Array of price update data.\n    function updatePriceFeeds(bytes[] calldata updateData) external payable;\n\n    /// @notice Wrapper around updatePriceFeeds that rejects fast if a price update is not necessary. A price update is\n    /// necessary if the current on-chain publishTime is older than the given publishTime. It relies solely on the\n    /// given `publishTimes` for the price feeds and does not read the actual price update publish time within `updateData`.\n    ///\n    /// This method requires the caller to pay a fee in wei; the required fee can be computed by calling\n    /// `getUpdateFee` with the length of the `updateData` array.\n    ///\n    /// `priceIds` and `publishTimes` are two arrays with the same size that correspond to senders known publishTime\n    /// of each priceId when calling this method. If all of price feeds within `priceIds` have updated and have\n    /// a newer or equal publish time than the given publish time, it will reject the transaction to save gas.\n    /// Otherwise, it calls updatePriceFeeds method to update the prices.\n    ///\n    /// @dev Reverts if update is not needed or the transferred fee is not sufficient or the updateData is invalid.\n    /// @param updateData Array of price update data.\n    /// @param priceIds Array of price ids.\n    /// @param publishTimes Array of publishTimes. `publishTimes[i]` corresponds to known `publishTime` of `priceIds[i]`\n    function updatePriceFeedsIfNecessary(\n        bytes[] calldata updateData,\n        bytes32[] calldata priceIds,\n        uint64[] calldata publishTimes\n    ) external payable;\n\n    /// @notice Returns the required fee to update an array of price updates.\n    /// @param updateData Array of price update data.\n    /// @return feeAmount The required fee in Wei.\n    function getUpdateFee(\n        bytes[] calldata updateData\n    ) external view returns (uint feeAmount);\n\n    /// @notice Returns the required fee to update a TWAP price.\n    /// @param updateData Array of price update data.\n    /// @return feeAmount The required fee in Wei.\n    function getTwapUpdateFee(\n        bytes[] calldata updateData\n    ) external view returns (uint feeAmount);\n\n    /// @notice Parse `updateData` and return price feeds of the given `priceIds` if they are all published\n    /// within `minPublishTime` and `maxPublishTime`.\n    ///\n    /// You can use this method if you want to use a Pyth price at a fixed time and not the most recent price;\n    /// otherwise, please consider using `updatePriceFeeds`. This method may store the price updates on-chain, if they\n    /// are more recent than the current stored prices.\n    ///\n    /// This method requires the caller to pay a fee in wei; the required fee can be computed by calling\n    /// `getUpdateFee` with the length of the `updateData` array.\n    ///\n    ///\n    /// @dev Reverts if the transferred fee is not sufficient or the updateData is invalid or there is\n    /// no update for any of the given `priceIds` within the given time range.\n    /// @param updateData Array of price update data.\n    /// @param priceIds Array of price ids.\n    /// @param minPublishTime minimum acceptable publishTime for the given `priceIds`.\n    /// @param maxPublishTime maximum acceptable publishTime for the given `priceIds`.\n    /// @return priceFeeds Array of the price feeds corresponding to the given `priceIds` (with the same order).\n    function parsePriceFeedUpdates(\n        bytes[] calldata updateData,\n        bytes32[] calldata priceIds,\n        uint64 minPublishTime,\n        uint64 maxPublishTime\n    ) external payable returns (PythStructs.PriceFeed[] memory priceFeeds);\n\n    /// @notice Parse `updateData` and return price feeds of the given `priceIds` if they are all published\n    /// within `minPublishTime` and `maxPublishTime,` but choose to store price updates if `storeUpdatesIfFresh`.\n    ///\n    /// You can use this method if you want to use a Pyth price at a fixed time and not the most recent price;\n    /// otherwise, please consider using `updatePriceFeeds`. This method may store the price updates on-chain, if they\n    /// are more recent than the current stored prices.\n    ///\n    /// This method requires the caller to pay a fee in wei; the required fee can be computed by calling\n    /// `getUpdateFee` with the length of the `updateData` array.\n    ///\n    /// This method will eventually allow the caller to determine whether parsed price feeds should update\n    /// the stored values as well.\n    ///\n    /// @dev Reverts if the transferred fee is not sufficient or the updateData is invalid or there is\n    /// no update for any of the given `priceIds` within the given time range.\n    /// @param updateData Array of price update data.\n    /// @param priceIds Array of price ids.\n    /// @param minAllowedPublishTime minimum acceptable publishTime for the given `priceIds`.\n    /// @param maxAllowedPublishTime maximum acceptable publishTime for the given `priceIds`.\n    /// @param storeUpdatesIfFresh flag for the parse function to\n    /// @return priceFeeds Array of the price feeds corresponding to the given `priceIds` (with the same order).\n    function parsePriceFeedUpdatesWithConfig(\n        bytes[] calldata updateData,\n        bytes32[] calldata priceIds,\n        uint64 minAllowedPublishTime,\n        uint64 maxAllowedPublishTime,\n        bool checkUniqueness,\n        bool checkUpdateDataIsMinimal,\n        bool storeUpdatesIfFresh\n    )\n        external\n        payable\n        returns (\n            PythStructs.PriceFeed[] memory priceFeeds,\n            uint64[] memory slots\n        );\n\n    /// @notice Parse time-weighted average price (TWAP) from two consecutive price updates for the given `priceIds`.\n    ///\n    /// This method calculates TWAP between two data points by processing the difference in cumulative price values\n    /// divided by the time period. It requires exactly two updates that contain valid price information\n    /// for all the requested price IDs.\n    ///\n    /// This method requires the caller to pay a fee in wei; the required fee can be computed by calling\n    /// `getUpdateFee` with the updateData array.\n    ///\n    /// @dev Reverts if:\n    /// - The transferred fee is not sufficient\n    /// - The updateData is invalid or malformed\n    /// - The updateData array does not contain exactly 2 updates\n    /// - There is no update for any of the given `priceIds`\n    /// - The time ordering between data points is invalid (start time must be before end time)\n    /// @param updateData Array containing exactly two price updates (start and end points for TWAP calculation)\n    /// @param priceIds Array of price ids to calculate TWAP for\n    /// @return twapPriceFeeds Array of TWAP price feeds corresponding to the given `priceIds` (with the same order)\n    function parseTwapPriceFeedUpdates(\n        bytes[] calldata updateData,\n        bytes32[] calldata priceIds\n    )\n        external\n        payable\n        returns (PythStructs.TwapPriceFeed[] memory twapPriceFeeds);\n\n    /// @notice Similar to `parsePriceFeedUpdates` but ensures the updates returned are\n    /// the first updates published in minPublishTime. That is, if there are multiple updates for a given timestamp,\n    /// this method will return the first update. This method may store the price updates on-chain, if they\n    /// are more recent than the current stored prices.\n    ///\n    ///\n    /// @dev Reverts if the transferred fee is not sufficient or the updateData is invalid or there is\n    /// no update for any of the given `priceIds` within the given time range and uniqueness condition.\n    /// @param updateData Array of price update data.\n    /// @param priceIds Array of price ids.\n    /// @param minPublishTime minimum acceptable publishTime for the given `priceIds`.\n    /// @param maxPublishTime maximum acceptable publishTime for the given `priceIds`.\n    /// @return priceFeeds Array of the price feeds corresponding to the given `priceIds` (with the same order).\n    function parsePriceFeedUpdatesUnique(\n        bytes[] calldata updateData,\n        bytes32[] calldata priceIds,\n        uint64 minPublishTime,\n        uint64 maxPublishTime\n    ) external payable returns (PythStructs.PriceFeed[] memory priceFeeds);\n}\n"},"@pythnetwork/pyth-sdk-solidity/IPythEvents.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.0;\n\n/// @title IPythEvents contains the events that Pyth contract emits.\n/// @dev This interface can be used for listening to the updates for off-chain and testing purposes.\ninterface IPythEvents {\n    /// @dev Emitted when the price feed with `id` has received a fresh update.\n    /// @param id The Pyth Price Feed ID.\n    /// @param publishTime Publish time of the given price update.\n    /// @param price Price of the given price update.\n    /// @param conf Confidence interval of the given price update.\n    event PriceFeedUpdate(\n        bytes32 indexed id,\n        uint64 publishTime,\n        int64 price,\n        uint64 conf\n    );\n\n    /// @dev Emitted when the TWAP price feed with `id` has received a fresh update.\n    /// @param id The Pyth Price Feed ID.\n    /// @param startTime Start time of the TWAP.\n    /// @param endTime End time of the TWAP.\n    /// @param twapPrice Price of the TWAP.\n    /// @param twapConf Confidence interval of the TWAP.\n    /// @param downSlotsRatio Down slot ratio of the TWAP.\n    event TwapPriceFeedUpdate(\n        bytes32 indexed id,\n        uint64 startTime,\n        uint64 endTime,\n        int64 twapPrice,\n        uint64 twapConf,\n        uint32 downSlotsRatio\n    );\n}\n"},"@pythnetwork/pyth-sdk-solidity/PythStructs.sol":{"content":"// SPDX-License-Identifier: Apache-2.0\npragma solidity ^0.8.0;\n\ncontract PythStructs {\n    // A price with a degree of uncertainty, represented as a price +- a confidence interval.\n    //\n    // The confidence interval roughly corresponds to the standard error of a normal distribution.\n    // Both the price and confidence are stored in a fixed-point numeric representation,\n    // `x * (10^expo)`, where `expo` is the exponent.\n    //\n    // Please refer to the documentation at https://docs.pyth.network/documentation/pythnet-price-feeds/best-practices for how\n    // to how this price safely.\n    struct Price {\n        // Price\n        int64 price;\n        // Confidence interval around the price\n        uint64 conf;\n        // Price exponent\n        int32 expo;\n        // Unix timestamp describing when the price was published\n        uint publishTime;\n    }\n\n    // PriceFeed represents a current aggregate price from pyth publisher feeds.\n    struct PriceFeed {\n        // The price ID.\n        bytes32 id;\n        // Latest available price\n        Price price;\n        // Latest available exponentially-weighted moving average price\n        Price emaPrice;\n    }\n\n    struct TwapPriceFeed {\n        // The price ID.\n        bytes32 id;\n        // Start time of the TWAP\n        uint64 startTime;\n        // End time of the TWAP\n        uint64 endTime;\n        // TWAP price\n        Price twap;\n        // Down slot ratio represents the ratio of price feed updates that were missed or unavailable\n        // during the TWAP period, expressed as a fixed-point number between 0 and 1e6 (100%).\n        // For example:\n        //   - 0 means all price updates were available\n        //   - 500_000 means 50% of updates were missed\n        //   - 1_000_000 means all updates were missed\n        // This can be used to assess the quality/reliability of the TWAP calculation.\n        // Applications should define a maximum acceptable ratio (e.g. 100000 for 10%)\n        // and revert if downSlotsRatio exceeds it.\n        uint32 downSlotsRatio;\n    }\n\n    // Information used to calculate time-weighted average prices (TWAP)\n    struct TwapPriceInfo {\n        // slot 1\n        int128 cumulativePrice;\n        uint128 cumulativeConf;\n        // slot 2\n        uint64 numDownSlots;\n        uint64 publishSlot;\n        uint64 publishTime;\n        uint64 prevPublishTime;\n        // slot 3\n        int32 expo;\n    }\n}\n"},"contracts/BotDetector.sol":{"content":"// SPDX-License-Identifier: MIT\npragma solidity ^0.8.0;\n\nimport \"@pythnetwork/pyth-sdk-solidity/IPyth.sol\";\nimport \"@pythnetwork/pyth-sdk-solidity/PythStructs.sol\";\n\ncontract BotDetectorWithPyth {\n    IPyth public pyth;\n    address public admin;\n    address public botAnalyzer;\n\n    struct TradeRecord {\n        address user;\n        uint256 timestamp;\n        uint256 amount;\n        uint256 blockNumber;\n        int64 btcPriceAtTrade;\n        uint64 pricePublishTime;\n    }\n\n    struct BotEvidence {\n        address user;\n        uint256 tradeTimestamp;\n        uint256 pricePublishTime;\n        int64 priceAtTrade;\n        uint256 reactionTimeMs;\n        uint256 botScore;\n    }\n\n    mapping(address => TradeRecord[]) public userTrades;\n    mapping(address => bool) public flaggedAsBots;\n    mapping(address => uint256) public botScore;\n    mapping(address => BotEvidence) public botEvidenceProof;\n\n    event TradeExecuted(\n        address indexed user,\n        uint256 timestamp,\n        uint256 amount,\n        uint256 blockNumber,\n        int64 btcPrice\n    );\n\n    event BotFlaggedWithProof(\n        address indexed user,\n        uint256 score,\n        string reason,\n        int64 priceUsed,\n        uint256 reactionTimeMs\n    );\n\n    modifier onlyAnalyzer() {\n        require(\n            msg.sender == botAnalyzer || msg.sender == admin,\n            \"Not authorized\"\n        );\n        _;\n    }\n\n    constructor(address _pythContract, address _botAnalyzer) {\n        pyth = IPyth(_pythContract);\n        admin = msg.sender;\n        botAnalyzer = _botAnalyzer;\n    }\n\n    function executeTrade(uint256 amount) external {\n        require(!flaggedAsBots[msg.sender], \"Bot detected - trading blocked!\");\n        require(amount > 0, \"Invalid amount\");\n\n        userTrades[msg.sender].push(\n            TradeRecord({\n                user: msg.sender,\n                timestamp: block.timestamp,\n                amount: amount,\n                blockNumber: block.number,\n                btcPriceAtTrade: 0,\n                pricePublishTime: 0\n            })\n        );\n\n        emit TradeExecuted(\n            msg.sender,\n            block.timestamp,\n            amount,\n            block.number,\n            0\n        );\n    }\n\n    function executeTradeWithPriceProof(\n        uint256 amount,\n        bytes[] calldata priceUpdateData,\n        bytes32 priceId\n    ) external payable {\n        require(!flaggedAsBots[msg.sender], \"Bot detected - trading blocked!\");\n        require(amount > 0, \"Invalid amount\");\n\n        uint fee = pyth.getUpdateFee(priceUpdateData);\n        require(msg.value >= fee, \"Insufficient fee\");\n\n        pyth.updatePriceFeeds{value: fee}(priceUpdateData);\n\n        PythStructs.Price memory price = pyth.getPriceNoOlderThan(priceId, 60);\n\n        userTrades[msg.sender].push(\n            TradeRecord({\n                user: msg.sender,\n                timestamp: block.timestamp,\n                amount: amount,\n                blockNumber: block.number,\n                btcPriceAtTrade: price.price,\n                pricePublishTime: uint64(price.publishTime)\n            })\n        );\n\n        emit TradeExecuted(\n            msg.sender,\n            block.timestamp,\n            amount,\n            block.number,\n            price.price\n        );\n    }\n\n    function flagBotsWithPythProof(\n        address[] calldata users,\n        uint256[] calldata scores,\n        string[] calldata reasons,\n        bytes[] calldata priceUpdateData,\n        bytes32 priceId\n    ) external payable onlyAnalyzer {\n        require(users.length == scores.length, \"Length mismatch\");\n\n        uint fee = pyth.getUpdateFee(priceUpdateData);\n        require(msg.value >= fee, \"Insufficient Pyth fee\");\n\n        pyth.updatePriceFeeds{value: fee}(priceUpdateData);\n\n        PythStructs.Price memory currentPrice = pyth.getPriceUnsafe(priceId);\n\n        for (uint i = 0; i < users.length; i++) {\n            _flagBotWithEvidence(users[i], scores[i], reasons[i], currentPrice);\n        }\n    }\n\n    // REFACTORED: Moved to separate function to reduce stack depth\n    function _flagBotWithEvidence(\n        address user,\n        uint256 score,\n        string calldata reason,\n        PythStructs.Price memory currentPrice\n    ) private {\n        flaggedAsBots[user] = true;\n        botScore[user] = score;\n\n        TradeRecord[] storage trades = userTrades[user];\n        if (trades.length > 0) {\n            TradeRecord memory lastTrade = trades[trades.length - 1];\n\n            uint256 reactionTime = lastTrade.timestamp >\n                currentPrice.publishTime\n                ? (lastTrade.timestamp - currentPrice.publishTime) * 1000\n                : 0;\n\n            botEvidenceProof[user] = BotEvidence({\n                user: user,\n                tradeTimestamp: lastTrade.timestamp,\n                pricePublishTime: currentPrice.publishTime,\n                priceAtTrade: currentPrice.price,\n                reactionTimeMs: reactionTime,\n                botScore: score\n            });\n\n            emit BotFlaggedWithProof(\n                user,\n                score,\n                reason,\n                currentPrice.price,\n                reactionTime\n            );\n        }\n    }\n\n    function flagBots(\n        address[] calldata users,\n        uint256[] calldata scores,\n        string[] calldata reasons\n    ) external onlyAnalyzer {\n        require(users.length == scores.length, \"Length mismatch\");\n\n        for (uint i = 0; i < users.length; i++) {\n            flaggedAsBots[users[i]] = true;\n            botScore[users[i]] = scores[i];\n        }\n    }\n\n    function unflagBot(address user) external onlyAnalyzer {\n        flaggedAsBots[user] = false;\n        botScore[user] = 0;\n    }\n\n    function getUserTrades(\n        address user\n    ) external view returns (TradeRecord[] memory) {\n        return userTrades[user];\n    }\n\n    function isBot(address user) external view returns (bool, uint256) {\n        return (flaggedAsBots[user], botScore[user]);\n    }\n\n    function getBotEvidence(\n        address user\n    ) external view returns (BotEvidence memory) {\n        return botEvidenceProof[user];\n    }\n\n    function setBotAnalyzer(address _newAnalyzer) external {\n        require(msg.sender == admin, \"Only admin\");\n        botAnalyzer = _newAnalyzer;\n    }\n}\n"}},"settings":{"optimizer":{"enabled":true,"runs":200},"viaIR":true,"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"errors":[{"component":"general","errorCode":"5667","formattedMessage":"Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n   --> contracts/BotDetector.sol:186:9:\n    |\n186 |         string[] calldata reasons\n    |         ^^^^^^^^^^^^^^^^^^^^^^^^^\n\n","message":"Unused function parameter. Remove or comment out the variable name to silence this warning.","severity":"warning","sourceLocation":{"end":5335,"file":"contracts/BotDetector.sol","start":5310},"type":"Warning"}],"sources":{"@pythnetwork/pyth-sdk-solidity/IPyth.sol":{"ast":{"absolutePath":"@pythnetwork/pyth-sdk-solidity/IPyth.sol","exportedSymbols":{"IPyth":[162],"IPythEvents":[192],"PythStructs":[240]},"id":163,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"39:23:0"},{"absolutePath":"@pythnetwork/pyth-sdk-solidity/PythStructs.sol","file":"./PythStructs.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":163,"sourceUnit":241,"src":"64:27:0","symbolAliases":[],"unitAlias":""},{"absolutePath":"@pythnetwork/pyth-sdk-solidity/IPythEvents.sol","file":"./IPythEvents.sol","id":3,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":163,"sourceUnit":193,"src":"92:27:0","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":5,"name":"IPythEvents","nameLocations":["397:11:0"],"nodeType":"IdentifierPath","referencedDeclaration":192,"src":"397:11:0"},"id":6,"nodeType":"InheritanceSpecifier","src":"397:11:0"}],"canonicalName":"IPyth","contractDependencies":[],"contractKind":"interface","documentation":{"id":4,"nodeType":"StructuredDocumentation","src":"121:257:0","text":"@title Consume prices from the Pyth Network (https://pyth.network/).\n @dev Please refer to the guidance at https://docs.pyth.network/documentation/pythnet-price-feeds/best-practices for how to consume prices safely.\n @author Pyth Data Association"},"fullyImplemented":false,"id":162,"linearizedBaseContracts":[162,192],"name":"IPyth","nameLocation":"388:5:0","nodeType":"ContractDefinition","nodes":[{"documentation":{"id":7,"nodeType":"StructuredDocumentation","src":"415:669:0","text":"@notice Returns the price of a price feed without any sanity checks.\n @dev This function returns the most recent price update in this contract without any recency checks.\n This function is unsafe as the returned price update may be arbitrarily far in the past.\n Users of this function should check the `publishTime` in the price to ensure that the returned price is\n sufficiently recent for their application. If you are considering using this function, it may be\n safer / easier to use `getPriceNoOlderThan`.\n @return price - please read the documentation of PythStructs.Price to understand how to use this safely."},"functionSelector":"96834ad3","id":15,"implemented":false,"kind":"function","modifiers":[],"name":"getPriceUnsafe","nameLocation":"1098:14:0","nodeType":"FunctionDefinition","parameters":{"id":10,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9,"mutability":"mutable","name":"id","nameLocation":"1130:2:0","nodeType":"VariableDeclaration","scope":15,"src":"1122:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":8,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1122:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"1112:26:0"},"returnParameters":{"id":14,"nodeType":"ParameterList","parameters":[{"constant":false,"id":13,"mutability":"mutable","name":"price","nameLocation":"1187:5:0","nodeType":"VariableDeclaration","scope":15,"src":"1162:30:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$203_memory_ptr","typeString":"struct PythStructs.Price"},"typeName":{"id":12,"nodeType":"UserDefinedTypeName","pathNode":{"id":11,"name":"PythStructs.Price","nameLocations":["1162:11:0","1174:5:0"],"nodeType":"IdentifierPath","referencedDeclaration":203,"src":"1162:17:0"},"referencedDeclaration":203,"src":"1162:17:0","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$203_storage_ptr","typeString":"struct PythStructs.Price"}},"visibility":"internal"}],"src":"1161:32:0"},"scope":162,"src":"1089:105:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":16,"nodeType":"StructuredDocumentation","src":"1200:423:0","text":"@notice Returns the price that is no older than `age` seconds of the current time.\n @dev This function is a sanity-checked version of `getPriceUnsafe` which is useful in\n applications that require a sufficiently-recent price. Reverts if the price wasn't updated sufficiently\n recently.\n @return price - please read the documentation of PythStructs.Price to understand how to use this safely."},"functionSelector":"a4ae35e0","id":26,"implemented":false,"kind":"function","modifiers":[],"name":"getPriceNoOlderThan","nameLocation":"1637:19:0","nodeType":"FunctionDefinition","parameters":{"id":21,"nodeType":"ParameterList","parameters":[{"constant":false,"id":18,"mutability":"mutable","name":"id","nameLocation":"1674:2:0","nodeType":"VariableDeclaration","scope":26,"src":"1666:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":17,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1666:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":20,"mutability":"mutable","name":"age","nameLocation":"1691:3:0","nodeType":"VariableDeclaration","scope":26,"src":"1686:8:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":19,"name":"uint","nodeType":"ElementaryTypeName","src":"1686:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1656:44:0"},"returnParameters":{"id":25,"nodeType":"ParameterList","parameters":[{"constant":false,"id":24,"mutability":"mutable","name":"price","nameLocation":"1749:5:0","nodeType":"VariableDeclaration","scope":26,"src":"1724:30:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$203_memory_ptr","typeString":"struct PythStructs.Price"},"typeName":{"id":23,"nodeType":"UserDefinedTypeName","pathNode":{"id":22,"name":"PythStructs.Price","nameLocations":["1724:11:0","1736:5:0"],"nodeType":"IdentifierPath","referencedDeclaration":203,"src":"1724:17:0"},"referencedDeclaration":203,"src":"1724:17:0","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$203_storage_ptr","typeString":"struct PythStructs.Price"}},"visibility":"internal"}],"src":"1723:32:0"},"scope":162,"src":"1628:128:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":27,"nodeType":"StructuredDocumentation","src":"1762:925:0","text":"@notice Returns the exponentially-weighted moving average price of a price feed without any sanity checks.\n @dev This function returns the same price as `getEmaPrice` in the case where the price is available.\n However, if the price is not recent this function returns the latest available price.\n The returned price can be from arbitrarily far in the past; this function makes no guarantees that\n the returned price is recent or useful for any particular application.\n Users of this function should check the `publishTime` in the price to ensure that the returned price is\n sufficiently recent for their application. If you are considering using this function, it may be\n safer / easier to use either `getEmaPrice` or `getEmaPriceNoOlderThan`.\n @return price - please read the documentation of PythStructs.Price to understand how to use this safely."},"functionSelector":"9474f45b","id":35,"implemented":false,"kind":"function","modifiers":[],"name":"getEmaPriceUnsafe","nameLocation":"2701:17:0","nodeType":"FunctionDefinition","parameters":{"id":30,"nodeType":"ParameterList","parameters":[{"constant":false,"id":29,"mutability":"mutable","name":"id","nameLocation":"2736:2:0","nodeType":"VariableDeclaration","scope":35,"src":"2728:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":28,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2728:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2718:26:0"},"returnParameters":{"id":34,"nodeType":"ParameterList","parameters":[{"constant":false,"id":33,"mutability":"mutable","name":"price","nameLocation":"2793:5:0","nodeType":"VariableDeclaration","scope":35,"src":"2768:30:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$203_memory_ptr","typeString":"struct PythStructs.Price"},"typeName":{"id":32,"nodeType":"UserDefinedTypeName","pathNode":{"id":31,"name":"PythStructs.Price","nameLocations":["2768:11:0","2780:5:0"],"nodeType":"IdentifierPath","referencedDeclaration":203,"src":"2768:17:0"},"referencedDeclaration":203,"src":"2768:17:0","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$203_storage_ptr","typeString":"struct PythStructs.Price"}},"visibility":"internal"}],"src":"2767:32:0"},"scope":162,"src":"2692:108:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":36,"nodeType":"StructuredDocumentation","src":"2806:472:0","text":"@notice Returns the exponentially-weighted moving average price that is no older than `age` seconds\n of the current time.\n @dev This function is a sanity-checked version of `getEmaPriceUnsafe` which is useful in\n applications that require a sufficiently-recent price. Reverts if the price wasn't updated sufficiently\n recently.\n @return price - please read the documentation of PythStructs.Price to understand how to use this safely."},"functionSelector":"711a2e28","id":46,"implemented":false,"kind":"function","modifiers":[],"name":"getEmaPriceNoOlderThan","nameLocation":"3292:22:0","nodeType":"FunctionDefinition","parameters":{"id":41,"nodeType":"ParameterList","parameters":[{"constant":false,"id":38,"mutability":"mutable","name":"id","nameLocation":"3332:2:0","nodeType":"VariableDeclaration","scope":46,"src":"3324:10:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":37,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3324:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":40,"mutability":"mutable","name":"age","nameLocation":"3349:3:0","nodeType":"VariableDeclaration","scope":46,"src":"3344:8:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":39,"name":"uint","nodeType":"ElementaryTypeName","src":"3344:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3314:44:0"},"returnParameters":{"id":45,"nodeType":"ParameterList","parameters":[{"constant":false,"id":44,"mutability":"mutable","name":"price","nameLocation":"3407:5:0","nodeType":"VariableDeclaration","scope":46,"src":"3382:30:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$203_memory_ptr","typeString":"struct PythStructs.Price"},"typeName":{"id":43,"nodeType":"UserDefinedTypeName","pathNode":{"id":42,"name":"PythStructs.Price","nameLocations":["3382:11:0","3394:5:0"],"nodeType":"IdentifierPath","referencedDeclaration":203,"src":"3382:17:0"},"referencedDeclaration":203,"src":"3382:17:0","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$203_storage_ptr","typeString":"struct PythStructs.Price"}},"visibility":"internal"}],"src":"3381:32:0"},"scope":162,"src":"3283:131:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":47,"nodeType":"StructuredDocumentation","src":"3420:535:0","text":"@notice Update price feeds with given update messages.\n This method requires the caller to pay a fee in wei; the required fee can be computed by calling\n `getUpdateFee` with the length of the `updateData` array.\n Prices will be updated if they are more recent than the current stored prices.\n The call will succeed even if the update is not the most recent.\n @dev Reverts if the transferred fee is not sufficient or the updateData is invalid.\n @param updateData Array of price update data."},"functionSelector":"ef9e5e28","id":53,"implemented":false,"kind":"function","modifiers":[],"name":"updatePriceFeeds","nameLocation":"3969:16:0","nodeType":"FunctionDefinition","parameters":{"id":51,"nodeType":"ParameterList","parameters":[{"constant":false,"id":50,"mutability":"mutable","name":"updateData","nameLocation":"4003:10:0","nodeType":"VariableDeclaration","scope":53,"src":"3986:27:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":48,"name":"bytes","nodeType":"ElementaryTypeName","src":"3986:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":49,"nodeType":"ArrayTypeName","src":"3986:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"3985:29:0"},"returnParameters":{"id":52,"nodeType":"ParameterList","parameters":[],"src":"4031:0:0"},"scope":162,"src":"3960:72:0","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":54,"nodeType":"StructuredDocumentation","src":"4038:1299:0","text":"@notice Wrapper around updatePriceFeeds that rejects fast if a price update is not necessary. A price update is\n necessary if the current on-chain publishTime is older than the given publishTime. It relies solely on the\n given `publishTimes` for the price feeds and does not read the actual price update publish time within `updateData`.\n This method requires the caller to pay a fee in wei; the required fee can be computed by calling\n `getUpdateFee` with the length of the `updateData` array.\n `priceIds` and `publishTimes` are two arrays with the same size that correspond to senders known publishTime\n of each priceId when calling this method. If all of price feeds within `priceIds` have updated and have\n a newer or equal publish time than the given publish time, it will reject the transaction to save gas.\n Otherwise, it calls updatePriceFeeds method to update the prices.\n @dev Reverts if update is not needed or the transferred fee is not sufficient or the updateData is invalid.\n @param updateData Array of price update data.\n @param priceIds Array of price ids.\n @param publishTimes Array of publishTimes. `publishTimes[i]` corresponds to known `publishTime` of `priceIds[i]`"},"functionSelector":"b9256d28","id":66,"implemented":false,"kind":"function","modifiers":[],"name":"updatePriceFeedsIfNecessary","nameLocation":"5351:27:0","nodeType":"FunctionDefinition","parameters":{"id":64,"nodeType":"ParameterList","parameters":[{"constant":false,"id":57,"mutability":"mutable","name":"updateData","nameLocation":"5405:10:0","nodeType":"VariableDeclaration","scope":66,"src":"5388:27:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":55,"name":"bytes","nodeType":"ElementaryTypeName","src":"5388:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":56,"nodeType":"ArrayTypeName","src":"5388:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":60,"mutability":"mutable","name":"priceIds","nameLocation":"5444:8:0","nodeType":"VariableDeclaration","scope":66,"src":"5425:27:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":58,"name":"bytes32","nodeType":"ElementaryTypeName","src":"5425:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":59,"nodeType":"ArrayTypeName","src":"5425:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":63,"mutability":"mutable","name":"publishTimes","nameLocation":"5480:12:0","nodeType":"VariableDeclaration","scope":66,"src":"5462:30:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint64_$dyn_calldata_ptr","typeString":"uint64[]"},"typeName":{"baseType":{"id":61,"name":"uint64","nodeType":"ElementaryTypeName","src":"5462:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":62,"nodeType":"ArrayTypeName","src":"5462:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint64_$dyn_storage_ptr","typeString":"uint64[]"}},"visibility":"internal"}],"src":"5378:120:0"},"returnParameters":{"id":65,"nodeType":"ParameterList","parameters":[],"src":"5515:0:0"},"scope":162,"src":"5342:174:0","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":67,"nodeType":"StructuredDocumentation","src":"5522:178:0","text":"@notice Returns the required fee to update an array of price updates.\n @param updateData Array of price update data.\n @return feeAmount The required fee in Wei."},"functionSelector":"d47eed45","id":75,"implemented":false,"kind":"function","modifiers":[],"name":"getUpdateFee","nameLocation":"5714:12:0","nodeType":"FunctionDefinition","parameters":{"id":71,"nodeType":"ParameterList","parameters":[{"constant":false,"id":70,"mutability":"mutable","name":"updateData","nameLocation":"5753:10:0","nodeType":"VariableDeclaration","scope":75,"src":"5736:27:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":68,"name":"bytes","nodeType":"ElementaryTypeName","src":"5736:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":69,"nodeType":"ArrayTypeName","src":"5736:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"5726:43:0"},"returnParameters":{"id":74,"nodeType":"ParameterList","parameters":[{"constant":false,"id":73,"mutability":"mutable","name":"feeAmount","nameLocation":"5798:9:0","nodeType":"VariableDeclaration","scope":75,"src":"5793:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":72,"name":"uint","nodeType":"ElementaryTypeName","src":"5793:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5792:16:0"},"scope":162,"src":"5705:104:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":76,"nodeType":"StructuredDocumentation","src":"5815:165:0","text":"@notice Returns the required fee to update a TWAP price.\n @param updateData Array of price update data.\n @return feeAmount The required fee in Wei."},"functionSelector":"5f674e35","id":84,"implemented":false,"kind":"function","modifiers":[],"name":"getTwapUpdateFee","nameLocation":"5994:16:0","nodeType":"FunctionDefinition","parameters":{"id":80,"nodeType":"ParameterList","parameters":[{"constant":false,"id":79,"mutability":"mutable","name":"updateData","nameLocation":"6037:10:0","nodeType":"VariableDeclaration","scope":84,"src":"6020:27:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":77,"name":"bytes","nodeType":"ElementaryTypeName","src":"6020:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":78,"nodeType":"ArrayTypeName","src":"6020:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"}],"src":"6010:43:0"},"returnParameters":{"id":83,"nodeType":"ParameterList","parameters":[{"constant":false,"id":82,"mutability":"mutable","name":"feeAmount","nameLocation":"6082:9:0","nodeType":"VariableDeclaration","scope":84,"src":"6077:14:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":81,"name":"uint","nodeType":"ElementaryTypeName","src":"6077:4:0","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6076:16:0"},"scope":162,"src":"5985:108:0","stateMutability":"view","virtual":false,"visibility":"external"},{"documentation":{"id":85,"nodeType":"StructuredDocumentation","src":"6099:1213:0","text":"@notice Parse `updateData` and return price feeds of the given `priceIds` if they are all published\n within `minPublishTime` and `maxPublishTime`.\n You can use this method if you want to use a Pyth price at a fixed time and not the most recent price;\n otherwise, please consider using `updatePriceFeeds`. This method may store the price updates on-chain, if they\n are more recent than the current stored prices.\n This method requires the caller to pay a fee in wei; the required fee can be computed by calling\n `getUpdateFee` with the length of the `updateData` array.\n @dev Reverts if the transferred fee is not sufficient or the updateData is invalid or there is\n no update for any of the given `priceIds` within the given time range.\n @param updateData Array of price update data.\n @param priceIds Array of price ids.\n @param minPublishTime minimum acceptable publishTime for the given `priceIds`.\n @param maxPublishTime maximum acceptable publishTime for the given `priceIds`.\n @return priceFeeds Array of the price feeds corresponding to the given `priceIds` (with the same order)."},"functionSelector":"4716e9c5","id":102,"implemented":false,"kind":"function","modifiers":[],"name":"parsePriceFeedUpdates","nameLocation":"7326:21:0","nodeType":"FunctionDefinition","parameters":{"id":96,"nodeType":"ParameterList","parameters":[{"constant":false,"id":88,"mutability":"mutable","name":"updateData","nameLocation":"7374:10:0","nodeType":"VariableDeclaration","scope":102,"src":"7357:27:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":86,"name":"bytes","nodeType":"ElementaryTypeName","src":"7357:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":87,"nodeType":"ArrayTypeName","src":"7357:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":91,"mutability":"mutable","name":"priceIds","nameLocation":"7413:8:0","nodeType":"VariableDeclaration","scope":102,"src":"7394:27:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":89,"name":"bytes32","nodeType":"ElementaryTypeName","src":"7394:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":90,"nodeType":"ArrayTypeName","src":"7394:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":93,"mutability":"mutable","name":"minPublishTime","nameLocation":"7438:14:0","nodeType":"VariableDeclaration","scope":102,"src":"7431:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":92,"name":"uint64","nodeType":"ElementaryTypeName","src":"7431:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":95,"mutability":"mutable","name":"maxPublishTime","nameLocation":"7469:14:0","nodeType":"VariableDeclaration","scope":102,"src":"7462:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":94,"name":"uint64","nodeType":"ElementaryTypeName","src":"7462:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"7347:142:0"},"returnParameters":{"id":101,"nodeType":"ParameterList","parameters":[{"constant":false,"id":100,"mutability":"mutable","name":"priceFeeds","nameLocation":"7547:10:0","nodeType":"VariableDeclaration","scope":102,"src":"7516:41:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PriceFeed_$212_memory_ptr_$dyn_memory_ptr","typeString":"struct PythStructs.PriceFeed[]"},"typeName":{"baseType":{"id":98,"nodeType":"UserDefinedTypeName","pathNode":{"id":97,"name":"PythStructs.PriceFeed","nameLocations":["7516:11:0","7528:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":212,"src":"7516:21:0"},"referencedDeclaration":212,"src":"7516:21:0","typeDescriptions":{"typeIdentifier":"t_struct$_PriceFeed_$212_storage_ptr","typeString":"struct PythStructs.PriceFeed"}},"id":99,"nodeType":"ArrayTypeName","src":"7516:23:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PriceFeed_$212_storage_$dyn_storage_ptr","typeString":"struct PythStructs.PriceFeed[]"}},"visibility":"internal"}],"src":"7515:43:0"},"scope":162,"src":"7317:242:0","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":103,"nodeType":"StructuredDocumentation","src":"7565:1495:0","text":"@notice Parse `updateData` and return price feeds of the given `priceIds` if they are all published\n within `minPublishTime` and `maxPublishTime,` but choose to store price updates if `storeUpdatesIfFresh`.\n You can use this method if you want to use a Pyth price at a fixed time and not the most recent price;\n otherwise, please consider using `updatePriceFeeds`. This method may store the price updates on-chain, if they\n are more recent than the current stored prices.\n This method requires the caller to pay a fee in wei; the required fee can be computed by calling\n `getUpdateFee` with the length of the `updateData` array.\n This method will eventually allow the caller to determine whether parsed price feeds should update\n the stored values as well.\n @dev Reverts if the transferred fee is not sufficient or the updateData is invalid or there is\n no update for any of the given `priceIds` within the given time range.\n @param updateData Array of price update data.\n @param priceIds Array of price ids.\n @param minAllowedPublishTime minimum acceptable publishTime for the given `priceIds`.\n @param maxAllowedPublishTime maximum acceptable publishTime for the given `priceIds`.\n @param storeUpdatesIfFresh flag for the parse function to\n @return priceFeeds Array of the price feeds corresponding to the given `priceIds` (with the same order)."},"functionSelector":"3a229d18","id":129,"implemented":false,"kind":"function","modifiers":[],"name":"parsePriceFeedUpdatesWithConfig","nameLocation":"9074:31:0","nodeType":"FunctionDefinition","parameters":{"id":120,"nodeType":"ParameterList","parameters":[{"constant":false,"id":106,"mutability":"mutable","name":"updateData","nameLocation":"9132:10:0","nodeType":"VariableDeclaration","scope":129,"src":"9115:27:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":104,"name":"bytes","nodeType":"ElementaryTypeName","src":"9115:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":105,"nodeType":"ArrayTypeName","src":"9115:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":109,"mutability":"mutable","name":"priceIds","nameLocation":"9171:8:0","nodeType":"VariableDeclaration","scope":129,"src":"9152:27:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":107,"name":"bytes32","nodeType":"ElementaryTypeName","src":"9152:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":108,"nodeType":"ArrayTypeName","src":"9152:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":111,"mutability":"mutable","name":"minAllowedPublishTime","nameLocation":"9196:21:0","nodeType":"VariableDeclaration","scope":129,"src":"9189:28:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":110,"name":"uint64","nodeType":"ElementaryTypeName","src":"9189:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":113,"mutability":"mutable","name":"maxAllowedPublishTime","nameLocation":"9234:21:0","nodeType":"VariableDeclaration","scope":129,"src":"9227:28:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":112,"name":"uint64","nodeType":"ElementaryTypeName","src":"9227:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":115,"mutability":"mutable","name":"checkUniqueness","nameLocation":"9270:15:0","nodeType":"VariableDeclaration","scope":129,"src":"9265:20:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":114,"name":"bool","nodeType":"ElementaryTypeName","src":"9265:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":117,"mutability":"mutable","name":"checkUpdateDataIsMinimal","nameLocation":"9300:24:0","nodeType":"VariableDeclaration","scope":129,"src":"9295:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":116,"name":"bool","nodeType":"ElementaryTypeName","src":"9295:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":119,"mutability":"mutable","name":"storeUpdatesIfFresh","nameLocation":"9339:19:0","nodeType":"VariableDeclaration","scope":129,"src":"9334:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":118,"name":"bool","nodeType":"ElementaryTypeName","src":"9334:4:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"9105:259:0"},"returnParameters":{"id":128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":124,"mutability":"mutable","name":"priceFeeds","nameLocation":"9459:10:0","nodeType":"VariableDeclaration","scope":129,"src":"9428:41:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PriceFeed_$212_memory_ptr_$dyn_memory_ptr","typeString":"struct PythStructs.PriceFeed[]"},"typeName":{"baseType":{"id":122,"nodeType":"UserDefinedTypeName","pathNode":{"id":121,"name":"PythStructs.PriceFeed","nameLocations":["9428:11:0","9440:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":212,"src":"9428:21:0"},"referencedDeclaration":212,"src":"9428:21:0","typeDescriptions":{"typeIdentifier":"t_struct$_PriceFeed_$212_storage_ptr","typeString":"struct PythStructs.PriceFeed"}},"id":123,"nodeType":"ArrayTypeName","src":"9428:23:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PriceFeed_$212_storage_$dyn_storage_ptr","typeString":"struct PythStructs.PriceFeed[]"}},"visibility":"internal"},{"constant":false,"id":127,"mutability":"mutable","name":"slots","nameLocation":"9499:5:0","nodeType":"VariableDeclaration","scope":129,"src":"9483:21:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_uint64_$dyn_memory_ptr","typeString":"uint64[]"},"typeName":{"baseType":{"id":125,"name":"uint64","nodeType":"ElementaryTypeName","src":"9483:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"id":126,"nodeType":"ArrayTypeName","src":"9483:8:0","typeDescriptions":{"typeIdentifier":"t_array$_t_uint64_$dyn_storage_ptr","typeString":"uint64[]"}},"visibility":"internal"}],"src":"9414:100:0"},"scope":162,"src":"9065:450:0","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":130,"nodeType":"StructuredDocumentation","src":"9521:1194:0","text":"@notice Parse time-weighted average price (TWAP) from two consecutive price updates for the given `priceIds`.\n This method calculates TWAP between two data points by processing the difference in cumulative price values\n divided by the time period. It requires exactly two updates that contain valid price information\n for all the requested price IDs.\n This method requires the caller to pay a fee in wei; the required fee can be computed by calling\n `getUpdateFee` with the updateData array.\n @dev Reverts if:\n - The transferred fee is not sufficient\n - The updateData is invalid or malformed\n - The updateData array does not contain exactly 2 updates\n - There is no update for any of the given `priceIds`\n - The time ordering between data points is invalid (start time must be before end time)\n @param updateData Array containing exactly two price updates (start and end points for TWAP calculation)\n @param priceIds Array of price ids to calculate TWAP for\n @return twapPriceFeeds Array of TWAP price feeds corresponding to the given `priceIds` (with the same order)"},"functionSelector":"eb942158","id":143,"implemented":false,"kind":"function","modifiers":[],"name":"parseTwapPriceFeedUpdates","nameLocation":"10729:25:0","nodeType":"FunctionDefinition","parameters":{"id":137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":133,"mutability":"mutable","name":"updateData","nameLocation":"10781:10:0","nodeType":"VariableDeclaration","scope":143,"src":"10764:27:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":131,"name":"bytes","nodeType":"ElementaryTypeName","src":"10764:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":132,"nodeType":"ArrayTypeName","src":"10764:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":136,"mutability":"mutable","name":"priceIds","nameLocation":"10820:8:0","nodeType":"VariableDeclaration","scope":143,"src":"10801:27:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":134,"name":"bytes32","nodeType":"ElementaryTypeName","src":"10801:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":135,"nodeType":"ArrayTypeName","src":"10801:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"}],"src":"10754:80:0"},"returnParameters":{"id":142,"nodeType":"ParameterList","parameters":[{"constant":false,"id":141,"mutability":"mutable","name":"twapPriceFeeds","nameLocation":"10920:14:0","nodeType":"VariableDeclaration","scope":143,"src":"10885:49:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TwapPriceFeed_$224_memory_ptr_$dyn_memory_ptr","typeString":"struct PythStructs.TwapPriceFeed[]"},"typeName":{"baseType":{"id":139,"nodeType":"UserDefinedTypeName","pathNode":{"id":138,"name":"PythStructs.TwapPriceFeed","nameLocations":["10885:11:0","10897:13:0"],"nodeType":"IdentifierPath","referencedDeclaration":224,"src":"10885:25:0"},"referencedDeclaration":224,"src":"10885:25:0","typeDescriptions":{"typeIdentifier":"t_struct$_TwapPriceFeed_$224_storage_ptr","typeString":"struct PythStructs.TwapPriceFeed"}},"id":140,"nodeType":"ArrayTypeName","src":"10885:27:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TwapPriceFeed_$224_storage_$dyn_storage_ptr","typeString":"struct PythStructs.TwapPriceFeed[]"}},"visibility":"internal"}],"src":"10884:51:0"},"scope":162,"src":"10720:216:0","stateMutability":"payable","virtual":false,"visibility":"external"},{"documentation":{"id":144,"nodeType":"StructuredDocumentation","src":"10942:972:0","text":"@notice Similar to `parsePriceFeedUpdates` but ensures the updates returned are\n the first updates published in minPublishTime. That is, if there are multiple updates for a given timestamp,\n this method will return the first update. This method may store the price updates on-chain, if they\n are more recent than the current stored prices.\n @dev Reverts if the transferred fee is not sufficient or the updateData is invalid or there is\n no update for any of the given `priceIds` within the given time range and uniqueness condition.\n @param updateData Array of price update data.\n @param priceIds Array of price ids.\n @param minPublishTime minimum acceptable publishTime for the given `priceIds`.\n @param maxPublishTime maximum acceptable publishTime for the given `priceIds`.\n @return priceFeeds Array of the price feeds corresponding to the given `priceIds` (with the same order)."},"functionSelector":"accca7f9","id":161,"implemented":false,"kind":"function","modifiers":[],"name":"parsePriceFeedUpdatesUnique","nameLocation":"11928:27:0","nodeType":"FunctionDefinition","parameters":{"id":155,"nodeType":"ParameterList","parameters":[{"constant":false,"id":147,"mutability":"mutable","name":"updateData","nameLocation":"11982:10:0","nodeType":"VariableDeclaration","scope":161,"src":"11965:27:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":145,"name":"bytes","nodeType":"ElementaryTypeName","src":"11965:5:0","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":146,"nodeType":"ArrayTypeName","src":"11965:7:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":150,"mutability":"mutable","name":"priceIds","nameLocation":"12021:8:0","nodeType":"VariableDeclaration","scope":161,"src":"12002:27:0","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_calldata_ptr","typeString":"bytes32[]"},"typeName":{"baseType":{"id":148,"name":"bytes32","nodeType":"ElementaryTypeName","src":"12002:7:0","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"id":149,"nodeType":"ArrayTypeName","src":"12002:9:0","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes32_$dyn_storage_ptr","typeString":"bytes32[]"}},"visibility":"internal"},{"constant":false,"id":152,"mutability":"mutable","name":"minPublishTime","nameLocation":"12046:14:0","nodeType":"VariableDeclaration","scope":161,"src":"12039:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":151,"name":"uint64","nodeType":"ElementaryTypeName","src":"12039:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":154,"mutability":"mutable","name":"maxPublishTime","nameLocation":"12077:14:0","nodeType":"VariableDeclaration","scope":161,"src":"12070:21:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":153,"name":"uint64","nodeType":"ElementaryTypeName","src":"12070:6:0","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"11955:142:0"},"returnParameters":{"id":160,"nodeType":"ParameterList","parameters":[{"constant":false,"id":159,"mutability":"mutable","name":"priceFeeds","nameLocation":"12155:10:0","nodeType":"VariableDeclaration","scope":161,"src":"12124:41:0","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PriceFeed_$212_memory_ptr_$dyn_memory_ptr","typeString":"struct PythStructs.PriceFeed[]"},"typeName":{"baseType":{"id":157,"nodeType":"UserDefinedTypeName","pathNode":{"id":156,"name":"PythStructs.PriceFeed","nameLocations":["12124:11:0","12136:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":212,"src":"12124:21:0"},"referencedDeclaration":212,"src":"12124:21:0","typeDescriptions":{"typeIdentifier":"t_struct$_PriceFeed_$212_storage_ptr","typeString":"struct PythStructs.PriceFeed"}},"id":158,"nodeType":"ArrayTypeName","src":"12124:23:0","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_PriceFeed_$212_storage_$dyn_storage_ptr","typeString":"struct PythStructs.PriceFeed[]"}},"visibility":"internal"}],"src":"12123:43:0"},"scope":162,"src":"11919:248:0","stateMutability":"payable","virtual":false,"visibility":"external"}],"scope":163,"src":"378:11791:0","usedErrors":[]}],"src":"39:12131:0"},"id":0},"@pythnetwork/pyth-sdk-solidity/IPythEvents.sol":{"ast":{"absolutePath":"@pythnetwork/pyth-sdk-solidity/IPythEvents.sol","exportedSymbols":{"IPythEvents":[192]},"id":193,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":164,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"39:23:1"},{"abstract":false,"baseContracts":[],"canonicalName":"IPythEvents","contractDependencies":[],"contractKind":"interface","documentation":{"id":165,"nodeType":"StructuredDocumentation","src":"64:170:1","text":"@title IPythEvents contains the events that Pyth contract emits.\n @dev This interface can be used for listening to the updates for off-chain and testing purposes."},"fullyImplemented":true,"id":192,"linearizedBaseContracts":[192],"name":"IPythEvents","nameLocation":"244:11:1","nodeType":"ContractDefinition","nodes":[{"anonymous":false,"documentation":{"id":166,"nodeType":"StructuredDocumentation","src":"262:305:1","text":"@dev Emitted when the price feed with `id` has received a fresh update.\n @param id The Pyth Price Feed ID.\n @param publishTime Publish time of the given price update.\n @param price Price of the given price update.\n @param conf Confidence interval of the given price update."},"eventSelector":"d06a6b7f4918494b3719217d1802786c1f5112a6c1d88fe2cfec00b4584f6aec","id":176,"name":"PriceFeedUpdate","nameLocation":"578:15:1","nodeType":"EventDefinition","parameters":{"id":175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":168,"indexed":true,"mutability":"mutable","name":"id","nameLocation":"619:2:1","nodeType":"VariableDeclaration","scope":176,"src":"603:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":167,"name":"bytes32","nodeType":"ElementaryTypeName","src":"603:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":170,"indexed":false,"mutability":"mutable","name":"publishTime","nameLocation":"638:11:1","nodeType":"VariableDeclaration","scope":176,"src":"631:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":169,"name":"uint64","nodeType":"ElementaryTypeName","src":"631:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":172,"indexed":false,"mutability":"mutable","name":"price","nameLocation":"665:5:1","nodeType":"VariableDeclaration","scope":176,"src":"659:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":171,"name":"int64","nodeType":"ElementaryTypeName","src":"659:5:1","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":174,"indexed":false,"mutability":"mutable","name":"conf","nameLocation":"687:4:1","nodeType":"VariableDeclaration","scope":176,"src":"680:11:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":173,"name":"uint64","nodeType":"ElementaryTypeName","src":"680:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"593:104:1"},"src":"572:126:1"},{"anonymous":false,"documentation":{"id":177,"nodeType":"StructuredDocumentation","src":"704:376:1","text":"@dev Emitted when the TWAP price feed with `id` has received a fresh update.\n @param id The Pyth Price Feed ID.\n @param startTime Start time of the TWAP.\n @param endTime End time of the TWAP.\n @param twapPrice Price of the TWAP.\n @param twapConf Confidence interval of the TWAP.\n @param downSlotsRatio Down slot ratio of the TWAP."},"eventSelector":"d8b7774079faf4ab389d4e48b46d54e2bb8b66dd0de0d718f61730a9f3c92977","id":191,"name":"TwapPriceFeedUpdate","nameLocation":"1091:19:1","nodeType":"EventDefinition","parameters":{"id":190,"nodeType":"ParameterList","parameters":[{"constant":false,"id":179,"indexed":true,"mutability":"mutable","name":"id","nameLocation":"1136:2:1","nodeType":"VariableDeclaration","scope":191,"src":"1120:18:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":178,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1120:7:1","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":181,"indexed":false,"mutability":"mutable","name":"startTime","nameLocation":"1155:9:1","nodeType":"VariableDeclaration","scope":191,"src":"1148:16:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":180,"name":"uint64","nodeType":"ElementaryTypeName","src":"1148:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":183,"indexed":false,"mutability":"mutable","name":"endTime","nameLocation":"1181:7:1","nodeType":"VariableDeclaration","scope":191,"src":"1174:14:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":182,"name":"uint64","nodeType":"ElementaryTypeName","src":"1174:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":185,"indexed":false,"mutability":"mutable","name":"twapPrice","nameLocation":"1204:9:1","nodeType":"VariableDeclaration","scope":191,"src":"1198:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":184,"name":"int64","nodeType":"ElementaryTypeName","src":"1198:5:1","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":187,"indexed":false,"mutability":"mutable","name":"twapConf","nameLocation":"1230:8:1","nodeType":"VariableDeclaration","scope":191,"src":"1223:15:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":186,"name":"uint64","nodeType":"ElementaryTypeName","src":"1223:6:1","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":189,"indexed":false,"mutability":"mutable","name":"downSlotsRatio","nameLocation":"1255:14:1","nodeType":"VariableDeclaration","scope":191,"src":"1248:21:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":188,"name":"uint32","nodeType":"ElementaryTypeName","src":"1248:6:1","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"1110:165:1"},"src":"1085:191:1"}],"scope":193,"src":"234:1044:1","usedErrors":[]}],"src":"39:1240:1"},"id":1},"@pythnetwork/pyth-sdk-solidity/PythStructs.sol":{"ast":{"absolutePath":"@pythnetwork/pyth-sdk-solidity/PythStructs.sol","exportedSymbols":{"PythStructs":[240]},"id":241,"license":"Apache-2.0","nodeType":"SourceUnit","nodes":[{"id":194,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"39:23:2"},{"abstract":false,"baseContracts":[],"canonicalName":"PythStructs","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":240,"linearizedBaseContracts":[240],"name":"PythStructs","nameLocation":"73:11:2","nodeType":"ContractDefinition","nodes":[{"canonicalName":"PythStructs.Price","id":203,"members":[{"constant":false,"id":196,"mutability":"mutable","name":"price","nameLocation":"647:5:2","nodeType":"VariableDeclaration","scope":203,"src":"641:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":195,"name":"int64","nodeType":"ElementaryTypeName","src":"641:5:2","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":198,"mutability":"mutable","name":"conf","nameLocation":"717:4:2","nodeType":"VariableDeclaration","scope":203,"src":"710:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":197,"name":"uint64","nodeType":"ElementaryTypeName","src":"710:6:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":200,"mutability":"mutable","name":"expo","nameLocation":"763:4:2","nodeType":"VariableDeclaration","scope":203,"src":"757:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":199,"name":"int32","nodeType":"ElementaryTypeName","src":"757:5:2","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"},{"constant":false,"id":202,"mutability":"mutable","name":"publishTime","nameLocation":"848:11:2","nodeType":"VariableDeclaration","scope":203,"src":"843:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":201,"name":"uint","nodeType":"ElementaryTypeName","src":"843:4:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"Price","nameLocation":"608:5:2","nodeType":"StructDefinition","scope":240,"src":"601:265:2","visibility":"public"},{"canonicalName":"PythStructs.PriceFeed","id":212,"members":[{"constant":false,"id":205,"mutability":"mutable","name":"id","nameLocation":"1013:2:2","nodeType":"VariableDeclaration","scope":212,"src":"1005:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":204,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1005:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":208,"mutability":"mutable","name":"price","nameLocation":"1065:5:2","nodeType":"VariableDeclaration","scope":212,"src":"1059:11:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$203_storage_ptr","typeString":"struct PythStructs.Price"},"typeName":{"id":207,"nodeType":"UserDefinedTypeName","pathNode":{"id":206,"name":"Price","nameLocations":["1059:5:2"],"nodeType":"IdentifierPath","referencedDeclaration":203,"src":"1059:5:2"},"referencedDeclaration":203,"src":"1059:5:2","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$203_storage_ptr","typeString":"struct PythStructs.Price"}},"visibility":"internal"},{"constant":false,"id":211,"mutability":"mutable","name":"emaPrice","nameLocation":"1158:8:2","nodeType":"VariableDeclaration","scope":212,"src":"1152:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$203_storage_ptr","typeString":"struct PythStructs.Price"},"typeName":{"id":210,"nodeType":"UserDefinedTypeName","pathNode":{"id":209,"name":"Price","nameLocations":["1152:5:2"],"nodeType":"IdentifierPath","referencedDeclaration":203,"src":"1152:5:2"},"referencedDeclaration":203,"src":"1152:5:2","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$203_storage_ptr","typeString":"struct PythStructs.Price"}},"visibility":"internal"}],"name":"PriceFeed","nameLocation":"960:9:2","nodeType":"StructDefinition","scope":240,"src":"953:220:2","visibility":"public"},{"canonicalName":"PythStructs.TwapPriceFeed","id":224,"members":[{"constant":false,"id":214,"mutability":"mutable","name":"id","nameLocation":"1243:2:2","nodeType":"VariableDeclaration","scope":224,"src":"1235:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":213,"name":"bytes32","nodeType":"ElementaryTypeName","src":"1235:7:2","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"},{"constant":false,"id":216,"mutability":"mutable","name":"startTime","nameLocation":"1296:9:2","nodeType":"VariableDeclaration","scope":224,"src":"1289:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":215,"name":"uint64","nodeType":"ElementaryTypeName","src":"1289:6:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":218,"mutability":"mutable","name":"endTime","nameLocation":"1354:7:2","nodeType":"VariableDeclaration","scope":224,"src":"1347:14:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":217,"name":"uint64","nodeType":"ElementaryTypeName","src":"1347:6:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":221,"mutability":"mutable","name":"twap","nameLocation":"1399:4:2","nodeType":"VariableDeclaration","scope":224,"src":"1393:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$203_storage_ptr","typeString":"struct PythStructs.Price"},"typeName":{"id":220,"nodeType":"UserDefinedTypeName","pathNode":{"id":219,"name":"Price","nameLocations":["1393:5:2"],"nodeType":"IdentifierPath","referencedDeclaration":203,"src":"1393:5:2"},"referencedDeclaration":203,"src":"1393:5:2","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$203_storage_ptr","typeString":"struct PythStructs.Price"}},"visibility":"internal"},{"constant":false,"id":223,"mutability":"mutable","name":"downSlotsRatio","nameLocation":"2034:14:2","nodeType":"VariableDeclaration","scope":224,"src":"2027:21:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":222,"name":"uint32","nodeType":"ElementaryTypeName","src":"2027:6:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"name":"TwapPriceFeed","nameLocation":"1186:13:2","nodeType":"StructDefinition","scope":240,"src":"1179:876:2","visibility":"public"},{"canonicalName":"PythStructs.TwapPriceInfo","id":239,"members":[{"constant":false,"id":226,"mutability":"mutable","name":"cumulativePrice","nameLocation":"2190:15:2","nodeType":"VariableDeclaration","scope":239,"src":"2183:22:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":225,"name":"int128","nodeType":"ElementaryTypeName","src":"2183:6:2","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"},{"constant":false,"id":228,"mutability":"mutable","name":"cumulativeConf","nameLocation":"2223:14:2","nodeType":"VariableDeclaration","scope":239,"src":"2215:22:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":227,"name":"uint128","nodeType":"ElementaryTypeName","src":"2215:7:2","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"},{"constant":false,"id":230,"mutability":"mutable","name":"numDownSlots","nameLocation":"2272:12:2","nodeType":"VariableDeclaration","scope":239,"src":"2265:19:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":229,"name":"uint64","nodeType":"ElementaryTypeName","src":"2265:6:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":232,"mutability":"mutable","name":"publishSlot","nameLocation":"2301:11:2","nodeType":"VariableDeclaration","scope":239,"src":"2294:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":231,"name":"uint64","nodeType":"ElementaryTypeName","src":"2294:6:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":234,"mutability":"mutable","name":"publishTime","nameLocation":"2329:11:2","nodeType":"VariableDeclaration","scope":239,"src":"2322:18:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":233,"name":"uint64","nodeType":"ElementaryTypeName","src":"2322:6:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":236,"mutability":"mutable","name":"prevPublishTime","nameLocation":"2357:15:2","nodeType":"VariableDeclaration","scope":239,"src":"2350:22:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":235,"name":"uint64","nodeType":"ElementaryTypeName","src":"2350:6:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"},{"constant":false,"id":238,"mutability":"mutable","name":"expo","nameLocation":"2406:4:2","nodeType":"VariableDeclaration","scope":239,"src":"2400:10:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":237,"name":"int32","nodeType":"ElementaryTypeName","src":"2400:5:2","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"name":"TwapPriceInfo","nameLocation":"2141:13:2","nodeType":"StructDefinition","scope":240,"src":"2134:283:2","visibility":"public"}],"scope":241,"src":"64:2355:2","usedErrors":[]}],"src":"39:2381:2"},"id":2},"contracts/BotDetector.sol":{"ast":{"absolutePath":"contracts/BotDetector.sol","exportedSymbols":{"BotDetectorWithPyth":[827],"IPyth":[162],"IPythEvents":[192],"PythStructs":[240]},"id":828,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":242,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"32:23:3"},{"absolutePath":"@pythnetwork/pyth-sdk-solidity/IPyth.sol","file":"@pythnetwork/pyth-sdk-solidity/IPyth.sol","id":243,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":828,"sourceUnit":163,"src":"57:50:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"@pythnetwork/pyth-sdk-solidity/PythStructs.sol","file":"@pythnetwork/pyth-sdk-solidity/PythStructs.sol","id":244,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":828,"sourceUnit":241,"src":"108:56:3","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[],"canonicalName":"BotDetectorWithPyth","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":827,"linearizedBaseContracts":[827],"name":"BotDetectorWithPyth","nameLocation":"175:19:3","nodeType":"ContractDefinition","nodes":[{"constant":false,"functionSelector":"f98d06f0","id":247,"mutability":"mutable","name":"pyth","nameLocation":"214:4:3","nodeType":"VariableDeclaration","scope":827,"src":"201:17:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_contract$_IPyth_$162","typeString":"contract IPyth"},"typeName":{"id":246,"nodeType":"UserDefinedTypeName","pathNode":{"id":245,"name":"IPyth","nameLocations":["201:5:3"],"nodeType":"IdentifierPath","referencedDeclaration":162,"src":"201:5:3"},"referencedDeclaration":162,"src":"201:5:3","typeDescriptions":{"typeIdentifier":"t_contract$_IPyth_$162","typeString":"contract IPyth"}},"visibility":"public"},{"constant":false,"functionSelector":"f851a440","id":249,"mutability":"mutable","name":"admin","nameLocation":"239:5:3","nodeType":"VariableDeclaration","scope":827,"src":"224:20:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":248,"name":"address","nodeType":"ElementaryTypeName","src":"224:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"constant":false,"functionSelector":"c35fc524","id":251,"mutability":"mutable","name":"botAnalyzer","nameLocation":"265:11:3","nodeType":"VariableDeclaration","scope":827,"src":"250:26:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":250,"name":"address","nodeType":"ElementaryTypeName","src":"250:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"public"},{"canonicalName":"BotDetectorWithPyth.TradeRecord","id":264,"members":[{"constant":false,"id":253,"mutability":"mutable","name":"user","nameLocation":"320:4:3","nodeType":"VariableDeclaration","scope":264,"src":"312:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":252,"name":"address","nodeType":"ElementaryTypeName","src":"312:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":255,"mutability":"mutable","name":"timestamp","nameLocation":"342:9:3","nodeType":"VariableDeclaration","scope":264,"src":"334:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":254,"name":"uint256","nodeType":"ElementaryTypeName","src":"334:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":257,"mutability":"mutable","name":"amount","nameLocation":"369:6:3","nodeType":"VariableDeclaration","scope":264,"src":"361:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":256,"name":"uint256","nodeType":"ElementaryTypeName","src":"361:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":259,"mutability":"mutable","name":"blockNumber","nameLocation":"393:11:3","nodeType":"VariableDeclaration","scope":264,"src":"385:19:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":258,"name":"uint256","nodeType":"ElementaryTypeName","src":"385:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":261,"mutability":"mutable","name":"btcPriceAtTrade","nameLocation":"420:15:3","nodeType":"VariableDeclaration","scope":264,"src":"414:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":260,"name":"int64","nodeType":"ElementaryTypeName","src":"414:5:3","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":263,"mutability":"mutable","name":"pricePublishTime","nameLocation":"452:16:3","nodeType":"VariableDeclaration","scope":264,"src":"445:23:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":262,"name":"uint64","nodeType":"ElementaryTypeName","src":"445:6:3","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"name":"TradeRecord","nameLocation":"290:11:3","nodeType":"StructDefinition","scope":827,"src":"283:192:3","visibility":"public"},{"canonicalName":"BotDetectorWithPyth.BotEvidence","id":277,"members":[{"constant":false,"id":266,"mutability":"mutable","name":"user","nameLocation":"518:4:3","nodeType":"VariableDeclaration","scope":277,"src":"510:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":265,"name":"address","nodeType":"ElementaryTypeName","src":"510:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":268,"mutability":"mutable","name":"tradeTimestamp","nameLocation":"540:14:3","nodeType":"VariableDeclaration","scope":277,"src":"532:22:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":267,"name":"uint256","nodeType":"ElementaryTypeName","src":"532:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":270,"mutability":"mutable","name":"pricePublishTime","nameLocation":"572:16:3","nodeType":"VariableDeclaration","scope":277,"src":"564:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":269,"name":"uint256","nodeType":"ElementaryTypeName","src":"564:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":272,"mutability":"mutable","name":"priceAtTrade","nameLocation":"604:12:3","nodeType":"VariableDeclaration","scope":277,"src":"598:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":271,"name":"int64","nodeType":"ElementaryTypeName","src":"598:5:3","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":274,"mutability":"mutable","name":"reactionTimeMs","nameLocation":"634:14:3","nodeType":"VariableDeclaration","scope":277,"src":"626:22:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":273,"name":"uint256","nodeType":"ElementaryTypeName","src":"626:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":276,"mutability":"mutable","name":"botScore","nameLocation":"666:8:3","nodeType":"VariableDeclaration","scope":277,"src":"658:16:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":275,"name":"uint256","nodeType":"ElementaryTypeName","src":"658:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"BotEvidence","nameLocation":"488:11:3","nodeType":"StructDefinition","scope":827,"src":"481:200:3","visibility":"public"},{"constant":false,"functionSelector":"b1b1ffab","id":283,"mutability":"mutable","name":"userTrades","nameLocation":"728:10:3","nodeType":"VariableDeclaration","scope":827,"src":"687:51:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_TradeRecord_$264_storage_$dyn_storage_$","typeString":"mapping(address => struct BotDetectorWithPyth.TradeRecord[])"},"typeName":{"id":282,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":278,"name":"address","nodeType":"ElementaryTypeName","src":"695:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"687:33:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_TradeRecord_$264_storage_$dyn_storage_$","typeString":"mapping(address => struct BotDetectorWithPyth.TradeRecord[])"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"baseType":{"id":280,"nodeType":"UserDefinedTypeName","pathNode":{"id":279,"name":"TradeRecord","nameLocations":["706:11:3"],"nodeType":"IdentifierPath","referencedDeclaration":264,"src":"706:11:3"},"referencedDeclaration":264,"src":"706:11:3","typeDescriptions":{"typeIdentifier":"t_struct$_TradeRecord_$264_storage_ptr","typeString":"struct BotDetectorWithPyth.TradeRecord"}},"id":281,"nodeType":"ArrayTypeName","src":"706:13:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TradeRecord_$264_storage_$dyn_storage_ptr","typeString":"struct BotDetectorWithPyth.TradeRecord[]"}}},"visibility":"public"},{"constant":false,"functionSelector":"fbec1560","id":287,"mutability":"mutable","name":"flaggedAsBots","nameLocation":"776:13:3","nodeType":"VariableDeclaration","scope":827,"src":"744:45:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"typeName":{"id":286,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":284,"name":"address","nodeType":"ElementaryTypeName","src":"752:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"744:24:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":285,"name":"bool","nodeType":"ElementaryTypeName","src":"763:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}},"visibility":"public"},{"constant":false,"functionSelector":"cae2b31e","id":291,"mutability":"mutable","name":"botScore","nameLocation":"830:8:3","nodeType":"VariableDeclaration","scope":827,"src":"795:43:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"typeName":{"id":290,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":288,"name":"address","nodeType":"ElementaryTypeName","src":"803:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"795:27:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":289,"name":"uint256","nodeType":"ElementaryTypeName","src":"814:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},"visibility":"public"},{"constant":false,"functionSelector":"c32d2a02","id":296,"mutability":"mutable","name":"botEvidenceProof","nameLocation":"883:16:3","nodeType":"VariableDeclaration","scope":827,"src":"844:55:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_BotEvidence_$277_storage_$","typeString":"mapping(address => struct BotDetectorWithPyth.BotEvidence)"},"typeName":{"id":295,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":292,"name":"address","nodeType":"ElementaryTypeName","src":"852:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"844:31:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_BotEvidence_$277_storage_$","typeString":"mapping(address => struct BotDetectorWithPyth.BotEvidence)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":294,"nodeType":"UserDefinedTypeName","pathNode":{"id":293,"name":"BotEvidence","nameLocations":["863:11:3"],"nodeType":"IdentifierPath","referencedDeclaration":277,"src":"863:11:3"},"referencedDeclaration":277,"src":"863:11:3","typeDescriptions":{"typeIdentifier":"t_struct$_BotEvidence_$277_storage_ptr","typeString":"struct BotDetectorWithPyth.BotEvidence"}}},"visibility":"public"},{"anonymous":false,"eventSelector":"3a41b4a45381e8007eceed209f6413255128c9faf4a51f718825cab30cb89ffb","id":308,"name":"TradeExecuted","nameLocation":"912:13:3","nodeType":"EventDefinition","parameters":{"id":307,"nodeType":"ParameterList","parameters":[{"constant":false,"id":298,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"951:4:3","nodeType":"VariableDeclaration","scope":308,"src":"935:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":297,"name":"address","nodeType":"ElementaryTypeName","src":"935:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":300,"indexed":false,"mutability":"mutable","name":"timestamp","nameLocation":"973:9:3","nodeType":"VariableDeclaration","scope":308,"src":"965:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":299,"name":"uint256","nodeType":"ElementaryTypeName","src":"965:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":302,"indexed":false,"mutability":"mutable","name":"amount","nameLocation":"1000:6:3","nodeType":"VariableDeclaration","scope":308,"src":"992:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":301,"name":"uint256","nodeType":"ElementaryTypeName","src":"992:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":304,"indexed":false,"mutability":"mutable","name":"blockNumber","nameLocation":"1024:11:3","nodeType":"VariableDeclaration","scope":308,"src":"1016:19:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":303,"name":"uint256","nodeType":"ElementaryTypeName","src":"1016:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":306,"indexed":false,"mutability":"mutable","name":"btcPrice","nameLocation":"1051:8:3","nodeType":"VariableDeclaration","scope":308,"src":"1045:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":305,"name":"int64","nodeType":"ElementaryTypeName","src":"1045:5:3","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"925:140:3"},"src":"906:160:3"},{"anonymous":false,"eventSelector":"3ff67edbd0619cb026483f7ad63337d36c11e8efa0f694bd3e0559927dbfc09f","id":320,"name":"BotFlaggedWithProof","nameLocation":"1078:19:3","nodeType":"EventDefinition","parameters":{"id":319,"nodeType":"ParameterList","parameters":[{"constant":false,"id":310,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"1123:4:3","nodeType":"VariableDeclaration","scope":320,"src":"1107:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":309,"name":"address","nodeType":"ElementaryTypeName","src":"1107:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":312,"indexed":false,"mutability":"mutable","name":"score","nameLocation":"1145:5:3","nodeType":"VariableDeclaration","scope":320,"src":"1137:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":311,"name":"uint256","nodeType":"ElementaryTypeName","src":"1137:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":314,"indexed":false,"mutability":"mutable","name":"reason","nameLocation":"1167:6:3","nodeType":"VariableDeclaration","scope":320,"src":"1160:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":313,"name":"string","nodeType":"ElementaryTypeName","src":"1160:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":316,"indexed":false,"mutability":"mutable","name":"priceUsed","nameLocation":"1189:9:3","nodeType":"VariableDeclaration","scope":320,"src":"1183:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":315,"name":"int64","nodeType":"ElementaryTypeName","src":"1183:5:3","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"},{"constant":false,"id":318,"indexed":false,"mutability":"mutable","name":"reactionTimeMs","nameLocation":"1216:14:3","nodeType":"VariableDeclaration","scope":320,"src":"1208:22:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":317,"name":"uint256","nodeType":"ElementaryTypeName","src":"1208:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1097:139:3"},"src":"1072:165:3"},{"body":{"id":336,"nodeType":"Block","src":"1267:137:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":326,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":323,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1298:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1302:6:3","memberName":"sender","nodeType":"MemberAccess","src":"1298:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":325,"name":"botAnalyzer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":251,"src":"1312:11:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1298:25:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":330,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":327,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1327:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":328,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1331:6:3","memberName":"sender","nodeType":"MemberAccess","src":"1327:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":329,"name":"admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":249,"src":"1341:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1327:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"1298:48:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420617574686f72697a6564","id":332,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1360:16:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36","typeString":"literal_string \"Not authorized\""},"value":"Not authorized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36","typeString":"literal_string \"Not authorized\""}],"id":322,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1277:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":333,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1277:109:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":334,"nodeType":"ExpressionStatement","src":"1277:109:3"},{"id":335,"nodeType":"PlaceholderStatement","src":"1396:1:3"}]},"id":337,"name":"onlyAnalyzer","nameLocation":"1252:12:3","nodeType":"ModifierDefinition","parameters":{"id":321,"nodeType":"ParameterList","parameters":[],"src":"1264:2:3"},"src":"1243:161:3","virtual":false,"visibility":"internal"},{"body":{"id":359,"nodeType":"Block","src":"1467:108:3","statements":[{"expression":{"id":348,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":344,"name":"pyth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":247,"src":"1477:4:3","typeDescriptions":{"typeIdentifier":"t_contract$_IPyth_$162","typeString":"contract IPyth"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":346,"name":"_pythContract","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":339,"src":"1490:13:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":345,"name":"IPyth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":162,"src":"1484:5:3","typeDescriptions":{"typeIdentifier":"t_type$_t_contract$_IPyth_$162_$","typeString":"type(contract IPyth)"}},"id":347,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1484:20:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_contract$_IPyth_$162","typeString":"contract IPyth"}},"src":"1477:27:3","typeDescriptions":{"typeIdentifier":"t_contract$_IPyth_$162","typeString":"contract IPyth"}},"id":349,"nodeType":"ExpressionStatement","src":"1477:27:3"},{"expression":{"id":353,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":350,"name":"admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":249,"src":"1514:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"expression":{"id":351,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1522:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":352,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1526:6:3","memberName":"sender","nodeType":"MemberAccess","src":"1522:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1514:18:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":354,"nodeType":"ExpressionStatement","src":"1514:18:3"},{"expression":{"id":357,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":355,"name":"botAnalyzer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":251,"src":"1542:11:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":356,"name":"_botAnalyzer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":341,"src":"1556:12:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1542:26:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":358,"nodeType":"ExpressionStatement","src":"1542:26:3"}]},"id":360,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":342,"nodeType":"ParameterList","parameters":[{"constant":false,"id":339,"mutability":"mutable","name":"_pythContract","nameLocation":"1430:13:3","nodeType":"VariableDeclaration","scope":360,"src":"1422:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":338,"name":"address","nodeType":"ElementaryTypeName","src":"1422:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":341,"mutability":"mutable","name":"_botAnalyzer","nameLocation":"1453:12:3","nodeType":"VariableDeclaration","scope":360,"src":"1445:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":340,"name":"address","nodeType":"ElementaryTypeName","src":"1445:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1421:45:3"},"returnParameters":{"id":343,"nodeType":"ParameterList","parameters":[],"src":"1467:0:3"},"scope":827,"src":"1410:165:3","stateMutability":"nonpayable","virtual":false,"visibility":"public"},{"body":{"id":410,"nodeType":"Block","src":"1628:602:3","statements":[{"expression":{"arguments":[{"id":370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"1646:26:3","subExpression":{"baseExpression":{"id":366,"name":"flaggedAsBots","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":287,"src":"1647:13:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":369,"indexExpression":{"expression":{"id":367,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1661:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1665:6:3","memberName":"sender","nodeType":"MemberAccess","src":"1661:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1647:25:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"426f74206465746563746564202d2074726164696e6720626c6f636b656421","id":371,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1674:33:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_a55b8648fcfc30801a638fdb839d9752a0f67dd6a353b9ae953f14227eca24f6","typeString":"literal_string \"Bot detected - trading blocked!\""},"value":"Bot detected - trading blocked!"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a55b8648fcfc30801a638fdb839d9752a0f67dd6a353b9ae953f14227eca24f6","typeString":"literal_string \"Bot detected - trading blocked!\""}],"id":365,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1638:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":372,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1638:70:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":373,"nodeType":"ExpressionStatement","src":"1638:70:3"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":377,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":375,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":362,"src":"1726:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":376,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1735:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"1726:10:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420616d6f756e74","id":378,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1738:16:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1","typeString":"literal_string \"Invalid amount\""},"value":"Invalid amount"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1","typeString":"literal_string \"Invalid amount\""}],"id":374,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1718:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":379,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1718:37:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":380,"nodeType":"ExpressionStatement","src":"1718:37:3"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":387,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1843:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":388,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1847:6:3","memberName":"sender","nodeType":"MemberAccess","src":"1843:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":389,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1882:5:3","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":390,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1888:9:3","memberName":"timestamp","nodeType":"MemberAccess","src":"1882:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":391,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":362,"src":"1923:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":392,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"1960:5:3","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":393,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1966:6:3","memberName":"number","nodeType":"MemberAccess","src":"1960:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"30","id":394,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2007:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},{"hexValue":"30","id":395,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2044:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":386,"name":"TradeRecord","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":264,"src":"1807:11:3","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_TradeRecord_$264_storage_ptr_$","typeString":"type(struct BotDetectorWithPyth.TradeRecord storage pointer)"}},"id":396,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["1837:4:3","1871:9:3","1915:6:3","1947:11:3","1990:15:3","2026:16:3"],"names":["user","timestamp","amount","blockNumber","btcPriceAtTrade","pricePublishTime"],"nodeType":"FunctionCall","src":"1807:253:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_TradeRecord_$264_memory_ptr","typeString":"struct BotDetectorWithPyth.TradeRecord memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_TradeRecord_$264_memory_ptr","typeString":"struct BotDetectorWithPyth.TradeRecord memory"}],"expression":{"baseExpression":{"id":381,"name":"userTrades","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":283,"src":"1766:10:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_TradeRecord_$264_storage_$dyn_storage_$","typeString":"mapping(address => struct BotDetectorWithPyth.TradeRecord storage ref[] storage ref)"}},"id":384,"indexExpression":{"expression":{"id":382,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"1777:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":383,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1781:6:3","memberName":"sender","nodeType":"MemberAccess","src":"1777:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"1766:22:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TradeRecord_$264_storage_$dyn_storage","typeString":"struct BotDetectorWithPyth.TradeRecord storage ref[] storage ref"}},"id":385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"1789:4:3","memberName":"push","nodeType":"MemberAccess","src":"1766:27:3","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_TradeRecord_$264_storage_$dyn_storage_ptr_$_t_struct$_TradeRecord_$264_storage_$returns$__$attached_to$_t_array$_t_struct$_TradeRecord_$264_storage_$dyn_storage_ptr_$","typeString":"function (struct BotDetectorWithPyth.TradeRecord storage ref[] storage pointer,struct BotDetectorWithPyth.TradeRecord storage ref)"}},"id":397,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1766:304:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":398,"nodeType":"ExpressionStatement","src":"1766:304:3"},{"eventCall":{"arguments":[{"expression":{"id":400,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2113:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":401,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2117:6:3","memberName":"sender","nodeType":"MemberAccess","src":"2113:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":402,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2137:5:3","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":403,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2143:9:3","memberName":"timestamp","nodeType":"MemberAccess","src":"2137:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":404,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":362,"src":"2166:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":405,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2186:5:3","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":406,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2192:6:3","memberName":"number","nodeType":"MemberAccess","src":"2186:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"30","id":407,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2212:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":399,"name":"TradeExecuted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":308,"src":"2086:13:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_int64_$returns$__$","typeString":"function (address,uint256,uint256,uint256,int64)"}},"id":408,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2086:137:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":409,"nodeType":"EmitStatement","src":"2081:142:3"}]},"functionSelector":"02d2838b","id":411,"implemented":true,"kind":"function","modifiers":[],"name":"executeTrade","nameLocation":"1590:12:3","nodeType":"FunctionDefinition","parameters":{"id":363,"nodeType":"ParameterList","parameters":[{"constant":false,"id":362,"mutability":"mutable","name":"amount","nameLocation":"1611:6:3","nodeType":"VariableDeclaration","scope":411,"src":"1603:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":361,"name":"uint256","nodeType":"ElementaryTypeName","src":"1603:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1602:16:3"},"returnParameters":{"id":364,"nodeType":"ParameterList","parameters":[],"src":"1628:0:3"},"scope":827,"src":"1581:649:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":506,"nodeType":"Block","src":"2386:899:3","statements":[{"expression":{"arguments":[{"id":426,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"!","prefix":true,"src":"2404:26:3","subExpression":{"baseExpression":{"id":422,"name":"flaggedAsBots","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":287,"src":"2405:13:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":425,"indexExpression":{"expression":{"id":423,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2419:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":424,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2423:6:3","memberName":"sender","nodeType":"MemberAccess","src":"2419:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2405:25:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"426f74206465746563746564202d2074726164696e6720626c6f636b656421","id":427,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2432:33:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_a55b8648fcfc30801a638fdb839d9752a0f67dd6a353b9ae953f14227eca24f6","typeString":"literal_string \"Bot detected - trading blocked!\""},"value":"Bot detected - trading blocked!"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a55b8648fcfc30801a638fdb839d9752a0f67dd6a353b9ae953f14227eca24f6","typeString":"literal_string \"Bot detected - trading blocked!\""}],"id":421,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2396:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":428,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2396:70:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":429,"nodeType":"ExpressionStatement","src":"2396:70:3"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":433,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":431,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":413,"src":"2484:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":432,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2493:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"2484:10:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420616d6f756e74","id":434,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2496:16:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1","typeString":"literal_string \"Invalid amount\""},"value":"Invalid amount"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2fd1dfd944df9898ee4c79794168926172c3d96d7664ff9919bb7080bb018af1","typeString":"literal_string \"Invalid amount\""}],"id":430,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2476:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":435,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2476:37:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":436,"nodeType":"ExpressionStatement","src":"2476:37:3"},{"assignments":[438],"declarations":[{"constant":false,"id":438,"mutability":"mutable","name":"fee","nameLocation":"2529:3:3","nodeType":"VariableDeclaration","scope":506,"src":"2524:8:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":437,"name":"uint","nodeType":"ElementaryTypeName","src":"2524:4:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":443,"initialValue":{"arguments":[{"id":441,"name":"priceUpdateData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":416,"src":"2553:15:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes calldata[] calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes calldata[] calldata"}],"expression":{"id":439,"name":"pyth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":247,"src":"2535:4:3","typeDescriptions":{"typeIdentifier":"t_contract$_IPyth_$162","typeString":"contract IPyth"}},"id":440,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2540:12:3","memberName":"getUpdateFee","nodeType":"MemberAccess","referencedDeclaration":75,"src":"2535:17:3","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$returns$_t_uint256_$","typeString":"function (bytes memory[] memory) view external returns (uint256)"}},"id":442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2535:34:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"2524:45:3"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":448,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":445,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2587:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":446,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2591:5:3","memberName":"value","nodeType":"MemberAccess","src":"2587:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":447,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":438,"src":"2600:3:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2587:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e7420666565","id":449,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2605:18:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_7d4281b3c746fd818dd98635f57c54464f30641c177dcb423a4f8d1eb24128af","typeString":"literal_string \"Insufficient fee\""},"value":"Insufficient fee"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7d4281b3c746fd818dd98635f57c54464f30641c177dcb423a4f8d1eb24128af","typeString":"literal_string \"Insufficient fee\""}],"id":444,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2579:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":450,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2579:45:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":451,"nodeType":"ExpressionStatement","src":"2579:45:3"},{"expression":{"arguments":[{"id":457,"name":"priceUpdateData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":416,"src":"2669:15:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes calldata[] calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes calldata[] calldata"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes calldata[] calldata"}],"expression":{"id":452,"name":"pyth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":247,"src":"2635:4:3","typeDescriptions":{"typeIdentifier":"t_contract$_IPyth_$162","typeString":"contract IPyth"}},"id":454,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2640:16:3","memberName":"updatePriceFeeds","nodeType":"MemberAccess","referencedDeclaration":53,"src":"2635:21:3","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$returns$__$","typeString":"function (bytes memory[] memory) payable external"}},"id":456,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":455,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":438,"src":"2664:3:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"2635:33:3","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$returns$__$value","typeString":"function (bytes memory[] memory) payable external"}},"id":458,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2635:50:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":459,"nodeType":"ExpressionStatement","src":"2635:50:3"},{"assignments":[464],"declarations":[{"constant":false,"id":464,"mutability":"mutable","name":"price","nameLocation":"2721:5:3","nodeType":"VariableDeclaration","scope":506,"src":"2696:30:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$203_memory_ptr","typeString":"struct PythStructs.Price"},"typeName":{"id":463,"nodeType":"UserDefinedTypeName","pathNode":{"id":462,"name":"PythStructs.Price","nameLocations":["2696:11:3","2708:5:3"],"nodeType":"IdentifierPath","referencedDeclaration":203,"src":"2696:17:3"},"referencedDeclaration":203,"src":"2696:17:3","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$203_storage_ptr","typeString":"struct PythStructs.Price"}},"visibility":"internal"}],"id":470,"initialValue":{"arguments":[{"id":467,"name":"priceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":418,"src":"2754:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},{"hexValue":"3630","id":468,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2763:2:3","typeDescriptions":{"typeIdentifier":"t_rational_60_by_1","typeString":"int_const 60"},"value":"60"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"},{"typeIdentifier":"t_rational_60_by_1","typeString":"int_const 60"}],"expression":{"id":465,"name":"pyth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":247,"src":"2729:4:3","typeDescriptions":{"typeIdentifier":"t_contract$_IPyth_$162","typeString":"contract IPyth"}},"id":466,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2734:19:3","memberName":"getPriceNoOlderThan","nodeType":"MemberAccess","referencedDeclaration":26,"src":"2729:24:3","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_bytes32_$_t_uint256_$returns$_t_struct$_Price_$203_memory_ptr_$","typeString":"function (bytes32,uint256) view external returns (struct PythStructs.Price memory)"}},"id":469,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2729:37:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Price_$203_memory_ptr","typeString":"struct PythStructs.Price memory"}},"nodeType":"VariableDeclarationStatement","src":"2696:70:3"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":477,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2854:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":478,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2858:6:3","memberName":"sender","nodeType":"MemberAccess","src":"2854:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":479,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2893:5:3","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":480,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2899:9:3","memberName":"timestamp","nodeType":"MemberAccess","src":"2893:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":481,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":413,"src":"2934:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":482,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"2971:5:3","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2977:6:3","memberName":"number","nodeType":"MemberAccess","src":"2971:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":484,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":464,"src":"3018:5:3","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$203_memory_ptr","typeString":"struct PythStructs.Price memory"}},"id":485,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3024:5:3","memberName":"price","nodeType":"MemberAccess","referencedDeclaration":196,"src":"3018:11:3","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},{"arguments":[{"expression":{"id":488,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":464,"src":"3072:5:3","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$203_memory_ptr","typeString":"struct PythStructs.Price memory"}},"id":489,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3078:11:3","memberName":"publishTime","nodeType":"MemberAccess","referencedDeclaration":202,"src":"3072:17:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":487,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3065:6:3","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":486,"name":"uint64","nodeType":"ElementaryTypeName","src":"3065:6:3","typeDescriptions":{}}},"id":490,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3065:25:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_int64","typeString":"int64"},{"typeIdentifier":"t_uint64","typeString":"uint64"}],"id":476,"name":"TradeRecord","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":264,"src":"2818:11:3","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_TradeRecord_$264_storage_ptr_$","typeString":"type(struct BotDetectorWithPyth.TradeRecord storage pointer)"}},"id":491,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["2848:4:3","2882:9:3","2926:6:3","2958:11:3","3001:15:3","3047:16:3"],"names":["user","timestamp","amount","blockNumber","btcPriceAtTrade","pricePublishTime"],"nodeType":"FunctionCall","src":"2818:287:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_TradeRecord_$264_memory_ptr","typeString":"struct BotDetectorWithPyth.TradeRecord memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_TradeRecord_$264_memory_ptr","typeString":"struct BotDetectorWithPyth.TradeRecord memory"}],"expression":{"baseExpression":{"id":471,"name":"userTrades","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":283,"src":"2777:10:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_TradeRecord_$264_storage_$dyn_storage_$","typeString":"mapping(address => struct BotDetectorWithPyth.TradeRecord storage ref[] storage ref)"}},"id":474,"indexExpression":{"expression":{"id":472,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2788:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":473,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2792:6:3","memberName":"sender","nodeType":"MemberAccess","src":"2788:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2777:22:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TradeRecord_$264_storage_$dyn_storage","typeString":"struct BotDetectorWithPyth.TradeRecord storage ref[] storage ref"}},"id":475,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2800:4:3","memberName":"push","nodeType":"MemberAccess","src":"2777:27:3","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_TradeRecord_$264_storage_$dyn_storage_ptr_$_t_struct$_TradeRecord_$264_storage_$returns$__$attached_to$_t_array$_t_struct$_TradeRecord_$264_storage_$dyn_storage_ptr_$","typeString":"function (struct BotDetectorWithPyth.TradeRecord storage ref[] storage pointer,struct BotDetectorWithPyth.TradeRecord storage ref)"}},"id":492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2777:338:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":493,"nodeType":"ExpressionStatement","src":"2777:338:3"},{"eventCall":{"arguments":[{"expression":{"id":495,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3158:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":496,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3162:6:3","memberName":"sender","nodeType":"MemberAccess","src":"3158:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":497,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3182:5:3","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":498,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3188:9:3","memberName":"timestamp","nodeType":"MemberAccess","src":"3182:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":499,"name":"amount","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":413,"src":"3211:6:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":500,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3231:5:3","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":501,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3237:6:3","memberName":"number","nodeType":"MemberAccess","src":"3231:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":502,"name":"price","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":464,"src":"3257:5:3","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$203_memory_ptr","typeString":"struct PythStructs.Price memory"}},"id":503,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"3263:5:3","memberName":"price","nodeType":"MemberAccess","referencedDeclaration":196,"src":"3257:11:3","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_int64","typeString":"int64"}],"id":494,"name":"TradeExecuted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":308,"src":"3131:13:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_int64_$returns$__$","typeString":"function (address,uint256,uint256,uint256,int64)"}},"id":504,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3131:147:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":505,"nodeType":"EmitStatement","src":"3126:152:3"}]},"functionSelector":"9cda8908","id":507,"implemented":true,"kind":"function","modifiers":[],"name":"executeTradeWithPriceProof","nameLocation":"2245:26:3","nodeType":"FunctionDefinition","parameters":{"id":419,"nodeType":"ParameterList","parameters":[{"constant":false,"id":413,"mutability":"mutable","name":"amount","nameLocation":"2289:6:3","nodeType":"VariableDeclaration","scope":507,"src":"2281:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":412,"name":"uint256","nodeType":"ElementaryTypeName","src":"2281:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":416,"mutability":"mutable","name":"priceUpdateData","nameLocation":"2322:15:3","nodeType":"VariableDeclaration","scope":507,"src":"2305:32:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":414,"name":"bytes","nodeType":"ElementaryTypeName","src":"2305:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":415,"nodeType":"ArrayTypeName","src":"2305:7:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":418,"mutability":"mutable","name":"priceId","nameLocation":"2355:7:3","nodeType":"VariableDeclaration","scope":507,"src":"2347:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":417,"name":"bytes32","nodeType":"ElementaryTypeName","src":"2347:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"2271:97:3"},"returnParameters":{"id":420,"nodeType":"ParameterList","parameters":[],"src":"2386:0:3"},"scope":827,"src":"2236:1049:3","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":594,"nodeType":"Block","src":"3529:472:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":531,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":527,"name":"users","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":510,"src":"3547:5:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":528,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3553:6:3","memberName":"length","nodeType":"MemberAccess","src":"3547:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":529,"name":"scores","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":513,"src":"3563:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":530,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3570:6:3","memberName":"length","nodeType":"MemberAccess","src":"3563:13:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3547:29:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c656e677468206d69736d61746368","id":532,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3578:17:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_bb46a6fe2ea6b18f462b236ffc808abf66026114a0bc6a6c72c11149e00d9ea8","typeString":"literal_string \"Length mismatch\""},"value":"Length mismatch"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_bb46a6fe2ea6b18f462b236ffc808abf66026114a0bc6a6c72c11149e00d9ea8","typeString":"literal_string \"Length mismatch\""}],"id":526,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3539:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":533,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3539:57:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":534,"nodeType":"ExpressionStatement","src":"3539:57:3"},{"assignments":[536],"declarations":[{"constant":false,"id":536,"mutability":"mutable","name":"fee","nameLocation":"3612:3:3","nodeType":"VariableDeclaration","scope":594,"src":"3607:8:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":535,"name":"uint","nodeType":"ElementaryTypeName","src":"3607:4:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":541,"initialValue":{"arguments":[{"id":539,"name":"priceUpdateData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"3636:15:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes calldata[] calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes calldata[] calldata"}],"expression":{"id":537,"name":"pyth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":247,"src":"3618:4:3","typeDescriptions":{"typeIdentifier":"t_contract$_IPyth_$162","typeString":"contract IPyth"}},"id":538,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3623:12:3","memberName":"getUpdateFee","nodeType":"MemberAccess","referencedDeclaration":75,"src":"3618:17:3","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$returns$_t_uint256_$","typeString":"function (bytes memory[] memory) view external returns (uint256)"}},"id":540,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3618:34:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3607:45:3"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":546,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":543,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3670:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":544,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3674:5:3","memberName":"value","nodeType":"MemberAccess","src":"3670:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"id":545,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":536,"src":"3683:3:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3670:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e73756666696369656e74205079746820666565","id":547,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3688:23:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_632c8c9cbaacea7e2b268c41b64991b4e752b4acc753e1f2e1b4ac316c65874a","typeString":"literal_string \"Insufficient Pyth fee\""},"value":"Insufficient Pyth fee"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_632c8c9cbaacea7e2b268c41b64991b4e752b4acc753e1f2e1b4ac316c65874a","typeString":"literal_string \"Insufficient Pyth fee\""}],"id":542,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3662:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":548,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3662:50:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":549,"nodeType":"ExpressionStatement","src":"3662:50:3"},{"expression":{"arguments":[{"id":555,"name":"priceUpdateData","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":519,"src":"3757:15:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes calldata[] calldata"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes calldata[] calldata"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes calldata[] calldata"}],"expression":{"id":550,"name":"pyth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":247,"src":"3723:4:3","typeDescriptions":{"typeIdentifier":"t_contract$_IPyth_$162","typeString":"contract IPyth"}},"id":552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3728:16:3","memberName":"updatePriceFeeds","nodeType":"MemberAccess","referencedDeclaration":53,"src":"3723:21:3","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$returns$__$","typeString":"function (bytes memory[] memory) payable external"}},"id":554,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"names":["value"],"nodeType":"FunctionCallOptions","options":[{"id":553,"name":"fee","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":536,"src":"3752:3:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"src":"3723:33:3","typeDescriptions":{"typeIdentifier":"t_function_external_payable$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$returns$__$value","typeString":"function (bytes memory[] memory) payable external"}},"id":556,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3723:50:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":557,"nodeType":"ExpressionStatement","src":"3723:50:3"},{"assignments":[562],"declarations":[{"constant":false,"id":562,"mutability":"mutable","name":"currentPrice","nameLocation":"3809:12:3","nodeType":"VariableDeclaration","scope":594,"src":"3784:37:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$203_memory_ptr","typeString":"struct PythStructs.Price"},"typeName":{"id":561,"nodeType":"UserDefinedTypeName","pathNode":{"id":560,"name":"PythStructs.Price","nameLocations":["3784:11:3","3796:5:3"],"nodeType":"IdentifierPath","referencedDeclaration":203,"src":"3784:17:3"},"referencedDeclaration":203,"src":"3784:17:3","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$203_storage_ptr","typeString":"struct PythStructs.Price"}},"visibility":"internal"}],"id":567,"initialValue":{"arguments":[{"id":565,"name":"priceId","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":521,"src":"3844:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bytes32","typeString":"bytes32"}],"expression":{"id":563,"name":"pyth","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":247,"src":"3824:4:3","typeDescriptions":{"typeIdentifier":"t_contract$_IPyth_$162","typeString":"contract IPyth"}},"id":564,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3829:14:3","memberName":"getPriceUnsafe","nodeType":"MemberAccess","referencedDeclaration":15,"src":"3824:19:3","typeDescriptions":{"typeIdentifier":"t_function_external_view$_t_bytes32_$returns$_t_struct$_Price_$203_memory_ptr_$","typeString":"function (bytes32) view external returns (struct PythStructs.Price memory)"}},"id":566,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3824:28:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Price_$203_memory_ptr","typeString":"struct PythStructs.Price memory"}},"nodeType":"VariableDeclarationStatement","src":"3784:68:3"},{"body":{"id":592,"nodeType":"Block","src":"3903:92:3","statements":[{"expression":{"arguments":[{"baseExpression":{"id":580,"name":"users","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":510,"src":"3938:5:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":582,"indexExpression":{"id":581,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":569,"src":"3944:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3938:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"baseExpression":{"id":583,"name":"scores","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":513,"src":"3948:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":585,"indexExpression":{"id":584,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":569,"src":"3955:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3948:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"baseExpression":{"id":586,"name":"reasons","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":516,"src":"3959:7:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string calldata[] calldata"}},"id":588,"indexExpression":{"id":587,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":569,"src":"3967:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3959:10:3","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"id":589,"name":"currentPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":562,"src":"3971:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$203_memory_ptr","typeString":"struct PythStructs.Price memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_struct$_Price_$203_memory_ptr","typeString":"struct PythStructs.Price memory"}],"id":579,"name":"_flagBotWithEvidence","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":688,"src":"3917:20:3","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_string_calldata_ptr_$_t_struct$_Price_$203_memory_ptr_$returns$__$","typeString":"function (address,uint256,string calldata,struct PythStructs.Price memory)"}},"id":590,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3917:67:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":591,"nodeType":"ExpressionStatement","src":"3917:67:3"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":572,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":569,"src":"3880:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":573,"name":"users","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":510,"src":"3884:5:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":574,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3890:6:3","memberName":"length","nodeType":"MemberAccess","src":"3884:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3880:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":593,"initializationExpression":{"assignments":[569],"declarations":[{"constant":false,"id":569,"mutability":"mutable","name":"i","nameLocation":"3873:1:3","nodeType":"VariableDeclaration","scope":593,"src":"3868:6:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":568,"name":"uint","nodeType":"ElementaryTypeName","src":"3868:4:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":571,"initialValue":{"hexValue":"30","id":570,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3877:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"3868:10:3"},"loopExpression":{"expression":{"id":577,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"3898:3:3","subExpression":{"id":576,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":569,"src":"3898:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":578,"nodeType":"ExpressionStatement","src":"3898:3:3"},"nodeType":"ForStatement","src":"3863:132:3"}]},"functionSelector":"1ca1b065","id":595,"implemented":true,"kind":"function","modifiers":[{"id":524,"kind":"modifierInvocation","modifierName":{"id":523,"name":"onlyAnalyzer","nameLocations":["3516:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":337,"src":"3516:12:3"},"nodeType":"ModifierInvocation","src":"3516:12:3"}],"name":"flagBotsWithPythProof","nameLocation":"3300:21:3","nodeType":"FunctionDefinition","parameters":{"id":522,"nodeType":"ParameterList","parameters":[{"constant":false,"id":510,"mutability":"mutable","name":"users","nameLocation":"3350:5:3","nodeType":"VariableDeclaration","scope":595,"src":"3331:24:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":508,"name":"address","nodeType":"ElementaryTypeName","src":"3331:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":509,"nodeType":"ArrayTypeName","src":"3331:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":513,"mutability":"mutable","name":"scores","nameLocation":"3384:6:3","nodeType":"VariableDeclaration","scope":595,"src":"3365:25:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":511,"name":"uint256","nodeType":"ElementaryTypeName","src":"3365:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":512,"nodeType":"ArrayTypeName","src":"3365:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":516,"mutability":"mutable","name":"reasons","nameLocation":"3418:7:3","nodeType":"VariableDeclaration","scope":595,"src":"3400:25:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":514,"name":"string","nodeType":"ElementaryTypeName","src":"3400:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":515,"nodeType":"ArrayTypeName","src":"3400:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"},{"constant":false,"id":519,"mutability":"mutable","name":"priceUpdateData","nameLocation":"3452:15:3","nodeType":"VariableDeclaration","scope":595,"src":"3435:32:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr","typeString":"bytes[]"},"typeName":{"baseType":{"id":517,"name":"bytes","nodeType":"ElementaryTypeName","src":"3435:5:3","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"id":518,"nodeType":"ArrayTypeName","src":"3435:7:3","typeDescriptions":{"typeIdentifier":"t_array$_t_bytes_storage_$dyn_storage_ptr","typeString":"bytes[]"}},"visibility":"internal"},{"constant":false,"id":521,"mutability":"mutable","name":"priceId","nameLocation":"3485:7:3","nodeType":"VariableDeclaration","scope":595,"src":"3477:15:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"},"typeName":{"id":520,"name":"bytes32","nodeType":"ElementaryTypeName","src":"3477:7:3","typeDescriptions":{"typeIdentifier":"t_bytes32","typeString":"bytes32"}},"visibility":"internal"}],"src":"3321:177:3"},"returnParameters":{"id":525,"nodeType":"ParameterList","parameters":[],"src":"3529:0:3"},"scope":827,"src":"3291:710:3","stateMutability":"payable","virtual":false,"visibility":"external"},{"body":{"id":687,"nodeType":"Block","src":"4243:965:3","statements":[{"expression":{"id":611,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":607,"name":"flaggedAsBots","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":287,"src":"4253:13:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":609,"indexExpression":{"id":608,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":597,"src":"4267:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4253:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":610,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4275:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"4253:26:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":612,"nodeType":"ExpressionStatement","src":"4253:26:3"},{"expression":{"id":617,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":613,"name":"botScore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":291,"src":"4289:8:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":615,"indexExpression":{"id":614,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":597,"src":"4298:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4289:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":616,"name":"score","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":599,"src":"4306:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4289:22:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":618,"nodeType":"ExpressionStatement","src":"4289:22:3"},{"assignments":[623],"declarations":[{"constant":false,"id":623,"mutability":"mutable","name":"trades","nameLocation":"4344:6:3","nodeType":"VariableDeclaration","scope":687,"src":"4322:28:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TradeRecord_$264_storage_$dyn_storage_ptr","typeString":"struct BotDetectorWithPyth.TradeRecord[]"},"typeName":{"baseType":{"id":621,"nodeType":"UserDefinedTypeName","pathNode":{"id":620,"name":"TradeRecord","nameLocations":["4322:11:3"],"nodeType":"IdentifierPath","referencedDeclaration":264,"src":"4322:11:3"},"referencedDeclaration":264,"src":"4322:11:3","typeDescriptions":{"typeIdentifier":"t_struct$_TradeRecord_$264_storage_ptr","typeString":"struct BotDetectorWithPyth.TradeRecord"}},"id":622,"nodeType":"ArrayTypeName","src":"4322:13:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TradeRecord_$264_storage_$dyn_storage_ptr","typeString":"struct BotDetectorWithPyth.TradeRecord[]"}},"visibility":"internal"}],"id":627,"initialValue":{"baseExpression":{"id":624,"name":"userTrades","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":283,"src":"4353:10:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_TradeRecord_$264_storage_$dyn_storage_$","typeString":"mapping(address => struct BotDetectorWithPyth.TradeRecord storage ref[] storage ref)"}},"id":626,"indexExpression":{"id":625,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":597,"src":"4364:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4353:16:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TradeRecord_$264_storage_$dyn_storage","typeString":"struct BotDetectorWithPyth.TradeRecord storage ref[] storage ref"}},"nodeType":"VariableDeclarationStatement","src":"4322:47:3"},{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":631,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":628,"name":"trades","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":623,"src":"4383:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TradeRecord_$264_storage_$dyn_storage_ptr","typeString":"struct BotDetectorWithPyth.TradeRecord storage ref[] storage pointer"}},"id":629,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4390:6:3","memberName":"length","nodeType":"MemberAccess","src":"4383:13:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"hexValue":"30","id":630,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4399:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"4383:17:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":686,"nodeType":"IfStatement","src":"4379:823:3","trueBody":{"id":685,"nodeType":"Block","src":"4402:800:3","statements":[{"assignments":[634],"declarations":[{"constant":false,"id":634,"mutability":"mutable","name":"lastTrade","nameLocation":"4435:9:3","nodeType":"VariableDeclaration","scope":685,"src":"4416:28:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_TradeRecord_$264_memory_ptr","typeString":"struct BotDetectorWithPyth.TradeRecord"},"typeName":{"id":633,"nodeType":"UserDefinedTypeName","pathNode":{"id":632,"name":"TradeRecord","nameLocations":["4416:11:3"],"nodeType":"IdentifierPath","referencedDeclaration":264,"src":"4416:11:3"},"referencedDeclaration":264,"src":"4416:11:3","typeDescriptions":{"typeIdentifier":"t_struct$_TradeRecord_$264_storage_ptr","typeString":"struct BotDetectorWithPyth.TradeRecord"}},"visibility":"internal"}],"id":641,"initialValue":{"baseExpression":{"id":635,"name":"trades","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":623,"src":"4447:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TradeRecord_$264_storage_$dyn_storage_ptr","typeString":"struct BotDetectorWithPyth.TradeRecord storage ref[] storage pointer"}},"id":640,"indexExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":639,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":636,"name":"trades","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":623,"src":"4454:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TradeRecord_$264_storage_$dyn_storage_ptr","typeString":"struct BotDetectorWithPyth.TradeRecord storage ref[] storage pointer"}},"id":637,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4461:6:3","memberName":"length","nodeType":"MemberAccess","src":"4454:13:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"hexValue":"31","id":638,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4470:1:3","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"src":"4454:17:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4447:25:3","typeDescriptions":{"typeIdentifier":"t_struct$_TradeRecord_$264_storage","typeString":"struct BotDetectorWithPyth.TradeRecord storage ref"}},"nodeType":"VariableDeclarationStatement","src":"4416:56:3"},{"assignments":[643],"declarations":[{"constant":false,"id":643,"mutability":"mutable","name":"reactionTime","nameLocation":"4495:12:3","nodeType":"VariableDeclaration","scope":685,"src":"4487:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":642,"name":"uint256","nodeType":"ElementaryTypeName","src":"4487:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":659,"initialValue":{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":648,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":644,"name":"lastTrade","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":634,"src":"4510:9:3","typeDescriptions":{"typeIdentifier":"t_struct$_TradeRecord_$264_memory_ptr","typeString":"struct BotDetectorWithPyth.TradeRecord memory"}},"id":645,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4520:9:3","memberName":"timestamp","nodeType":"MemberAccess","referencedDeclaration":255,"src":"4510:19:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":">","rightExpression":{"expression":{"id":646,"name":"currentPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":604,"src":"4548:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$203_memory_ptr","typeString":"struct PythStructs.Price memory"}},"id":647,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4561:11:3","memberName":"publishTime","nodeType":"MemberAccess","referencedDeclaration":202,"src":"4548:24:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4510:62:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseExpression":{"hexValue":"30","id":657,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4665:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"id":658,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"Conditional","src":"4510:156:3","trueExpression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":656,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"components":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":653,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":649,"name":"lastTrade","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":634,"src":"4592:9:3","typeDescriptions":{"typeIdentifier":"t_struct$_TradeRecord_$264_memory_ptr","typeString":"struct BotDetectorWithPyth.TradeRecord memory"}},"id":650,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4602:9:3","memberName":"timestamp","nodeType":"MemberAccess","referencedDeclaration":255,"src":"4592:19:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"-","rightExpression":{"expression":{"id":651,"name":"currentPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":604,"src":"4614:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$203_memory_ptr","typeString":"struct PythStructs.Price memory"}},"id":652,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4627:11:3","memberName":"publishTime","nodeType":"MemberAccess","referencedDeclaration":202,"src":"4614:24:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4592:46:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":654,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"4591:48:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"*","rightExpression":{"hexValue":"31303030","id":655,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"4642:4:3","typeDescriptions":{"typeIdentifier":"t_rational_1000_by_1","typeString":"int_const 1000"},"value":"1000"},"src":"4591:55:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"4487:179:3"},{"expression":{"id":674,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":660,"name":"botEvidenceProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":296,"src":"4681:16:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_BotEvidence_$277_storage_$","typeString":"mapping(address => struct BotDetectorWithPyth.BotEvidence storage ref)"}},"id":662,"indexExpression":{"id":661,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":597,"src":"4698:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4681:22:3","typeDescriptions":{"typeIdentifier":"t_struct$_BotEvidence_$277_storage","typeString":"struct BotDetectorWithPyth.BotEvidence storage ref"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":664,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":597,"src":"4742:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":665,"name":"lastTrade","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":634,"src":"4780:9:3","typeDescriptions":{"typeIdentifier":"t_struct$_TradeRecord_$264_memory_ptr","typeString":"struct BotDetectorWithPyth.TradeRecord memory"}},"id":666,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4790:9:3","memberName":"timestamp","nodeType":"MemberAccess","referencedDeclaration":255,"src":"4780:19:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":667,"name":"currentPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":604,"src":"4835:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$203_memory_ptr","typeString":"struct PythStructs.Price memory"}},"id":668,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4848:11:3","memberName":"publishTime","nodeType":"MemberAccess","referencedDeclaration":202,"src":"4835:24:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"expression":{"id":669,"name":"currentPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":604,"src":"4891:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$203_memory_ptr","typeString":"struct PythStructs.Price memory"}},"id":670,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"4904:5:3","memberName":"price","nodeType":"MemberAccess","referencedDeclaration":196,"src":"4891:18:3","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},{"id":671,"name":"reactionTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":643,"src":"4943:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":672,"name":"score","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":599,"src":"4983:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_int64","typeString":"int64"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":663,"name":"BotEvidence","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":277,"src":"4706:11:3","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_BotEvidence_$277_storage_ptr_$","typeString":"type(struct BotDetectorWithPyth.BotEvidence storage pointer)"}},"id":673,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":["4736:4:3","4764:14:3","4817:16:3","4877:12:3","4927:14:3","4973:8:3"],"names":["user","tradeTimestamp","pricePublishTime","priceAtTrade","reactionTimeMs","botScore"],"nodeType":"FunctionCall","src":"4706:297:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_BotEvidence_$277_memory_ptr","typeString":"struct BotDetectorWithPyth.BotEvidence memory"}},"src":"4681:322:3","typeDescriptions":{"typeIdentifier":"t_struct$_BotEvidence_$277_storage","typeString":"struct BotDetectorWithPyth.BotEvidence storage ref"}},"id":675,"nodeType":"ExpressionStatement","src":"4681:322:3"},{"eventCall":{"arguments":[{"id":677,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":597,"src":"5060:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":678,"name":"score","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":599,"src":"5082:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":679,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":601,"src":"5105:6:3","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"}},{"expression":{"id":680,"name":"currentPrice","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":604,"src":"5129:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$203_memory_ptr","typeString":"struct PythStructs.Price memory"}},"id":681,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5142:5:3","memberName":"price","nodeType":"MemberAccess","referencedDeclaration":196,"src":"5129:18:3","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},{"id":682,"name":"reactionTime","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":643,"src":"5165:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_calldata_ptr","typeString":"string calldata"},{"typeIdentifier":"t_int64","typeString":"int64"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":676,"name":"BotFlaggedWithProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":320,"src":"5023:19:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_uint256_$_t_string_memory_ptr_$_t_int64_$_t_uint256_$returns$__$","typeString":"function (address,uint256,string memory,int64,uint256)"}},"id":683,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5023:168:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":684,"nodeType":"EmitStatement","src":"5018:173:3"}]}}]},"id":688,"implemented":true,"kind":"function","modifiers":[],"name":"_flagBotWithEvidence","nameLocation":"4084:20:3","nodeType":"FunctionDefinition","parameters":{"id":605,"nodeType":"ParameterList","parameters":[{"constant":false,"id":597,"mutability":"mutable","name":"user","nameLocation":"4122:4:3","nodeType":"VariableDeclaration","scope":688,"src":"4114:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":596,"name":"address","nodeType":"ElementaryTypeName","src":"4114:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":599,"mutability":"mutable","name":"score","nameLocation":"4144:5:3","nodeType":"VariableDeclaration","scope":688,"src":"4136:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":598,"name":"uint256","nodeType":"ElementaryTypeName","src":"4136:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":601,"mutability":"mutable","name":"reason","nameLocation":"4175:6:3","nodeType":"VariableDeclaration","scope":688,"src":"4159:22:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_string_calldata_ptr","typeString":"string"},"typeName":{"id":600,"name":"string","nodeType":"ElementaryTypeName","src":"4159:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":604,"mutability":"mutable","name":"currentPrice","nameLocation":"4216:12:3","nodeType":"VariableDeclaration","scope":688,"src":"4191:37:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$203_memory_ptr","typeString":"struct PythStructs.Price"},"typeName":{"id":603,"nodeType":"UserDefinedTypeName","pathNode":{"id":602,"name":"PythStructs.Price","nameLocations":["4191:11:3","4203:5:3"],"nodeType":"IdentifierPath","referencedDeclaration":203,"src":"4191:17:3"},"referencedDeclaration":203,"src":"4191:17:3","typeDescriptions":{"typeIdentifier":"t_struct$_Price_$203_storage_ptr","typeString":"struct PythStructs.Price"}},"visibility":"internal"}],"src":"4104:130:3"},"returnParameters":{"id":606,"nodeType":"ParameterList","parameters":[],"src":"4243:0:3"},"scope":827,"src":"4075:1133:3","stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"body":{"id":742,"nodeType":"Block","src":"5364:223:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":707,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":703,"name":"users","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":691,"src":"5382:5:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":704,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5388:6:3","memberName":"length","nodeType":"MemberAccess","src":"5382:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"id":705,"name":"scores","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":694,"src":"5398:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":706,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5405:6:3","memberName":"length","nodeType":"MemberAccess","src":"5398:13:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5382:29:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4c656e677468206d69736d61746368","id":708,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5413:17:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_bb46a6fe2ea6b18f462b236ffc808abf66026114a0bc6a6c72c11149e00d9ea8","typeString":"literal_string \"Length mismatch\""},"value":"Length mismatch"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_bb46a6fe2ea6b18f462b236ffc808abf66026114a0bc6a6c72c11149e00d9ea8","typeString":"literal_string \"Length mismatch\""}],"id":702,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5374:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":709,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5374:57:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":710,"nodeType":"ExpressionStatement","src":"5374:57:3"},{"body":{"id":740,"nodeType":"Block","src":"5482:99:3","statements":[{"expression":{"id":728,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":722,"name":"flaggedAsBots","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":287,"src":"5496:13:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":726,"indexExpression":{"baseExpression":{"id":723,"name":"users","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":691,"src":"5510:5:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":725,"indexExpression":{"id":724,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":712,"src":"5516:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5510:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5496:23:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":727,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5522:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5496:30:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":729,"nodeType":"ExpressionStatement","src":"5496:30:3"},{"expression":{"id":738,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":730,"name":"botScore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":291,"src":"5540:8:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":734,"indexExpression":{"baseExpression":{"id":731,"name":"users","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":691,"src":"5549:5:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":733,"indexExpression":{"id":732,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":712,"src":"5555:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5549:8:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5540:18:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"baseExpression":{"id":735,"name":"scores","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":694,"src":"5561:6:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[] calldata"}},"id":737,"indexExpression":{"id":736,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":712,"src":"5568:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5561:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5540:30:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":739,"nodeType":"ExpressionStatement","src":"5540:30:3"}]},"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":718,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":715,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":712,"src":"5459:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"id":716,"name":"users","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":691,"src":"5463:5:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[] calldata"}},"id":717,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5469:6:3","memberName":"length","nodeType":"MemberAccess","src":"5463:12:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5459:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":741,"initializationExpression":{"assignments":[712],"declarations":[{"constant":false,"id":712,"mutability":"mutable","name":"i","nameLocation":"5452:1:3","nodeType":"VariableDeclaration","scope":741,"src":"5447:6:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":711,"name":"uint","nodeType":"ElementaryTypeName","src":"5447:4:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":714,"initialValue":{"hexValue":"30","id":713,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5456:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"nodeType":"VariableDeclarationStatement","src":"5447:10:3"},"loopExpression":{"expression":{"id":720,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"UnaryOperation","operator":"++","prefix":false,"src":"5477:3:3","subExpression":{"id":719,"name":"i","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":712,"src":"5477:1:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":721,"nodeType":"ExpressionStatement","src":"5477:3:3"},"nodeType":"ForStatement","src":"5442:139:3"}]},"functionSelector":"09e07dbe","id":743,"implemented":true,"kind":"function","modifiers":[{"id":700,"kind":"modifierInvocation","modifierName":{"id":699,"name":"onlyAnalyzer","nameLocations":["5351:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":337,"src":"5351:12:3"},"nodeType":"ModifierInvocation","src":"5351:12:3"}],"name":"flagBots","nameLocation":"5223:8:3","nodeType":"FunctionDefinition","parameters":{"id":698,"nodeType":"ParameterList","parameters":[{"constant":false,"id":691,"mutability":"mutable","name":"users","nameLocation":"5260:5:3","nodeType":"VariableDeclaration","scope":743,"src":"5241:24:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_calldata_ptr","typeString":"address[]"},"typeName":{"baseType":{"id":689,"name":"address","nodeType":"ElementaryTypeName","src":"5241:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":690,"nodeType":"ArrayTypeName","src":"5241:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_address_$dyn_storage_ptr","typeString":"address[]"}},"visibility":"internal"},{"constant":false,"id":694,"mutability":"mutable","name":"scores","nameLocation":"5294:6:3","nodeType":"VariableDeclaration","scope":743,"src":"5275:25:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_calldata_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":692,"name":"uint256","nodeType":"ElementaryTypeName","src":"5275:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":693,"nodeType":"ArrayTypeName","src":"5275:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"},{"constant":false,"id":697,"mutability":"mutable","name":"reasons","nameLocation":"5328:7:3","nodeType":"VariableDeclaration","scope":743,"src":"5310:25:3","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_array$_t_string_calldata_ptr_$dyn_calldata_ptr","typeString":"string[]"},"typeName":{"baseType":{"id":695,"name":"string","nodeType":"ElementaryTypeName","src":"5310:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"id":696,"nodeType":"ArrayTypeName","src":"5310:8:3","typeDescriptions":{"typeIdentifier":"t_array$_t_string_storage_$dyn_storage_ptr","typeString":"string[]"}},"visibility":"internal"}],"src":"5231:110:3"},"returnParameters":{"id":701,"nodeType":"ParameterList","parameters":[],"src":"5364:0:3"},"scope":827,"src":"5214:373:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":762,"nodeType":"Block","src":"5648:72:3","statements":[{"expression":{"id":754,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":750,"name":"flaggedAsBots","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":287,"src":"5658:13:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":752,"indexExpression":{"id":751,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":745,"src":"5672:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5658:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":753,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5680:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"5658:27:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":755,"nodeType":"ExpressionStatement","src":"5658:27:3"},{"expression":{"id":760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"id":756,"name":"botScore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":291,"src":"5695:8:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":758,"indexExpression":{"id":757,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":745,"src":"5704:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"5695:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"30","id":759,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"5712:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"5695:18:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":761,"nodeType":"ExpressionStatement","src":"5695:18:3"}]},"functionSelector":"fed20c78","id":763,"implemented":true,"kind":"function","modifiers":[{"id":748,"kind":"modifierInvocation","modifierName":{"id":747,"name":"onlyAnalyzer","nameLocations":["5635:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":337,"src":"5635:12:3"},"nodeType":"ModifierInvocation","src":"5635:12:3"}],"name":"unflagBot","nameLocation":"5602:9:3","nodeType":"FunctionDefinition","parameters":{"id":746,"nodeType":"ParameterList","parameters":[{"constant":false,"id":745,"mutability":"mutable","name":"user","nameLocation":"5620:4:3","nodeType":"VariableDeclaration","scope":763,"src":"5612:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":744,"name":"address","nodeType":"ElementaryTypeName","src":"5612:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5611:14:3"},"returnParameters":{"id":749,"nodeType":"ParameterList","parameters":[],"src":"5648:0:3"},"scope":827,"src":"5593:127:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":776,"nodeType":"Block","src":"5822:40:3","statements":[{"expression":{"baseExpression":{"id":772,"name":"userTrades","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":283,"src":"5839:10:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_TradeRecord_$264_storage_$dyn_storage_$","typeString":"mapping(address => struct BotDetectorWithPyth.TradeRecord storage ref[] storage ref)"}},"id":774,"indexExpression":{"id":773,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":765,"src":"5850:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5839:16:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TradeRecord_$264_storage_$dyn_storage","typeString":"struct BotDetectorWithPyth.TradeRecord storage ref[] storage ref"}},"functionReturnParameters":771,"id":775,"nodeType":"Return","src":"5832:23:3"}]},"functionSelector":"927c7742","id":777,"implemented":true,"kind":"function","modifiers":[],"name":"getUserTrades","nameLocation":"5735:13:3","nodeType":"FunctionDefinition","parameters":{"id":766,"nodeType":"ParameterList","parameters":[{"constant":false,"id":765,"mutability":"mutable","name":"user","nameLocation":"5766:4:3","nodeType":"VariableDeclaration","scope":777,"src":"5758:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":764,"name":"address","nodeType":"ElementaryTypeName","src":"5758:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5748:28:3"},"returnParameters":{"id":771,"nodeType":"ParameterList","parameters":[{"constant":false,"id":770,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":777,"src":"5800:20:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TradeRecord_$264_memory_ptr_$dyn_memory_ptr","typeString":"struct BotDetectorWithPyth.TradeRecord[]"},"typeName":{"baseType":{"id":768,"nodeType":"UserDefinedTypeName","pathNode":{"id":767,"name":"TradeRecord","nameLocations":["5800:11:3"],"nodeType":"IdentifierPath","referencedDeclaration":264,"src":"5800:11:3"},"referencedDeclaration":264,"src":"5800:11:3","typeDescriptions":{"typeIdentifier":"t_struct$_TradeRecord_$264_storage_ptr","typeString":"struct BotDetectorWithPyth.TradeRecord"}},"id":769,"nodeType":"ArrayTypeName","src":"5800:13:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_TradeRecord_$264_storage_$dyn_storage_ptr","typeString":"struct BotDetectorWithPyth.TradeRecord[]"}},"visibility":"internal"}],"src":"5799:22:3"},"scope":827,"src":"5726:136:3","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":794,"nodeType":"Block","src":"5935:61:3","statements":[{"expression":{"components":[{"baseExpression":{"id":786,"name":"flaggedAsBots","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":287,"src":"5953:13:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":788,"indexExpression":{"id":787,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":779,"src":"5967:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5953:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"baseExpression":{"id":789,"name":"botScore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":291,"src":"5974:8:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_uint256_$","typeString":"mapping(address => uint256)"}},"id":791,"indexExpression":{"id":790,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":779,"src":"5983:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5974:14:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"id":792,"isConstant":false,"isInlineArray":false,"isLValue":false,"isPure":false,"lValueRequested":false,"nodeType":"TupleExpression","src":"5952:37:3","typeDescriptions":{"typeIdentifier":"t_tuple$_t_bool_$_t_uint256_$","typeString":"tuple(bool,uint256)"}},"functionReturnParameters":785,"id":793,"nodeType":"Return","src":"5945:44:3"}]},"functionSelector":"3bbac579","id":795,"implemented":true,"kind":"function","modifiers":[],"name":"isBot","nameLocation":"5877:5:3","nodeType":"FunctionDefinition","parameters":{"id":780,"nodeType":"ParameterList","parameters":[{"constant":false,"id":779,"mutability":"mutable","name":"user","nameLocation":"5891:4:3","nodeType":"VariableDeclaration","scope":795,"src":"5883:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":778,"name":"address","nodeType":"ElementaryTypeName","src":"5883:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5882:14:3"},"returnParameters":{"id":785,"nodeType":"ParameterList","parameters":[{"constant":false,"id":782,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":795,"src":"5920:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":781,"name":"bool","nodeType":"ElementaryTypeName","src":"5920:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":784,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":795,"src":"5926:7:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":783,"name":"uint256","nodeType":"ElementaryTypeName","src":"5926:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5919:15:3"},"scope":827,"src":"5868:128:3","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":807,"nodeType":"Block","src":"6097:46:3","statements":[{"expression":{"baseExpression":{"id":803,"name":"botEvidenceProof","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":296,"src":"6114:16:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_struct$_BotEvidence_$277_storage_$","typeString":"mapping(address => struct BotDetectorWithPyth.BotEvidence storage ref)"}},"id":805,"indexExpression":{"id":804,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":797,"src":"6131:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6114:22:3","typeDescriptions":{"typeIdentifier":"t_struct$_BotEvidence_$277_storage","typeString":"struct BotDetectorWithPyth.BotEvidence storage ref"}},"functionReturnParameters":802,"id":806,"nodeType":"Return","src":"6107:29:3"}]},"functionSelector":"4d4ca309","id":808,"implemented":true,"kind":"function","modifiers":[],"name":"getBotEvidence","nameLocation":"6011:14:3","nodeType":"FunctionDefinition","parameters":{"id":798,"nodeType":"ParameterList","parameters":[{"constant":false,"id":797,"mutability":"mutable","name":"user","nameLocation":"6043:4:3","nodeType":"VariableDeclaration","scope":808,"src":"6035:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":796,"name":"address","nodeType":"ElementaryTypeName","src":"6035:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6025:28:3"},"returnParameters":{"id":802,"nodeType":"ParameterList","parameters":[{"constant":false,"id":801,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":808,"src":"6077:18:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_BotEvidence_$277_memory_ptr","typeString":"struct BotDetectorWithPyth.BotEvidence"},"typeName":{"id":800,"nodeType":"UserDefinedTypeName","pathNode":{"id":799,"name":"BotEvidence","nameLocations":["6077:11:3"],"nodeType":"IdentifierPath","referencedDeclaration":277,"src":"6077:11:3"},"referencedDeclaration":277,"src":"6077:11:3","typeDescriptions":{"typeIdentifier":"t_struct$_BotEvidence_$277_storage_ptr","typeString":"struct BotDetectorWithPyth.BotEvidence"}},"visibility":"internal"}],"src":"6076:20:3"},"scope":827,"src":"6002:141:3","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":825,"nodeType":"Block","src":"6204:95:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":817,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":814,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6222:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":815,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6226:6:3","memberName":"sender","nodeType":"MemberAccess","src":"6222:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":816,"name":"admin","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":249,"src":"6236:5:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6222:19:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c792061646d696e","id":818,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6243:12:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_519e47aa5cfea80d7d23bd065db30ac1713503a8d5ea05db2d0c02f784e636db","typeString":"literal_string \"Only admin\""},"value":"Only admin"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_519e47aa5cfea80d7d23bd065db30ac1713503a8d5ea05db2d0c02f784e636db","typeString":"literal_string \"Only admin\""}],"id":813,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6214:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":819,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6214:42:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":820,"nodeType":"ExpressionStatement","src":"6214:42:3"},{"expression":{"id":823,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":821,"name":"botAnalyzer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":251,"src":"6266:11:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":822,"name":"_newAnalyzer","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":810,"src":"6280:12:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"6266:26:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":824,"nodeType":"ExpressionStatement","src":"6266:26:3"}]},"functionSelector":"aa2ca71b","id":826,"implemented":true,"kind":"function","modifiers":[],"name":"setBotAnalyzer","nameLocation":"6158:14:3","nodeType":"FunctionDefinition","parameters":{"id":811,"nodeType":"ParameterList","parameters":[{"constant":false,"id":810,"mutability":"mutable","name":"_newAnalyzer","nameLocation":"6181:12:3","nodeType":"VariableDeclaration","scope":826,"src":"6173:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":809,"name":"address","nodeType":"ElementaryTypeName","src":"6173:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6172:22:3"},"returnParameters":{"id":812,"nodeType":"ParameterList","parameters":[],"src":"6204:0:3"},"scope":827,"src":"6149:150:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"}],"scope":828,"src":"166:6135:3","usedErrors":[]}],"src":"32:6270:3"},"id":3}},"contracts":{"@pythnetwork/pyth-sdk-solidity/IPyth.sol":{"IPyth":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"id","type":"bytes32"},{"indexed":false,"internalType":"uint64","name":"publishTime","type":"uint64"},{"indexed":false,"internalType":"int64","name":"price","type":"int64"},{"indexed":false,"internalType":"uint64","name":"conf","type":"uint64"}],"name":"PriceFeedUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"id","type":"bytes32"},{"indexed":false,"internalType":"uint64","name":"startTime","type":"uint64"},{"indexed":false,"internalType":"uint64","name":"endTime","type":"uint64"},{"indexed":false,"internalType":"int64","name":"twapPrice","type":"int64"},{"indexed":false,"internalType":"uint64","name":"twapConf","type":"uint64"},{"indexed":false,"internalType":"uint32","name":"downSlotsRatio","type":"uint32"}],"name":"TwapPriceFeedUpdate","type":"event"},{"inputs":[{"internalType":"bytes32","name":"id","type":"bytes32"},{"internalType":"uint256","name":"age","type":"uint256"}],"name":"getEmaPriceNoOlderThan","outputs":[{"components":[{"internalType":"int64","name":"price","type":"int64"},{"internalType":"uint64","name":"conf","type":"uint64"},{"internalType":"int32","name":"expo","type":"int32"},{"internalType":"uint256","name":"publishTime","type":"uint256"}],"internalType":"struct PythStructs.Price","name":"price","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"id","type":"bytes32"}],"name":"getEmaPriceUnsafe","outputs":[{"components":[{"internalType":"int64","name":"price","type":"int64"},{"internalType":"uint64","name":"conf","type":"uint64"},{"internalType":"int32","name":"expo","type":"int32"},{"internalType":"uint256","name":"publishTime","type":"uint256"}],"internalType":"struct PythStructs.Price","name":"price","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"id","type":"bytes32"},{"internalType":"uint256","name":"age","type":"uint256"}],"name":"getPriceNoOlderThan","outputs":[{"components":[{"internalType":"int64","name":"price","type":"int64"},{"internalType":"uint64","name":"conf","type":"uint64"},{"internalType":"int32","name":"expo","type":"int32"},{"internalType":"uint256","name":"publishTime","type":"uint256"}],"internalType":"struct PythStructs.Price","name":"price","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes32","name":"id","type":"bytes32"}],"name":"getPriceUnsafe","outputs":[{"components":[{"internalType":"int64","name":"price","type":"int64"},{"internalType":"uint64","name":"conf","type":"uint64"},{"internalType":"int32","name":"expo","type":"int32"},{"internalType":"uint256","name":"publishTime","type":"uint256"}],"internalType":"struct PythStructs.Price","name":"price","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes[]","name":"updateData","type":"bytes[]"}],"name":"getTwapUpdateFee","outputs":[{"internalType":"uint256","name":"feeAmount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes[]","name":"updateData","type":"bytes[]"}],"name":"getUpdateFee","outputs":[{"internalType":"uint256","name":"feeAmount","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"bytes[]","name":"updateData","type":"bytes[]"},{"internalType":"bytes32[]","name":"priceIds","type":"bytes32[]"},{"internalType":"uint64","name":"minPublishTime","type":"uint64"},{"internalType":"uint64","name":"maxPublishTime","type":"uint64"}],"name":"parsePriceFeedUpdates","outputs":[{"components":[{"internalType":"bytes32","name":"id","type":"bytes32"},{"components":[{"internalType":"int64","name":"price","type":"int64"},{"internalType":"uint64","name":"conf","type":"uint64"},{"internalType":"int32","name":"expo","type":"int32"},{"internalType":"uint256","name":"publishTime","type":"uint256"}],"internalType":"struct PythStructs.Price","name":"price","type":"tuple"},{"components":[{"internalType":"int64","name":"price","type":"int64"},{"internalType":"uint64","name":"conf","type":"uint64"},{"internalType":"int32","name":"expo","type":"int32"},{"internalType":"uint256","name":"publishTime","type":"uint256"}],"internalType":"struct PythStructs.Price","name":"emaPrice","type":"tuple"}],"internalType":"struct PythStructs.PriceFeed[]","name":"priceFeeds","type":"tuple[]"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes[]","name":"updateData","type":"bytes[]"},{"internalType":"bytes32[]","name":"priceIds","type":"bytes32[]"},{"internalType":"uint64","name":"minPublishTime","type":"uint64"},{"internalType":"uint64","name":"maxPublishTime","type":"uint64"}],"name":"parsePriceFeedUpdatesUnique","outputs":[{"components":[{"internalType":"bytes32","name":"id","type":"bytes32"},{"components":[{"internalType":"int64","name":"price","type":"int64"},{"internalType":"uint64","name":"conf","type":"uint64"},{"internalType":"int32","name":"expo","type":"int32"},{"internalType":"uint256","name":"publishTime","type":"uint256"}],"internalType":"struct PythStructs.Price","name":"price","type":"tuple"},{"components":[{"internalType":"int64","name":"price","type":"int64"},{"internalType":"uint64","name":"conf","type":"uint64"},{"internalType":"int32","name":"expo","type":"int32"},{"internalType":"uint256","name":"publishTime","type":"uint256"}],"internalType":"struct PythStructs.Price","name":"emaPrice","type":"tuple"}],"internalType":"struct PythStructs.PriceFeed[]","name":"priceFeeds","type":"tuple[]"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes[]","name":"updateData","type":"bytes[]"},{"internalType":"bytes32[]","name":"priceIds","type":"bytes32[]"},{"internalType":"uint64","name":"minAllowedPublishTime","type":"uint64"},{"internalType":"uint64","name":"maxAllowedPublishTime","type":"uint64"},{"internalType":"bool","name":"checkUniqueness","type":"bool"},{"internalType":"bool","name":"checkUpdateDataIsMinimal","type":"bool"},{"internalType":"bool","name":"storeUpdatesIfFresh","type":"bool"}],"name":"parsePriceFeedUpdatesWithConfig","outputs":[{"components":[{"internalType":"bytes32","name":"id","type":"bytes32"},{"components":[{"internalType":"int64","name":"price","type":"int64"},{"internalType":"uint64","name":"conf","type":"uint64"},{"internalType":"int32","name":"expo","type":"int32"},{"internalType":"uint256","name":"publishTime","type":"uint256"}],"internalType":"struct PythStructs.Price","name":"price","type":"tuple"},{"components":[{"internalType":"int64","name":"price","type":"int64"},{"internalType":"uint64","name":"conf","type":"uint64"},{"internalType":"int32","name":"expo","type":"int32"},{"internalType":"uint256","name":"publishTime","type":"uint256"}],"internalType":"struct PythStructs.Price","name":"emaPrice","type":"tuple"}],"internalType":"struct PythStructs.PriceFeed[]","name":"priceFeeds","type":"tuple[]"},{"internalType":"uint64[]","name":"slots","type":"uint64[]"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes[]","name":"updateData","type":"bytes[]"},{"internalType":"bytes32[]","name":"priceIds","type":"bytes32[]"}],"name":"parseTwapPriceFeedUpdates","outputs":[{"components":[{"internalType":"bytes32","name":"id","type":"bytes32"},{"internalType":"uint64","name":"startTime","type":"uint64"},{"internalType":"uint64","name":"endTime","type":"uint64"},{"components":[{"internalType":"int64","name":"price","type":"int64"},{"internalType":"uint64","name":"conf","type":"uint64"},{"internalType":"int32","name":"expo","type":"int32"},{"internalType":"uint256","name":"publishTime","type":"uint256"}],"internalType":"struct PythStructs.Price","name":"twap","type":"tuple"},{"internalType":"uint32","name":"downSlotsRatio","type":"uint32"}],"internalType":"struct PythStructs.TwapPriceFeed[]","name":"twapPriceFeeds","type":"tuple[]"}],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes[]","name":"updateData","type":"bytes[]"}],"name":"updatePriceFeeds","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"bytes[]","name":"updateData","type":"bytes[]"},{"internalType":"bytes32[]","name":"priceIds","type":"bytes32[]"},{"internalType":"uint64[]","name":"publishTimes","type":"uint64[]"}],"name":"updatePriceFeedsIfNecessary","outputs":[],"stateMutability":"payable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"getEmaPriceNoOlderThan(bytes32,uint256)":"711a2e28","getEmaPriceUnsafe(bytes32)":"9474f45b","getPriceNoOlderThan(bytes32,uint256)":"a4ae35e0","getPriceUnsafe(bytes32)":"96834ad3","getTwapUpdateFee(bytes[])":"5f674e35","getUpdateFee(bytes[])":"d47eed45","parsePriceFeedUpdates(bytes[],bytes32[],uint64,uint64)":"4716e9c5","parsePriceFeedUpdatesUnique(bytes[],bytes32[],uint64,uint64)":"accca7f9","parsePriceFeedUpdatesWithConfig(bytes[],bytes32[],uint64,uint64,bool,bool,bool)":"3a229d18","parseTwapPriceFeedUpdates(bytes[],bytes32[])":"eb942158","updatePriceFeeds(bytes[])":"ef9e5e28","updatePriceFeedsIfNecessary(bytes[],bytes32[],uint64[])":"b9256d28"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"publishTime\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"int64\",\"name\":\"price\",\"type\":\"int64\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"conf\",\"type\":\"uint64\"}],\"name\":\"PriceFeedUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"startTime\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"endTime\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"int64\",\"name\":\"twapPrice\",\"type\":\"int64\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"twapConf\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"downSlotsRatio\",\"type\":\"uint32\"}],\"name\":\"TwapPriceFeedUpdate\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"age\",\"type\":\"uint256\"}],\"name\":\"getEmaPriceNoOlderThan\",\"outputs\":[{\"components\":[{\"internalType\":\"int64\",\"name\":\"price\",\"type\":\"int64\"},{\"internalType\":\"uint64\",\"name\":\"conf\",\"type\":\"uint64\"},{\"internalType\":\"int32\",\"name\":\"expo\",\"type\":\"int32\"},{\"internalType\":\"uint256\",\"name\":\"publishTime\",\"type\":\"uint256\"}],\"internalType\":\"struct PythStructs.Price\",\"name\":\"price\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"getEmaPriceUnsafe\",\"outputs\":[{\"components\":[{\"internalType\":\"int64\",\"name\":\"price\",\"type\":\"int64\"},{\"internalType\":\"uint64\",\"name\":\"conf\",\"type\":\"uint64\"},{\"internalType\":\"int32\",\"name\":\"expo\",\"type\":\"int32\"},{\"internalType\":\"uint256\",\"name\":\"publishTime\",\"type\":\"uint256\"}],\"internalType\":\"struct PythStructs.Price\",\"name\":\"price\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"age\",\"type\":\"uint256\"}],\"name\":\"getPriceNoOlderThan\",\"outputs\":[{\"components\":[{\"internalType\":\"int64\",\"name\":\"price\",\"type\":\"int64\"},{\"internalType\":\"uint64\",\"name\":\"conf\",\"type\":\"uint64\"},{\"internalType\":\"int32\",\"name\":\"expo\",\"type\":\"int32\"},{\"internalType\":\"uint256\",\"name\":\"publishTime\",\"type\":\"uint256\"}],\"internalType\":\"struct PythStructs.Price\",\"name\":\"price\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"}],\"name\":\"getPriceUnsafe\",\"outputs\":[{\"components\":[{\"internalType\":\"int64\",\"name\":\"price\",\"type\":\"int64\"},{\"internalType\":\"uint64\",\"name\":\"conf\",\"type\":\"uint64\"},{\"internalType\":\"int32\",\"name\":\"expo\",\"type\":\"int32\"},{\"internalType\":\"uint256\",\"name\":\"publishTime\",\"type\":\"uint256\"}],\"internalType\":\"struct PythStructs.Price\",\"name\":\"price\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"updateData\",\"type\":\"bytes[]\"}],\"name\":\"getTwapUpdateFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"feeAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"updateData\",\"type\":\"bytes[]\"}],\"name\":\"getUpdateFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"feeAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"updateData\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"priceIds\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint64\",\"name\":\"minPublishTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"maxPublishTime\",\"type\":\"uint64\"}],\"name\":\"parsePriceFeedUpdates\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"price\",\"type\":\"int64\"},{\"internalType\":\"uint64\",\"name\":\"conf\",\"type\":\"uint64\"},{\"internalType\":\"int32\",\"name\":\"expo\",\"type\":\"int32\"},{\"internalType\":\"uint256\",\"name\":\"publishTime\",\"type\":\"uint256\"}],\"internalType\":\"struct PythStructs.Price\",\"name\":\"price\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"price\",\"type\":\"int64\"},{\"internalType\":\"uint64\",\"name\":\"conf\",\"type\":\"uint64\"},{\"internalType\":\"int32\",\"name\":\"expo\",\"type\":\"int32\"},{\"internalType\":\"uint256\",\"name\":\"publishTime\",\"type\":\"uint256\"}],\"internalType\":\"struct PythStructs.Price\",\"name\":\"emaPrice\",\"type\":\"tuple\"}],\"internalType\":\"struct PythStructs.PriceFeed[]\",\"name\":\"priceFeeds\",\"type\":\"tuple[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"updateData\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"priceIds\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint64\",\"name\":\"minPublishTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"maxPublishTime\",\"type\":\"uint64\"}],\"name\":\"parsePriceFeedUpdatesUnique\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"price\",\"type\":\"int64\"},{\"internalType\":\"uint64\",\"name\":\"conf\",\"type\":\"uint64\"},{\"internalType\":\"int32\",\"name\":\"expo\",\"type\":\"int32\"},{\"internalType\":\"uint256\",\"name\":\"publishTime\",\"type\":\"uint256\"}],\"internalType\":\"struct PythStructs.Price\",\"name\":\"price\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"price\",\"type\":\"int64\"},{\"internalType\":\"uint64\",\"name\":\"conf\",\"type\":\"uint64\"},{\"internalType\":\"int32\",\"name\":\"expo\",\"type\":\"int32\"},{\"internalType\":\"uint256\",\"name\":\"publishTime\",\"type\":\"uint256\"}],\"internalType\":\"struct PythStructs.Price\",\"name\":\"emaPrice\",\"type\":\"tuple\"}],\"internalType\":\"struct PythStructs.PriceFeed[]\",\"name\":\"priceFeeds\",\"type\":\"tuple[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"updateData\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"priceIds\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint64\",\"name\":\"minAllowedPublishTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"maxAllowedPublishTime\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"checkUniqueness\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"checkUpdateDataIsMinimal\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"storeUpdatesIfFresh\",\"type\":\"bool\"}],\"name\":\"parsePriceFeedUpdatesWithConfig\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"price\",\"type\":\"int64\"},{\"internalType\":\"uint64\",\"name\":\"conf\",\"type\":\"uint64\"},{\"internalType\":\"int32\",\"name\":\"expo\",\"type\":\"int32\"},{\"internalType\":\"uint256\",\"name\":\"publishTime\",\"type\":\"uint256\"}],\"internalType\":\"struct PythStructs.Price\",\"name\":\"price\",\"type\":\"tuple\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"price\",\"type\":\"int64\"},{\"internalType\":\"uint64\",\"name\":\"conf\",\"type\":\"uint64\"},{\"internalType\":\"int32\",\"name\":\"expo\",\"type\":\"int32\"},{\"internalType\":\"uint256\",\"name\":\"publishTime\",\"type\":\"uint256\"}],\"internalType\":\"struct PythStructs.Price\",\"name\":\"emaPrice\",\"type\":\"tuple\"}],\"internalType\":\"struct PythStructs.PriceFeed[]\",\"name\":\"priceFeeds\",\"type\":\"tuple[]\"},{\"internalType\":\"uint64[]\",\"name\":\"slots\",\"type\":\"uint64[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"updateData\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"priceIds\",\"type\":\"bytes32[]\"}],\"name\":\"parseTwapPriceFeedUpdates\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"startTime\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"endTime\",\"type\":\"uint64\"},{\"components\":[{\"internalType\":\"int64\",\"name\":\"price\",\"type\":\"int64\"},{\"internalType\":\"uint64\",\"name\":\"conf\",\"type\":\"uint64\"},{\"internalType\":\"int32\",\"name\":\"expo\",\"type\":\"int32\"},{\"internalType\":\"uint256\",\"name\":\"publishTime\",\"type\":\"uint256\"}],\"internalType\":\"struct PythStructs.Price\",\"name\":\"twap\",\"type\":\"tuple\"},{\"internalType\":\"uint32\",\"name\":\"downSlotsRatio\",\"type\":\"uint32\"}],\"internalType\":\"struct PythStructs.TwapPriceFeed[]\",\"name\":\"twapPriceFeeds\",\"type\":\"tuple[]\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"updateData\",\"type\":\"bytes[]\"}],\"name\":\"updatePriceFeeds\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"updateData\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"priceIds\",\"type\":\"bytes32[]\"},{\"internalType\":\"uint64[]\",\"name\":\"publishTimes\",\"type\":\"uint64[]\"}],\"name\":\"updatePriceFeedsIfNecessary\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Pyth Data Association\",\"details\":\"Please refer to the guidance at https://docs.pyth.network/documentation/pythnet-price-feeds/best-practices for how to consume prices safely.\",\"events\":{\"PriceFeedUpdate(bytes32,uint64,int64,uint64)\":{\"details\":\"Emitted when the price feed with `id` has received a fresh update.\",\"params\":{\"conf\":\"Confidence interval of the given price update.\",\"id\":\"The Pyth Price Feed ID.\",\"price\":\"Price of the given price update.\",\"publishTime\":\"Publish time of the given price update.\"}},\"TwapPriceFeedUpdate(bytes32,uint64,uint64,int64,uint64,uint32)\":{\"details\":\"Emitted when the TWAP price feed with `id` has received a fresh update.\",\"params\":{\"downSlotsRatio\":\"Down slot ratio of the TWAP.\",\"endTime\":\"End time of the TWAP.\",\"id\":\"The Pyth Price Feed ID.\",\"startTime\":\"Start time of the TWAP.\",\"twapConf\":\"Confidence interval of the TWAP.\",\"twapPrice\":\"Price of the TWAP.\"}}},\"kind\":\"dev\",\"methods\":{\"getEmaPriceNoOlderThan(bytes32,uint256)\":{\"details\":\"This function is a sanity-checked version of `getEmaPriceUnsafe` which is useful in applications that require a sufficiently-recent price. Reverts if the price wasn't updated sufficiently recently.\",\"returns\":{\"price\":\"- please read the documentation of PythStructs.Price to understand how to use this safely.\"}},\"getEmaPriceUnsafe(bytes32)\":{\"details\":\"This function returns the same price as `getEmaPrice` in the case where the price is available. However, if the price is not recent this function returns the latest available price. The returned price can be from arbitrarily far in the past; this function makes no guarantees that the returned price is recent or useful for any particular application. Users of this function should check the `publishTime` in the price to ensure that the returned price is sufficiently recent for their application. If you are considering using this function, it may be safer / easier to use either `getEmaPrice` or `getEmaPriceNoOlderThan`.\",\"returns\":{\"price\":\"- please read the documentation of PythStructs.Price to understand how to use this safely.\"}},\"getPriceNoOlderThan(bytes32,uint256)\":{\"details\":\"This function is a sanity-checked version of `getPriceUnsafe` which is useful in applications that require a sufficiently-recent price. Reverts if the price wasn't updated sufficiently recently.\",\"returns\":{\"price\":\"- please read the documentation of PythStructs.Price to understand how to use this safely.\"}},\"getPriceUnsafe(bytes32)\":{\"details\":\"This function returns the most recent price update in this contract without any recency checks. This function is unsafe as the returned price update may be arbitrarily far in the past. Users of this function should check the `publishTime` in the price to ensure that the returned price is sufficiently recent for their application. If you are considering using this function, it may be safer / easier to use `getPriceNoOlderThan`.\",\"returns\":{\"price\":\"- please read the documentation of PythStructs.Price to understand how to use this safely.\"}},\"getTwapUpdateFee(bytes[])\":{\"params\":{\"updateData\":\"Array of price update data.\"},\"returns\":{\"feeAmount\":\"The required fee in Wei.\"}},\"getUpdateFee(bytes[])\":{\"params\":{\"updateData\":\"Array of price update data.\"},\"returns\":{\"feeAmount\":\"The required fee in Wei.\"}},\"parsePriceFeedUpdates(bytes[],bytes32[],uint64,uint64)\":{\"details\":\"Reverts if the transferred fee is not sufficient or the updateData is invalid or there is no update for any of the given `priceIds` within the given time range.\",\"params\":{\"maxPublishTime\":\"maximum acceptable publishTime for the given `priceIds`.\",\"minPublishTime\":\"minimum acceptable publishTime for the given `priceIds`.\",\"priceIds\":\"Array of price ids.\",\"updateData\":\"Array of price update data.\"},\"returns\":{\"priceFeeds\":\"Array of the price feeds corresponding to the given `priceIds` (with the same order).\"}},\"parsePriceFeedUpdatesUnique(bytes[],bytes32[],uint64,uint64)\":{\"details\":\"Reverts if the transferred fee is not sufficient or the updateData is invalid or there is no update for any of the given `priceIds` within the given time range and uniqueness condition.\",\"params\":{\"maxPublishTime\":\"maximum acceptable publishTime for the given `priceIds`.\",\"minPublishTime\":\"minimum acceptable publishTime for the given `priceIds`.\",\"priceIds\":\"Array of price ids.\",\"updateData\":\"Array of price update data.\"},\"returns\":{\"priceFeeds\":\"Array of the price feeds corresponding to the given `priceIds` (with the same order).\"}},\"parsePriceFeedUpdatesWithConfig(bytes[],bytes32[],uint64,uint64,bool,bool,bool)\":{\"details\":\"Reverts if the transferred fee is not sufficient or the updateData is invalid or there is no update for any of the given `priceIds` within the given time range.\",\"params\":{\"maxAllowedPublishTime\":\"maximum acceptable publishTime for the given `priceIds`.\",\"minAllowedPublishTime\":\"minimum acceptable publishTime for the given `priceIds`.\",\"priceIds\":\"Array of price ids.\",\"storeUpdatesIfFresh\":\"flag for the parse function to\",\"updateData\":\"Array of price update data.\"},\"returns\":{\"priceFeeds\":\"Array of the price feeds corresponding to the given `priceIds` (with the same order).\"}},\"parseTwapPriceFeedUpdates(bytes[],bytes32[])\":{\"details\":\"Reverts if: - The transferred fee is not sufficient - The updateData is invalid or malformed - The updateData array does not contain exactly 2 updates - There is no update for any of the given `priceIds` - The time ordering between data points is invalid (start time must be before end time)\",\"params\":{\"priceIds\":\"Array of price ids to calculate TWAP for\",\"updateData\":\"Array containing exactly two price updates (start and end points for TWAP calculation)\"},\"returns\":{\"twapPriceFeeds\":\"Array of TWAP price feeds corresponding to the given `priceIds` (with the same order)\"}},\"updatePriceFeeds(bytes[])\":{\"details\":\"Reverts if the transferred fee is not sufficient or the updateData is invalid.\",\"params\":{\"updateData\":\"Array of price update data.\"}},\"updatePriceFeedsIfNecessary(bytes[],bytes32[],uint64[])\":{\"details\":\"Reverts if update is not needed or the transferred fee is not sufficient or the updateData is invalid.\",\"params\":{\"priceIds\":\"Array of price ids.\",\"publishTimes\":\"Array of publishTimes. `publishTimes[i]` corresponds to known `publishTime` of `priceIds[i]`\",\"updateData\":\"Array of price update data.\"}}},\"title\":\"Consume prices from the Pyth Network (https://pyth.network/).\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"getEmaPriceNoOlderThan(bytes32,uint256)\":{\"notice\":\"Returns the exponentially-weighted moving average price that is no older than `age` seconds of the current time.\"},\"getEmaPriceUnsafe(bytes32)\":{\"notice\":\"Returns the exponentially-weighted moving average price of a price feed without any sanity checks.\"},\"getPriceNoOlderThan(bytes32,uint256)\":{\"notice\":\"Returns the price that is no older than `age` seconds of the current time.\"},\"getPriceUnsafe(bytes32)\":{\"notice\":\"Returns the price of a price feed without any sanity checks.\"},\"getTwapUpdateFee(bytes[])\":{\"notice\":\"Returns the required fee to update a TWAP price.\"},\"getUpdateFee(bytes[])\":{\"notice\":\"Returns the required fee to update an array of price updates.\"},\"parsePriceFeedUpdates(bytes[],bytes32[],uint64,uint64)\":{\"notice\":\"Parse `updateData` and return price feeds of the given `priceIds` if they are all published within `minPublishTime` and `maxPublishTime`. You can use this method if you want to use a Pyth price at a fixed time and not the most recent price; otherwise, please consider using `updatePriceFeeds`. This method may store the price updates on-chain, if they are more recent than the current stored prices. This method requires the caller to pay a fee in wei; the required fee can be computed by calling `getUpdateFee` with the length of the `updateData` array.\"},\"parsePriceFeedUpdatesUnique(bytes[],bytes32[],uint64,uint64)\":{\"notice\":\"Similar to `parsePriceFeedUpdates` but ensures the updates returned are the first updates published in minPublishTime. That is, if there are multiple updates for a given timestamp, this method will return the first update. This method may store the price updates on-chain, if they are more recent than the current stored prices.\"},\"parsePriceFeedUpdatesWithConfig(bytes[],bytes32[],uint64,uint64,bool,bool,bool)\":{\"notice\":\"Parse `updateData` and return price feeds of the given `priceIds` if they are all published within `minPublishTime` and `maxPublishTime,` but choose to store price updates if `storeUpdatesIfFresh`. You can use this method if you want to use a Pyth price at a fixed time and not the most recent price; otherwise, please consider using `updatePriceFeeds`. This method may store the price updates on-chain, if they are more recent than the current stored prices. This method requires the caller to pay a fee in wei; the required fee can be computed by calling `getUpdateFee` with the length of the `updateData` array. This method will eventually allow the caller to determine whether parsed price feeds should update the stored values as well.\"},\"parseTwapPriceFeedUpdates(bytes[],bytes32[])\":{\"notice\":\"Parse time-weighted average price (TWAP) from two consecutive price updates for the given `priceIds`. This method calculates TWAP between two data points by processing the difference in cumulative price values divided by the time period. It requires exactly two updates that contain valid price information for all the requested price IDs. This method requires the caller to pay a fee in wei; the required fee can be computed by calling `getUpdateFee` with the updateData array.\"},\"updatePriceFeeds(bytes[])\":{\"notice\":\"Update price feeds with given update messages. This method requires the caller to pay a fee in wei; the required fee can be computed by calling `getUpdateFee` with the length of the `updateData` array. Prices will be updated if they are more recent than the current stored prices. The call will succeed even if the update is not the most recent.\"},\"updatePriceFeedsIfNecessary(bytes[],bytes32[],uint64[])\":{\"notice\":\"Wrapper around updatePriceFeeds that rejects fast if a price update is not necessary. A price update is necessary if the current on-chain publishTime is older than the given publishTime. It relies solely on the given `publishTimes` for the price feeds and does not read the actual price update publish time within `updateData`. This method requires the caller to pay a fee in wei; the required fee can be computed by calling `getUpdateFee` with the length of the `updateData` array. `priceIds` and `publishTimes` are two arrays with the same size that correspond to senders known publishTime of each priceId when calling this method. If all of price feeds within `priceIds` have updated and have a newer or equal publish time than the given publish time, it will reject the transaction to save gas. Otherwise, it calls updatePriceFeeds method to update the prices.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@pythnetwork/pyth-sdk-solidity/IPyth.sol\":\"IPyth\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@pythnetwork/pyth-sdk-solidity/IPyth.sol\":{\"keccak256\":\"0xada6a1f4898b056d2804409ecad466b786dc6a12bc6f8f247e7f1471c1b86fcd\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ecee3c205896236fc11bfb1367f033353448fa462b08e5212a32e767f72022c9\",\"dweb:/ipfs/QmeEQpRRza2Swm2gCCC61TDxQ2GNLjqPhdtbSznADMuMni\"]},\"@pythnetwork/pyth-sdk-solidity/IPythEvents.sol\":{\"keccak256\":\"0xd67239becd2c39bd9d065830be24e70606f5747ab31b8818bea849d09ac17ddc\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://e719bd2d8c1d8d46713aeb700dd6b5ddd766a77830ea9ae3cc9327f67ed775d1\",\"dweb:/ipfs/QmNQYyRVFLEvLsCSTkHkAemTvvZm4CzLN7hUdMidMcBS7u\"]},\"@pythnetwork/pyth-sdk-solidity/PythStructs.sol\":{\"keccak256\":\"0x474436bf0d558cc9b2c00a9d0ce318147acdf7963f34ef4acadb9248e65bbc7b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://2b8f9bd9de35e67c7bdbf04d8c2e771718fcc8666456ca5f92dbd914e4a5f2b3\",\"dweb:/ipfs/QmNP3ShBYRp4RiVbAudMB7rNHAqgtwn8pPBzb8JTUaViRh\"]}},\"version\":1}"}},"@pythnetwork/pyth-sdk-solidity/IPythEvents.sol":{"IPythEvents":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"id","type":"bytes32"},{"indexed":false,"internalType":"uint64","name":"publishTime","type":"uint64"},{"indexed":false,"internalType":"int64","name":"price","type":"int64"},{"indexed":false,"internalType":"uint64","name":"conf","type":"uint64"}],"name":"PriceFeedUpdate","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"bytes32","name":"id","type":"bytes32"},{"indexed":false,"internalType":"uint64","name":"startTime","type":"uint64"},{"indexed":false,"internalType":"uint64","name":"endTime","type":"uint64"},{"indexed":false,"internalType":"int64","name":"twapPrice","type":"int64"},{"indexed":false,"internalType":"uint64","name":"twapConf","type":"uint64"},{"indexed":false,"internalType":"uint32","name":"downSlotsRatio","type":"uint32"}],"name":"TwapPriceFeedUpdate","type":"event"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"publishTime\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"int64\",\"name\":\"price\",\"type\":\"int64\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"conf\",\"type\":\"uint64\"}],\"name\":\"PriceFeedUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"id\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"startTime\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"endTime\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"int64\",\"name\":\"twapPrice\",\"type\":\"int64\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"twapConf\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint32\",\"name\":\"downSlotsRatio\",\"type\":\"uint32\"}],\"name\":\"TwapPriceFeedUpdate\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"This interface can be used for listening to the updates for off-chain and testing purposes.\",\"events\":{\"PriceFeedUpdate(bytes32,uint64,int64,uint64)\":{\"details\":\"Emitted when the price feed with `id` has received a fresh update.\",\"params\":{\"conf\":\"Confidence interval of the given price update.\",\"id\":\"The Pyth Price Feed ID.\",\"price\":\"Price of the given price update.\",\"publishTime\":\"Publish time of the given price update.\"}},\"TwapPriceFeedUpdate(bytes32,uint64,uint64,int64,uint64,uint32)\":{\"details\":\"Emitted when the TWAP price feed with `id` has received a fresh update.\",\"params\":{\"downSlotsRatio\":\"Down slot ratio of the TWAP.\",\"endTime\":\"End time of the TWAP.\",\"id\":\"The Pyth Price Feed ID.\",\"startTime\":\"Start time of the TWAP.\",\"twapConf\":\"Confidence interval of the TWAP.\",\"twapPrice\":\"Price of the TWAP.\"}}},\"kind\":\"dev\",\"methods\":{},\"title\":\"IPythEvents contains the events that Pyth contract emits.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@pythnetwork/pyth-sdk-solidity/IPythEvents.sol\":\"IPythEvents\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@pythnetwork/pyth-sdk-solidity/IPythEvents.sol\":{\"keccak256\":\"0xd67239becd2c39bd9d065830be24e70606f5747ab31b8818bea849d09ac17ddc\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://e719bd2d8c1d8d46713aeb700dd6b5ddd766a77830ea9ae3cc9327f67ed775d1\",\"dweb:/ipfs/QmNQYyRVFLEvLsCSTkHkAemTvvZm4CzLN7hUdMidMcBS7u\"]}},\"version\":1}"}},"@pythnetwork/pyth-sdk-solidity/PythStructs.sol":{"PythStructs":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60808060405234601357603a908160198239f35b600080fdfe600080fdfea2646970667358221220211b1c75d92ddd3aa248d2bec61ba31a615203e7bca0a308dc1050578870662b64736f6c63430008130033","opcodes":"PUSH1 0x80 DUP1 PUSH1 0x40 MSTORE CALLVALUE PUSH1 0x13 JUMPI PUSH1 0x3A SWAP1 DUP2 PUSH1 0x19 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT INVALID PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x21 SHL SHR PUSH22 0xD92DDD3AA248D2BEC61BA31A615203E7BCA0A308DC10 POP JUMPI DUP9 PUSH17 0x662B64736F6C6343000813003300000000 ","sourceMap":"64:2355:2:-:0;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"600080fdfea2646970667358221220211b1c75d92ddd3aa248d2bec61ba31a615203e7bca0a308dc1050578870662b64736f6c63430008130033","opcodes":"PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x21 SHL SHR PUSH22 0xD92DDD3AA248D2BEC61BA31A615203E7BCA0A308DC10 POP JUMPI DUP9 PUSH17 0x662B64736F6C6343000813003300000000 ","sourceMap":"64:2355:2:-:0;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@pythnetwork/pyth-sdk-solidity/PythStructs.sol\":\"PythStructs\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@pythnetwork/pyth-sdk-solidity/PythStructs.sol\":{\"keccak256\":\"0x474436bf0d558cc9b2c00a9d0ce318147acdf7963f34ef4acadb9248e65bbc7b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://2b8f9bd9de35e67c7bdbf04d8c2e771718fcc8666456ca5f92dbd914e4a5f2b3\",\"dweb:/ipfs/QmNP3ShBYRp4RiVbAudMB7rNHAqgtwn8pPBzb8JTUaViRh\"]}},\"version\":1}"}},"contracts/BotDetector.sol":{"BotDetectorWithPyth":{"abi":[{"inputs":[{"internalType":"address","name":"_pythContract","type":"address"},{"internalType":"address","name":"_botAnalyzer","type":"address"}],"stateMutability":"nonpayable","type":"constructor"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"score","type":"uint256"},{"indexed":false,"internalType":"string","name":"reason","type":"string"},{"indexed":false,"internalType":"int64","name":"priceUsed","type":"int64"},{"indexed":false,"internalType":"uint256","name":"reactionTimeMs","type":"uint256"}],"name":"BotFlaggedWithProof","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"amount","type":"uint256"},{"indexed":false,"internalType":"uint256","name":"blockNumber","type":"uint256"},{"indexed":false,"internalType":"int64","name":"btcPrice","type":"int64"}],"name":"TradeExecuted","type":"event"},{"inputs":[],"name":"admin","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"botAnalyzer","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"botEvidenceProof","outputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"uint256","name":"tradeTimestamp","type":"uint256"},{"internalType":"uint256","name":"pricePublishTime","type":"uint256"},{"internalType":"int64","name":"priceAtTrade","type":"int64"},{"internalType":"uint256","name":"reactionTimeMs","type":"uint256"},{"internalType":"uint256","name":"botScore","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"botScore","outputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"}],"name":"executeTrade","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes[]","name":"priceUpdateData","type":"bytes[]"},{"internalType":"bytes32","name":"priceId","type":"bytes32"}],"name":"executeTradeWithPriceProof","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address[]","name":"users","type":"address[]"},{"internalType":"uint256[]","name":"scores","type":"uint256[]"},{"internalType":"string[]","name":"reasons","type":"string[]"}],"name":"flagBots","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address[]","name":"users","type":"address[]"},{"internalType":"uint256[]","name":"scores","type":"uint256[]"},{"internalType":"string[]","name":"reasons","type":"string[]"},{"internalType":"bytes[]","name":"priceUpdateData","type":"bytes[]"},{"internalType":"bytes32","name":"priceId","type":"bytes32"}],"name":"flagBotsWithPythProof","outputs":[],"stateMutability":"payable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"}],"name":"flaggedAsBots","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getBotEvidence","outputs":[{"components":[{"internalType":"address","name":"user","type":"address"},{"internalType":"uint256","name":"tradeTimestamp","type":"uint256"},{"internalType":"uint256","name":"pricePublishTime","type":"uint256"},{"internalType":"int64","name":"priceAtTrade","type":"int64"},{"internalType":"uint256","name":"reactionTimeMs","type":"uint256"},{"internalType":"uint256","name":"botScore","type":"uint256"}],"internalType":"struct BotDetectorWithPyth.BotEvidence","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getUserTrades","outputs":[{"components":[{"internalType":"address","name":"user","type":"address"},{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"blockNumber","type":"uint256"},{"internalType":"int64","name":"btcPriceAtTrade","type":"int64"},{"internalType":"uint64","name":"pricePublishTime","type":"uint64"}],"internalType":"struct BotDetectorWithPyth.TradeRecord[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"isBot","outputs":[{"internalType":"bool","name":"","type":"bool"},{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"pyth","outputs":[{"internalType":"contract IPyth","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"_newAnalyzer","type":"address"}],"name":"setBotAnalyzer","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"unflagBot","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"","type":"address"},{"internalType":"uint256","name":"","type":"uint256"}],"name":"userTrades","outputs":[{"internalType":"address","name":"user","type":"address"},{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"uint256","name":"blockNumber","type":"uint256"},{"internalType":"int64","name":"btcPriceAtTrade","type":"int64"},{"internalType":"uint64","name":"pricePublishTime","type":"uint64"}],"stateMutability":"view","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"abi_decode_address_fromMemory":{"entryPoint":179,"id":null,"parameterSlots":1,"returnSlots":1}},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 CALLVALUE PUSH2 0x98 JUMPI PUSH1 0x1F PUSH2 0x14D2 CODESIZE DUP2 SWAP1 SUB SWAP2 DUP3 ADD PUSH1 0x1F NOT AND DUP4 ADD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT DUP5 DUP5 LT OR PUSH2 0x9D JUMPI DUP1 DUP5 SWAP3 PUSH1 0x40 SWAP5 DUP6 MSTORE DUP4 CODECOPY DUP2 ADD SUB SLT PUSH2 0x98 JUMPI PUSH2 0x52 PUSH1 0x20 PUSH2 0x4B DUP4 PUSH2 0xB3 JUMP JUMPDEST SWAP3 ADD PUSH2 0xB3 JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 DUP6 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x1 DUP1 SLOAD DUP3 AND CALLER OR SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD SWAP1 SWAP2 AND SWAP2 SWAP1 SWAP3 AND OR SWAP1 SSTORE PUSH1 0x40 MLOAD PUSH2 0x140A SWAP1 DUP2 PUSH2 0xC8 DUP3 CODECOPY RETURN JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x98 JUMPI JUMP INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2D2838B EQ PUSH2 0xED0 JUMPI DUP1 PUSH4 0x9E07DBE EQ PUSH2 0xDC2 JUMPI DUP1 PUSH4 0x1CA1B065 EQ PUSH2 0x881 JUMPI DUP1 PUSH4 0x3BBAC579 EQ PUSH2 0x836 JUMPI DUP1 PUSH4 0x4D4CA309 EQ PUSH2 0x75C JUMPI DUP1 PUSH4 0x927C7742 EQ PUSH2 0x634 JUMPI DUP1 PUSH4 0x9CDA8908 EQ PUSH2 0x3B2 JUMPI DUP1 PUSH4 0xAA2CA71B EQ PUSH2 0x33A JUMPI DUP1 PUSH4 0xB1B1FFAB EQ PUSH2 0x2A2 JUMPI DUP1 PUSH4 0xC32D2A02 EQ PUSH2 0x22A JUMPI DUP1 PUSH4 0xC35FC524 EQ PUSH2 0x201 JUMPI DUP1 PUSH4 0xCAE2B31E EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0xF851A440 EQ PUSH2 0x19F JUMPI DUP1 PUSH4 0xF98D06F0 EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0xFBEC1560 EQ PUSH2 0x139 JUMPI PUSH4 0xFED20C78 EQ PUSH2 0xCD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x136 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x136 JUMPI PUSH2 0xE6 PUSH2 0xFBC JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 DUP3 AND CALLER EQ DUP1 ISZERO PUSH2 0x129 JUMPI JUMPDEST PUSH2 0x107 SWAP1 PUSH2 0x12CE JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH1 0x40 DUP2 KECCAK256 SSTORE DUP1 RETURN JUMPDEST POP PUSH1 0x1 SLOAD DUP3 AND CALLER EQ PUSH2 0xFE JUMP JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x136 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x136 JUMPI PUSH1 0x20 SWAP1 PUSH1 0xFF SWAP1 PUSH1 0x40 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x164 PUSH2 0xFBC JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x4 DUP5 MSTORE KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x136 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x136 JUMPI SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x136 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x136 JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x136 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x136 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x40 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1F0 PUSH2 0xFBC JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x5 DUP4 MSTORE KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x136 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x136 JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x136 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x136 JUMPI PUSH1 0xC0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH1 0x40 SWAP1 DUP3 PUSH2 0x254 PUSH2 0xFBC JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE KECCAK256 SWAP1 DUP2 SLOAD AND SWAP1 PUSH1 0x1 DUP2 ADD SLOAD SWAP1 PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x7 SIGNEXTEND SWAP1 PUSH1 0x5 PUSH1 0x4 DUP5 ADD SLOAD SWAP4 ADD SLOAD SWAP4 PUSH1 0x40 MLOAD SWAP6 DUP7 MSTORE PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x136 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x136 JUMPI PUSH2 0x2BC PUSH2 0xFBC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x24 CALLDATALOAD SWAP4 SWAP1 DUP5 LT ISZERO PUSH2 0x136 JUMPI POP PUSH2 0x2F5 PUSH1 0xC0 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP3 PUSH2 0xFD2 JUMP JUMPDEST POP SWAP2 DUP3 SLOAD AND SWAP2 PUSH1 0x1 DUP2 ADD SLOAD SWAP1 PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x4 PUSH1 0x3 DUP4 ADD SLOAD SWAP3 ADD SLOAD SWAP3 PUSH1 0x40 MLOAD SWAP6 DUP7 MSTORE PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP5 ADD MSTORE DUP1 PUSH1 0x7 SIGNEXTEND PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x40 SHR AND PUSH1 0xA0 DUP3 ADD MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x136 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x136 JUMPI PUSH2 0x354 PUSH2 0xFBC JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 DUP3 AND CALLER SUB PUSH2 0x380 JUMPI AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0x2 SLOAD AND OR PUSH1 0x2 SSTORE DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x27B7363C9030B236B4B7 PUSH1 0xB1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x136 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD DUP3 DUP2 GT PUSH2 0x630 JUMPI PUSH2 0x3E2 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xF8C JUMP JUMPDEST SWAP1 SWAP3 CALLER DUP6 MSTORE PUSH1 0x20 SWAP4 PUSH1 0x4 DUP6 MSTORE PUSH2 0x3FF PUSH1 0xFF PUSH1 0x40 DUP9 KECCAK256 SLOAD AND ISZERO PUSH2 0x1004 JUMP JUMPDEST PUSH2 0x40A DUP5 ISZERO ISZERO PUSH2 0x1050 JUMP JUMPDEST DUP6 SLOAD PUSH1 0x40 MLOAD PUSH4 0xD47EED45 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP2 DUP6 AND DUP8 DUP4 DUP1 PUSH2 0x437 DUP6 DUP9 PUSH1 0x4 DUP5 ADD PUSH2 0x11D3 JUMP JUMPDEST SUB DUP2 DUP5 GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x625 JUMPI DUP10 SWAP4 PUSH2 0x5F1 JUMPI JUMPDEST POP DUP3 CALLVALUE LT PUSH2 0x5B9 JUMPI SWAP1 DUP2 DUP10 SWAP5 SWAP4 SWAP3 EXTCODESIZE ISZERO PUSH2 0x5AA JUMPI PUSH1 0x40 MLOAD PUSH4 0x1DF3CBC5 PUSH1 0xE3 SHL DUP2 MSTORE SWAP4 DUP6 SWAP4 DUP6 SWAP4 DUP5 SWAP3 DUP4 SWAP2 PUSH2 0x481 SWAP2 PUSH1 0x4 DUP5 ADD PUSH2 0x11D3 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x5AE JUMPI PUSH2 0x596 JUMPI JUMPDEST POP PUSH1 0x44 SWAP3 PUSH1 0x80 SWAP2 SLOAD AND PUSH1 0x40 MLOAD SWAP4 DUP5 DUP1 SWAP3 PUSH4 0x52571AF PUSH1 0xE5 SHL DUP3 MSTORE DUP3 CALLDATALOAD PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x3C PUSH1 0x24 DUP4 ADD MSTORE GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x58B JUMPI DUP6 SWAP3 PUSH2 0x557 JUMPI JUMPDEST POP PUSH2 0x514 SWAP1 CALLER DUP7 MSTORE PUSH1 0x3 DUP6 MSTORE PUSH1 0x40 DUP7 KECCAK256 DUP4 MLOAD SWAP2 PUSH1 0x60 DUP6 ADD MLOAD AND PUSH1 0x40 MLOAD SWAP3 PUSH2 0x4EE DUP5 PUSH2 0x108D JUMP JUMPDEST CALLER DUP5 MSTORE TIMESTAMP DUP9 DUP6 ADD MSTORE DUP7 PUSH1 0x40 DUP6 ADD MSTORE NUMBER PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x7 SIGNEXTEND PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP4 ADD MSTORE PUSH2 0x10F2 JUMP JUMPDEST MLOAD PUSH1 0x7 SIGNEXTEND SWAP1 PUSH1 0x40 MLOAD SWAP3 TIMESTAMP DUP5 MSTORE DUP4 ADD MSTORE NUMBER PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH32 0x3A41B4A45381E8007ECEED209F6413255128C9FAF4A51F718825CAB30CB89FFB PUSH1 0x80 CALLER SWAP3 LOG2 DUP1 RETURN JUMPDEST PUSH2 0x514 SWAP2 SWAP3 POP PUSH2 0x57D SWAP1 PUSH1 0x80 RETURNDATASIZE DUP2 GT PUSH2 0x584 JUMPI JUMPDEST PUSH2 0x575 DUP2 DUP4 PUSH2 0x10D1 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x1262 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x4C8 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x56B JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x59F SWAP1 PUSH2 0x10BE JUMP JUMPDEST PUSH2 0x5AA JUMPI DUP5 CODESIZE PUSH2 0x490 JUMP JUMPDEST DUP5 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP10 SWAP1 MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x496E73756666696369656E7420666565 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 SWAP3 POP DUP8 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x61E JUMPI JUMPDEST PUSH2 0x609 DUP2 DUP4 PUSH2 0x10D1 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x619 JUMPI MLOAD SWAP2 CODESIZE PUSH2 0x44A JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x5FF JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP12 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x136 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x758 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 PUSH2 0x659 PUSH2 0xFBC JUMP JUMPDEST AND DUP4 MSTORE PUSH1 0x3 DUP2 MSTORE PUSH1 0x40 DUP4 KECCAK256 SWAP1 DUP2 SLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP5 DUP6 DUP4 GT PUSH2 0x744 JUMPI SWAP2 SWAP1 PUSH1 0x40 MLOAD SWAP2 PUSH1 0x5 PUSH2 0x68E DUP4 DUP4 DUP4 SHL ADD DUP6 PUSH2 0x10D1 JUMP JUMPDEST DUP2 DUP5 MSTORE DUP3 DUP5 ADD DUP1 SWAP7 DUP7 MSTORE DUP4 DUP7 KECCAK256 DUP7 SWAP2 JUMPDEST DUP5 DUP4 LT PUSH2 0x720 JUMPI POP POP POP POP POP PUSH1 0x40 MLOAD SWAP5 DUP2 DUP7 ADD SWAP3 DUP3 DUP8 MSTORE MLOAD DUP1 SWAP4 MSTORE PUSH1 0x40 DUP7 ADD SWAP5 SWAP4 SWAP1 JUMPDEST DUP4 DUP3 LT PUSH2 0x6CE JUMPI DUP7 DUP7 SUB DUP8 RETURN JUMPDEST DUP5 MLOAD DUP1 MLOAD DUP3 AND DUP8 MSTORE DUP1 DUP5 ADD MLOAD DUP8 DUP6 ADD MSTORE PUSH1 0x40 DUP1 DUP3 ADD MLOAD SWAP1 DUP9 ADD MSTORE PUSH1 0x60 DUP1 DUP3 ADD MLOAD SWAP1 DUP9 ADD MSTORE PUSH1 0x80 DUP1 DUP3 ADD MLOAD PUSH1 0x7 SIGNEXTEND SWAP1 DUP9 ADD MSTORE PUSH1 0xA0 SWAP1 DUP2 ADD MLOAD DUP10 AND SWAP1 DUP8 ADD MSTORE PUSH1 0xC0 SWAP1 SWAP6 ADD SWAP5 SWAP4 DUP3 ADD SWAP4 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x6C1 JUMP JUMPDEST DUP4 DUP7 PUSH1 0x1 SWAP3 PUSH2 0x732 DUP6 SWAP12 SWAP10 SWAP11 SWAP12 PUSH2 0x137C JUMP JUMPDEST DUP2 MSTORE ADD SWAP3 ADD SWAP3 ADD SWAP2 SWAP1 SWAP7 SWAP6 SWAP5 SWAP7 PUSH2 0x69E JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x136 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x136 JUMPI PUSH1 0xC0 SWAP1 PUSH1 0x40 PUSH2 0x77B PUSH2 0xFBC JUMP JUMPDEST SWAP2 DUP1 PUSH1 0xA0 DUP4 MLOAD PUSH2 0x78A DUP2 PUSH2 0x108D JUMP JUMPDEST DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE DUP3 DUP6 DUP3 ADD MSTORE DUP3 PUSH1 0x60 DUP3 ADD MSTORE DUP3 PUSH1 0x80 DUP3 ADD MSTORE ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP4 AND DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE KECCAK256 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH2 0x7C6 DUP3 PUSH2 0x108D JUMP JUMPDEST DUP3 SLOAD AND SWAP2 DUP3 DUP3 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x20 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x40 DUP5 ADD SWAP1 DUP2 MSTORE PUSH1 0x3 DUP4 ADD SLOAD SWAP2 PUSH1 0x60 DUP6 ADD SWAP3 PUSH1 0x7 SIGNEXTEND DUP4 MSTORE PUSH1 0xA0 PUSH1 0x5 PUSH1 0x4 DUP7 ADD SLOAD SWAP6 PUSH1 0x80 DUP9 ADD SWAP7 DUP8 MSTORE ADD SLOAD SWAP6 ADD SWAP5 DUP6 MSTORE PUSH1 0x40 MLOAD SWAP6 DUP7 MSTORE MLOAD PUSH1 0x20 DUP7 ADD MSTORE MLOAD PUSH1 0x40 DUP6 ADD MSTORE MLOAD PUSH1 0x7 SIGNEXTEND PUSH1 0x60 DUP5 ADD MSTORE MLOAD PUSH1 0x80 DUP4 ADD MSTORE MLOAD PUSH1 0xA0 DUP3 ADD MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x136 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x136 JUMPI PUSH1 0x40 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x85B PUSH2 0xFBC JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE DUP2 PUSH1 0xFF DUP2 DUP4 KECCAK256 SLOAD AND SWAP2 PUSH1 0x5 PUSH1 0x20 MSTORE KECCAK256 SLOAD DUP3 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST POP PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x136 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x758 JUMPI PUSH2 0x8AD SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xF8C JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xDBE JUMPI PUSH2 0x8CE SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xF8C JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x5AA JUMPI PUSH2 0x8EF SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xF8C JUMP JUMPDEST SWAP2 SWAP1 SWAP3 PUSH1 0x64 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xDBA JUMPI PUSH2 0x911 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xF8C JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x2 SLOAD AND CALLER EQ DUP1 ISZERO PUSH2 0xDA6 JUMPI JUMPDEST PUSH2 0x92F SWAP1 PUSH2 0x12CE JUMP JUMPDEST PUSH2 0x93A DUP8 DUP11 EQ PUSH2 0x130B JUMP JUMPDEST DUP8 SLOAD PUSH1 0x40 MLOAD PUSH4 0xD47EED45 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 SWAP1 PUSH1 0x20 DUP2 DUP1 PUSH2 0x968 DUP8 DUP7 PUSH1 0x4 DUP5 ADD PUSH2 0x11D3 JUMP JUMPDEST SUB DUP2 DUP7 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xD9B JUMPI DUP11 SWAP2 PUSH2 0xD69 JUMPI JUMPDEST POP DUP1 CALLVALUE LT PUSH2 0xD2C JUMPI DUP3 EXTCODESIZE ISZERO PUSH2 0xD28 JUMPI SWAP2 PUSH2 0x9AE SWAP4 SWAP2 DUP11 SWAP4 PUSH1 0x40 MLOAD DUP1 SWAP7 DUP2 SWAP6 DUP3 SWAP5 PUSH4 0x1DF3CBC5 PUSH1 0xE3 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD PUSH2 0x11D3 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0xD1D JUMPI PUSH2 0xD09 JUMPI JUMPDEST POP DUP6 SLOAD PUSH1 0x40 MLOAD PUSH4 0x96834AD3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x84 CALLDATALOAD PUSH1 0x4 DUP3 ADD MSTORE SWAP7 SWAP8 SWAP6 SWAP7 SWAP6 SWAP1 PUSH1 0x80 SWAP1 DUP8 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP6 DUP7 ISZERO PUSH2 0xCFE JUMPI DUP9 SWAP7 PUSH2 0xCDD JUMPI JUMPDEST POP DUP8 JUMPDEST DUP2 DUP2 LT PUSH2 0xA0C JUMPI DUP9 DUP1 RETURN JUMPDEST PUSH2 0xA1F PUSH2 0xA1A DUP3 DUP5 DUP7 PUSH2 0x1358 JUMP JUMPDEST PUSH2 0x1368 JUMP JUMPDEST PUSH2 0xA2A DUP3 DUP11 DUP8 PUSH2 0x1358 JUMP JUMPDEST CALLDATALOAD DUP7 DUP4 LT ISZERO PUSH2 0xCC9 JUMPI DUP3 PUSH1 0x5 SHL DUP9 ADD CALLDATALOAD SWAP2 PUSH1 0x1E NOT DUP10 CALLDATASIZE SUB ADD DUP4 SLT ISZERO PUSH2 0xCC5 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 DUP11 ADD CALLDATALOAD GT PUSH2 0xCC5 JUMPI DUP3 DUP10 ADD CALLDATALOAD CALLDATASIZE SUB PUSH1 0x20 DUP5 DUP12 ADD ADD SGT PUSH2 0xCC5 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP13 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP15 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x5 DUP3 MSTORE DUP1 DUP15 KECCAK256 DUP5 SWAP1 SSTORE PUSH1 0x3 SWAP1 SWAP2 MSTORE DUP13 KECCAK256 DUP1 SLOAD DUP1 PUSH2 0xABA JUMPI JUMPDEST POP POP POP POP POP PUSH2 0xAB5 SWAP1 PUSH2 0x1349 JUMP JUMPDEST PUSH2 0xA01 JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DUP2 ADD GT PUSH2 0xCB1 JUMPI PUSH2 0xAD9 PUSH1 0x20 SWAP3 PUSH2 0xADF SWAP3 PUSH1 0x0 NOT ADD SWAP1 PUSH2 0xFD2 JUMP JUMPDEST POP PUSH2 0x137C JUMP JUMPDEST ADD DUP13 DUP2 MLOAD DUP12 DUP14 PUSH1 0x60 DUP2 ADD MLOAD SWAP4 DUP5 DUP5 GT PUSH1 0x0 EQ PUSH2 0xC74 JUMPI POP POP POP DUP2 DUP2 SUB SWAP1 DUP1 DUP3 GT PUSH2 0xC5E JUMPI PUSH2 0x3E8 SWAP3 DUP3 DUP5 DUP2 MUL DIV DUP5 EQ SWAP2 EQ OR ISZERO PUSH2 0xC4A JUMPI SWAP3 DUP12 SWAP3 DUP16 DUP15 PUSH2 0xC26 SWAP2 PUSH1 0x5 PUSH2 0xAB5 SWAP12 SWAP11 SWAP10 SWAP7 PUSH32 0x3FF67EDBD0619CB026483F7AD63337D36C11E8EFA0F694BD3E0559927DBFC09F SWAP10 MUL SWAP5 JUMPDEST MLOAD SWAP2 PUSH1 0x60 DUP5 ADD MLOAD DUP5 MLOAD SWAP1 PUSH1 0x40 MLOAD SWAP5 PUSH2 0xB64 DUP7 PUSH2 0x108D JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP11 AND DUP7 MSTORE PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x7 SIGNEXTEND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD DUP7 DUP2 MSTORE PUSH1 0x40 PUSH1 0xA0 DUP6 ADD SWAP3 DUP11 DUP5 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP11 AND DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE KECCAK256 SWAP4 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 MLOAD AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP7 SLOAD AND OR DUP6 SSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x1 DUP7 ADD SSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x2 DUP7 ADD SSTORE PUSH1 0x60 PUSH1 0x3 DUP7 ADD SWAP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB NOT DUP3 SLOAD AND SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND OR SWAP1 SSTORE MLOAD PUSH1 0x4 DUP5 ADD SSTORE MLOAD SWAP2 ADD SSTORE MLOAD PUSH1 0x7 SIGNEXTEND SWAP7 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP6 DUP7 MSTORE PUSH1 0x80 PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0x20 PUSH1 0x80 DUP8 ADD SWAP3 DUP1 DUP4 ADD CALLDATALOAD SWAP3 ADD ADD PUSH2 0x11B2 JUMP JUMPDEST PUSH1 0x40 DUP5 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP4 SUB SWAP1 LOG2 SWAP1 CODESIZE DUP1 DUP1 DUP1 PUSH2 0xAA7 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP16 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP16 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xAB5 SWAP10 SWAP9 SWAP8 SWAP5 POP PUSH32 0x3FF67EDBD0619CB026483F7AD63337D36C11E8EFA0F694BD3E0559927DBFC09F SWAP7 SWAP4 POP SWAP1 DUP2 PUSH1 0x5 PUSH2 0xC26 SWAP4 SWAP8 SWAP5 SWAP8 SWAP5 PUSH2 0xB4D JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP15 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP15 REVERT JUMPDEST DUP12 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP12 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 DUP12 REVERT JUMPDEST PUSH2 0xCF7 SWAP2 SWAP7 POP PUSH1 0x80 RETURNDATASIZE PUSH1 0x80 GT PUSH2 0x584 JUMPI PUSH2 0x575 DUP2 DUP4 PUSH2 0x10D1 JUMP JUMPDEST SWAP5 CODESIZE PUSH2 0x9FE JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP11 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP6 PUSH2 0xD16 PUSH1 0x24 SWAP7 SWAP8 PUSH2 0x10BE JUMP JUMPDEST SWAP6 SWAP5 PUSH2 0x9BD JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP10 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP10 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x496E73756666696369656E74205079746820666565 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xD93 JUMPI JUMPDEST DUP2 PUSH2 0xD84 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x10D1 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xD28 JUMPI MLOAD CODESIZE PUSH2 0x97B JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xD77 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP13 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x926 JUMP JUMPDEST DUP7 DUP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x136 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x136 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x4 CALLDATALOAD DUP2 DUP2 GT PUSH2 0xDBE JUMPI PUSH2 0xDF4 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xF8C JUMP JUMPDEST SWAP2 PUSH1 0x24 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x5AA JUMPI PUSH2 0xE0D SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xF8C JUMP JUMPDEST SWAP4 SWAP1 SWAP2 PUSH1 0x44 CALLDATALOAD SWAP1 DUP2 GT PUSH2 0xECC JUMPI PUSH2 0xE28 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xF8C JUMP JUMPDEST POP POP PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 DUP3 AND CALLER EQ DUP1 ISZERO PUSH2 0xEBF JUMPI JUMPDEST PUSH2 0xE4B SWAP1 PUSH2 0x12CE JUMP JUMPDEST PUSH2 0xE56 DUP6 DUP3 EQ PUSH2 0x130B JUMP JUMPDEST DUP6 JUMPDEST DUP2 DUP2 LT PUSH2 0xE63 JUMPI DUP7 DUP1 RETURN JUMPDEST DUP1 DUP4 PUSH2 0xE76 PUSH2 0xA1A PUSH2 0xEBA SWAP5 DUP7 DUP11 PUSH2 0x1358 JUMP JUMPDEST AND DUP9 MSTORE PUSH1 0x20 PUSH1 0x4 DUP2 MSTORE PUSH1 0x40 DUP10 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x5 PUSH2 0xE9B DUP4 DUP11 DUP10 PUSH2 0x1358 JUMP JUMPDEST CALLDATALOAD SWAP2 DUP7 PUSH2 0xEAC PUSH2 0xA1A DUP7 DUP10 DUP14 PUSH2 0x1358 JUMP JUMPDEST AND DUP12 MSTORE MSTORE PUSH1 0x40 DUP10 KECCAK256 SSTORE PUSH2 0x1349 JUMP JUMPDEST PUSH2 0xE58 JUMP JUMPDEST POP PUSH1 0x1 SLOAD DUP3 AND CALLER EQ PUSH2 0xE42 JUMP JUMPDEST DUP6 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x136 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x136 JUMPI PUSH1 0x4 CALLDATALOAD CALLER DUP3 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH2 0xEFE PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND ISZERO PUSH2 0x1004 JUMP JUMPDEST PUSH2 0xF09 DUP2 ISZERO ISZERO PUSH2 0x1050 JUMP JUMPDEST CALLER DUP3 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH2 0xF4B PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x40 MLOAD SWAP1 PUSH2 0xF25 DUP3 PUSH2 0x108D JUMP JUMPDEST CALLER DUP3 MSTORE TIMESTAMP PUSH1 0x20 DUP4 ADD MSTORE DUP4 PUSH1 0x40 DUP4 ADD MSTORE NUMBER PUSH1 0x60 DUP4 ADD MSTORE DUP5 PUSH1 0x80 DUP4 ADD MSTORE DUP5 PUSH1 0xA0 DUP4 ADD MSTORE PUSH2 0x10F2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 TIMESTAMP DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE NUMBER PUSH1 0x40 DUP3 ADD MSTORE DUP2 PUSH1 0x60 DUP3 ADD MSTORE PUSH32 0x3A41B4A45381E8007ECEED209F6413255128C9FAF4A51F718825CAB30CB89FFB PUSH1 0x80 CALLER SWAP3 LOG2 DUP1 RETURN JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x619 JUMPI DUP3 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x619 JUMPI PUSH1 0x20 DUP1 DUP6 ADD SWAP5 DUP5 PUSH1 0x5 SHL ADD ADD GT PUSH2 0x619 JUMPI JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x619 JUMPI JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0xFEE JUMPI PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 MUL ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ISZERO PUSH2 0x100B JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x426F74206465746563746564202D2074726164696E6720626C6F636B65642100 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1057 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x125B9D985B1A5908185B5BDD5B9D PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0xC0 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x10A8 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x10A8 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x10A8 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST DUP1 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0x10A8 JUMPI PUSH2 0x1114 SWAP2 PUSH1 0x1 DUP3 ADD DUP2 SSTORE PUSH2 0xFD2 JUMP JUMPDEST PUSH2 0x119C JUMPI PUSH1 0x4 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP4 MLOAD AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP3 SLOAD AND OR DUP2 SSTORE PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x1 DUP3 ADD SSTORE PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x2 DUP3 ADD SSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x3 DUP3 ADD SSTORE ADD SWAP1 PUSH1 0x80 DUP2 ADD MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH16 0xFFFFFFFFFFFFFFFF0000000000000000 PUSH1 0xA0 DUP6 SLOAD SWAP4 ADD MLOAD PUSH1 0x40 SHL AND SWAP3 AND SWAP1 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND OR OR SWAP1 SSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 DUP1 PUSH1 0x20 SWAP4 SWAP3 DUP2 DUP5 MSTORE DUP5 DUP5 ADD CALLDATACOPY PUSH1 0x0 DUP3 DUP3 ADD DUP5 ADD MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x20 DUP2 DUP2 DUP6 ADD DUP3 DUP7 MSTORE MSTORE PUSH1 0x40 DUP5 ADD SWAP4 PUSH1 0x40 DUP4 PUSH1 0x5 SHL DUP3 ADD ADD SWAP5 DUP5 PUSH1 0x0 SWAP3 JUMPDEST DUP6 DUP5 LT PUSH2 0x1203 JUMPI POP POP POP POP POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 PUSH1 0x3F NOT DUP3 DUP3 SUB ADD DUP5 MSTORE DUP8 CALLDATALOAD PUSH1 0x1E NOT DUP5 CALLDATASIZE SUB ADD DUP2 SLT ISZERO PUSH2 0x619 JUMPI DUP4 ADD DUP7 DUP2 ADD SWAP2 SWAP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x619 JUMPI DUP1 CALLDATASIZE SUB DUP4 SGT PUSH2 0x619 JUMPI PUSH2 0x1251 DUP9 SWAP3 DUP4 SWAP3 PUSH1 0x1 SWAP6 PUSH2 0x11B2 JUMP JUMPDEST SWAP10 ADD SWAP5 ADD SWAP5 ADD SWAP3 SWAP6 SWAP5 SWAP4 SWAP2 SWAP1 PUSH2 0x11F2 JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x80 SWAP2 SUB SLT PUSH2 0x619 JUMPI PUSH1 0x40 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x80 DUP4 ADD DUP2 DUP2 GT DUP5 DUP3 LT OR PUSH2 0x10A8 JUMPI PUSH1 0x40 MSTORE DUP2 MLOAD DUP1 PUSH1 0x7 SIGNEXTEND DUP2 SUB PUSH2 0x619 JUMPI DUP4 MSTORE PUSH1 0x20 DUP3 ADD MLOAD SWAP1 DUP2 AND DUP2 SUB PUSH2 0x619 JUMPI PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD SWAP1 DUP2 PUSH1 0x3 SIGNEXTEND DUP3 SUB PUSH2 0x619 JUMPI PUSH1 0x60 SWAP2 PUSH1 0x40 DUP5 ADD MSTORE ADD MLOAD PUSH1 0x60 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x12D5 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x139BDD08185D5D1A1BDC9A5E9959 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1312 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x98CADCCEE8D040DAD2E6DAC2E8C6D PUSH1 0x8B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0xC5E JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0xFEE JUMPI PUSH1 0x5 SHL ADD SWAP1 JUMP JUMPDEST CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x619 JUMPI SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD PUSH2 0x1389 DUP2 PUSH2 0x108D JUMP JUMPDEST PUSH1 0xA0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x4 DUP4 SWAP6 PUSH1 0x1 DUP1 DUP6 SHL SUB DUP2 SLOAD AND DUP6 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP7 ADD MSTORE ADD SLOAD DUP1 PUSH1 0x7 SIGNEXTEND PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0x40 SHR AND SWAP2 ADD MSTORE JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA9 0x4F PUSH29 0x6EDF7C206307F1E5245A7BB0D9C9918C55E0F81C8D99415613CC5D6E05 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ","sourceMap":"166:6135:3:-:0;;;;;;;;;;;;;-1:-1:-1;;166:6135:3;;;;-1:-1:-1;;;;;166:6135:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;:::i;:::-;-1:-1:-1;166:6135:3;;-1:-1:-1;;;;;;166:6135:3;;;-1:-1:-1;;;;;166:6135:3;;;;;;;;;;;;1522:10;166:6135;;;1542:26;166:6135;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;166:6135:3;;;;;;-1:-1:-1;166:6135:3;;;;;-1:-1:-1;166:6135:3;;;;-1:-1:-1;;;;;166:6135:3;;;;;;:::o"},"deployedBytecode":{"functionDebugData":{"abi_decode_address":{"entryPoint":4028,"id":null,"parameterSlots":0,"returnSlots":1},"abi_decode_array_address_dyn_calldata":{"entryPoint":3980,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_struct_Price_fromMemory":{"entryPoint":4706,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_array_bytes_calldata_dyn_calldata":{"entryPoint":4563,"id":null,"parameterSlots":3,"returnSlots":1},"abi_encode_bytes_calldata":{"entryPoint":4530,"id":null,"parameterSlots":3,"returnSlots":1},"array_push_from_struct_TradeRecord_to_array_struct_TradeRecord_storage_dyn_ptr":{"entryPoint":4338,"id":null,"parameterSlots":2,"returnSlots":0},"calldata_array_index_access_address_dyn_calldata":{"entryPoint":4952,"id":null,"parameterSlots":3,"returnSlots":1},"finalize_allocation":{"entryPoint":4305,"id":null,"parameterSlots":2,"returnSlots":0},"finalize_allocation_16888":{"entryPoint":4237,"id":null,"parameterSlots":1,"returnSlots":0},"finalize_allocation_16889":{"entryPoint":4286,"id":null,"parameterSlots":1,"returnSlots":0},"increment_uint256":{"entryPoint":4937,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_calldatat_address":{"entryPoint":4968,"id":null,"parameterSlots":1,"returnSlots":1},"read_from_storage_reference_type_struct_TradeRecord":{"entryPoint":4988,"id":null,"parameterSlots":1,"returnSlots":1},"require_helper_stringliteral_2fd1":{"entryPoint":4176,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_a55b":{"entryPoint":4100,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_bb46":{"entryPoint":4875,"id":null,"parameterSlots":1,"returnSlots":0},"require_helper_stringliteral_fac3":{"entryPoint":4814,"id":null,"parameterSlots":1,"returnSlots":0},"storage_array_index_access_struct_TradeRecord_dyn":{"entryPoint":4050,"id":null,"parameterSlots":2,"returnSlots":2}},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT ISZERO PUSH2 0x12 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x2D2838B EQ PUSH2 0xED0 JUMPI DUP1 PUSH4 0x9E07DBE EQ PUSH2 0xDC2 JUMPI DUP1 PUSH4 0x1CA1B065 EQ PUSH2 0x881 JUMPI DUP1 PUSH4 0x3BBAC579 EQ PUSH2 0x836 JUMPI DUP1 PUSH4 0x4D4CA309 EQ PUSH2 0x75C JUMPI DUP1 PUSH4 0x927C7742 EQ PUSH2 0x634 JUMPI DUP1 PUSH4 0x9CDA8908 EQ PUSH2 0x3B2 JUMPI DUP1 PUSH4 0xAA2CA71B EQ PUSH2 0x33A JUMPI DUP1 PUSH4 0xB1B1FFAB EQ PUSH2 0x2A2 JUMPI DUP1 PUSH4 0xC32D2A02 EQ PUSH2 0x22A JUMPI DUP1 PUSH4 0xC35FC524 EQ PUSH2 0x201 JUMPI DUP1 PUSH4 0xCAE2B31E EQ PUSH2 0x1C8 JUMPI DUP1 PUSH4 0xF851A440 EQ PUSH2 0x19F JUMPI DUP1 PUSH4 0xF98D06F0 EQ PUSH2 0x178 JUMPI DUP1 PUSH4 0xFBEC1560 EQ PUSH2 0x139 JUMPI PUSH4 0xFED20C78 EQ PUSH2 0xCD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH2 0x136 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x136 JUMPI PUSH2 0xE6 PUSH2 0xFBC JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 DUP3 AND CALLER EQ DUP1 ISZERO PUSH2 0x129 JUMPI JUMPDEST PUSH2 0x107 SWAP1 PUSH2 0x12CE JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0xFF NOT DUP2 SLOAD AND SWAP1 SSTORE PUSH1 0x5 PUSH1 0x20 MSTORE DUP1 PUSH1 0x40 DUP2 KECCAK256 SSTORE DUP1 RETURN JUMPDEST POP PUSH1 0x1 SLOAD DUP3 AND CALLER EQ PUSH2 0xFE JUMP JUMPDEST DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x136 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x136 JUMPI PUSH1 0x20 SWAP1 PUSH1 0xFF SWAP1 PUSH1 0x40 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x164 PUSH2 0xFBC JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x4 DUP5 MSTORE KECCAK256 SLOAD AND PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x136 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x136 JUMPI SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x136 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x136 JUMPI PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x136 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x136 JUMPI PUSH1 0x20 SWAP1 PUSH1 0x40 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x1F0 PUSH2 0xFBC JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x5 DUP4 MSTORE KECCAK256 SLOAD PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x136 JUMPI DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x136 JUMPI PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 SWAP1 RETURN JUMPDEST POP CALLVALUE PUSH2 0x136 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x136 JUMPI PUSH1 0xC0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 PUSH1 0x40 SWAP1 DUP3 PUSH2 0x254 PUSH2 0xFBC JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE KECCAK256 SWAP1 DUP2 SLOAD AND SWAP1 PUSH1 0x1 DUP2 ADD SLOAD SWAP1 PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x3 DUP3 ADD SLOAD PUSH1 0x7 SIGNEXTEND SWAP1 PUSH1 0x5 PUSH1 0x4 DUP5 ADD SLOAD SWAP4 ADD SLOAD SWAP4 PUSH1 0x40 MLOAD SWAP6 DUP7 MSTORE PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD MSTORE PUSH1 0xA0 DUP3 ADD MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x136 JUMPI PUSH1 0x40 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x136 JUMPI PUSH2 0x2BC PUSH2 0xFBC JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP3 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 DUP3 KECCAK256 DUP1 SLOAD PUSH1 0x24 CALLDATALOAD SWAP4 SWAP1 DUP5 LT ISZERO PUSH2 0x136 JUMPI POP PUSH2 0x2F5 PUSH1 0xC0 SWAP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP3 PUSH2 0xFD2 JUMP JUMPDEST POP SWAP2 DUP3 SLOAD AND SWAP2 PUSH1 0x1 DUP2 ADD SLOAD SWAP1 PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x4 PUSH1 0x3 DUP4 ADD SLOAD SWAP3 ADD SLOAD SWAP3 PUSH1 0x40 MLOAD SWAP6 DUP7 MSTORE PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x60 DUP5 ADD MSTORE DUP1 PUSH1 0x7 SIGNEXTEND PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x40 SHR AND PUSH1 0xA0 DUP3 ADD MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x136 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x136 JUMPI PUSH2 0x354 PUSH2 0xFBC JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 DUP3 AND CALLER SUB PUSH2 0x380 JUMPI AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL PUSH1 0x2 SLOAD AND OR PUSH1 0x2 SSTORE DUP1 RETURN JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xA PUSH1 0x24 DUP3 ADD MSTORE PUSH10 0x27B7363C9030B236B4B7 PUSH1 0xB1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST POP PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x136 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x4 CALLDATALOAD PUSH1 0x24 CALLDATALOAD DUP3 DUP2 GT PUSH2 0x630 JUMPI PUSH2 0x3E2 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xF8C JUMP JUMPDEST SWAP1 SWAP3 CALLER DUP6 MSTORE PUSH1 0x20 SWAP4 PUSH1 0x4 DUP6 MSTORE PUSH2 0x3FF PUSH1 0xFF PUSH1 0x40 DUP9 KECCAK256 SLOAD AND ISZERO PUSH2 0x1004 JUMP JUMPDEST PUSH2 0x40A DUP5 ISZERO ISZERO PUSH2 0x1050 JUMP JUMPDEST DUP6 SLOAD PUSH1 0x40 MLOAD PUSH4 0xD47EED45 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP5 SWAP1 SWAP2 DUP6 AND DUP8 DUP4 DUP1 PUSH2 0x437 DUP6 DUP9 PUSH1 0x4 DUP5 ADD PUSH2 0x11D3 JUMP JUMPDEST SUB DUP2 DUP5 GAS STATICCALL SWAP3 DUP4 ISZERO PUSH2 0x625 JUMPI DUP10 SWAP4 PUSH2 0x5F1 JUMPI JUMPDEST POP DUP3 CALLVALUE LT PUSH2 0x5B9 JUMPI SWAP1 DUP2 DUP10 SWAP5 SWAP4 SWAP3 EXTCODESIZE ISZERO PUSH2 0x5AA JUMPI PUSH1 0x40 MLOAD PUSH4 0x1DF3CBC5 PUSH1 0xE3 SHL DUP2 MSTORE SWAP4 DUP6 SWAP4 DUP6 SWAP4 DUP5 SWAP3 DUP4 SWAP2 PUSH2 0x481 SWAP2 PUSH1 0x4 DUP5 ADD PUSH2 0x11D3 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0x5AE JUMPI PUSH2 0x596 JUMPI JUMPDEST POP PUSH1 0x44 SWAP3 PUSH1 0x80 SWAP2 SLOAD AND PUSH1 0x40 MLOAD SWAP4 DUP5 DUP1 SWAP3 PUSH4 0x52571AF PUSH1 0xE5 SHL DUP3 MSTORE DUP3 CALLDATALOAD PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x3C PUSH1 0x24 DUP4 ADD MSTORE GAS STATICCALL SWAP2 DUP3 ISZERO PUSH2 0x58B JUMPI DUP6 SWAP3 PUSH2 0x557 JUMPI JUMPDEST POP PUSH2 0x514 SWAP1 CALLER DUP7 MSTORE PUSH1 0x3 DUP6 MSTORE PUSH1 0x40 DUP7 KECCAK256 DUP4 MLOAD SWAP2 PUSH1 0x60 DUP6 ADD MLOAD AND PUSH1 0x40 MLOAD SWAP3 PUSH2 0x4EE DUP5 PUSH2 0x108D JUMP JUMPDEST CALLER DUP5 MSTORE TIMESTAMP DUP9 DUP6 ADD MSTORE DUP7 PUSH1 0x40 DUP6 ADD MSTORE NUMBER PUSH1 0x60 DUP6 ADD MSTORE PUSH1 0x7 SIGNEXTEND PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0xA0 DUP4 ADD MSTORE PUSH2 0x10F2 JUMP JUMPDEST MLOAD PUSH1 0x7 SIGNEXTEND SWAP1 PUSH1 0x40 MLOAD SWAP3 TIMESTAMP DUP5 MSTORE DUP4 ADD MSTORE NUMBER PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH32 0x3A41B4A45381E8007ECEED209F6413255128C9FAF4A51F718825CAB30CB89FFB PUSH1 0x80 CALLER SWAP3 LOG2 DUP1 RETURN JUMPDEST PUSH2 0x514 SWAP2 SWAP3 POP PUSH2 0x57D SWAP1 PUSH1 0x80 RETURNDATASIZE DUP2 GT PUSH2 0x584 JUMPI JUMPDEST PUSH2 0x575 DUP2 DUP4 PUSH2 0x10D1 JUMP JUMPDEST DUP2 ADD SWAP1 PUSH2 0x1262 JUMP JUMPDEST SWAP2 SWAP1 PUSH2 0x4C8 JUMP JUMPDEST POP RETURNDATASIZE PUSH2 0x56B JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP8 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH2 0x59F SWAP1 PUSH2 0x10BE JUMP JUMPDEST PUSH2 0x5AA JUMPI DUP5 CODESIZE PUSH2 0x490 JUMP JUMPDEST DUP5 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP5 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP10 SWAP1 MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x496E73756666696369656E7420666565 PUSH1 0x80 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 SWAP3 POP DUP8 DUP2 DUP2 RETURNDATASIZE DUP4 GT PUSH2 0x61E JUMPI JUMPDEST PUSH2 0x609 DUP2 DUP4 PUSH2 0x10D1 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0x619 JUMPI MLOAD SWAP2 CODESIZE PUSH2 0x44A JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST POP RETURNDATASIZE PUSH2 0x5FF JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP12 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP4 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x136 JUMPI PUSH1 0x20 DUP1 PUSH1 0x3 NOT CALLDATASIZE ADD SLT PUSH2 0x758 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 PUSH2 0x659 PUSH2 0xFBC JUMP JUMPDEST AND DUP4 MSTORE PUSH1 0x3 DUP2 MSTORE PUSH1 0x40 DUP4 KECCAK256 SWAP1 DUP2 SLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP5 DUP6 DUP4 GT PUSH2 0x744 JUMPI SWAP2 SWAP1 PUSH1 0x40 MLOAD SWAP2 PUSH1 0x5 PUSH2 0x68E DUP4 DUP4 DUP4 SHL ADD DUP6 PUSH2 0x10D1 JUMP JUMPDEST DUP2 DUP5 MSTORE DUP3 DUP5 ADD DUP1 SWAP7 DUP7 MSTORE DUP4 DUP7 KECCAK256 DUP7 SWAP2 JUMPDEST DUP5 DUP4 LT PUSH2 0x720 JUMPI POP POP POP POP POP PUSH1 0x40 MLOAD SWAP5 DUP2 DUP7 ADD SWAP3 DUP3 DUP8 MSTORE MLOAD DUP1 SWAP4 MSTORE PUSH1 0x40 DUP7 ADD SWAP5 SWAP4 SWAP1 JUMPDEST DUP4 DUP3 LT PUSH2 0x6CE JUMPI DUP7 DUP7 SUB DUP8 RETURN JUMPDEST DUP5 MLOAD DUP1 MLOAD DUP3 AND DUP8 MSTORE DUP1 DUP5 ADD MLOAD DUP8 DUP6 ADD MSTORE PUSH1 0x40 DUP1 DUP3 ADD MLOAD SWAP1 DUP9 ADD MSTORE PUSH1 0x60 DUP1 DUP3 ADD MLOAD SWAP1 DUP9 ADD MSTORE PUSH1 0x80 DUP1 DUP3 ADD MLOAD PUSH1 0x7 SIGNEXTEND SWAP1 DUP9 ADD MSTORE PUSH1 0xA0 SWAP1 DUP2 ADD MLOAD DUP10 AND SWAP1 DUP8 ADD MSTORE PUSH1 0xC0 SWAP1 SWAP6 ADD SWAP5 SWAP4 DUP3 ADD SWAP4 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x6C1 JUMP JUMPDEST DUP4 DUP7 PUSH1 0x1 SWAP3 PUSH2 0x732 DUP6 SWAP12 SWAP10 SWAP11 SWAP12 PUSH2 0x137C JUMP JUMPDEST DUP2 MSTORE ADD SWAP3 ADD SWAP3 ADD SWAP2 SWAP1 SWAP7 SWAP6 SWAP5 SWAP7 PUSH2 0x69E JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 SWAP1 REVERT JUMPDEST POP DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x136 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x136 JUMPI PUSH1 0xC0 SWAP1 PUSH1 0x40 PUSH2 0x77B PUSH2 0xFBC JUMP JUMPDEST SWAP2 DUP1 PUSH1 0xA0 DUP4 MLOAD PUSH2 0x78A DUP2 PUSH2 0x108D JUMP JUMPDEST DUP3 DUP2 MSTORE DUP3 PUSH1 0x20 DUP3 ADD MSTORE DUP3 DUP6 DUP3 ADD MSTORE DUP3 PUSH1 0x60 DUP3 ADD MSTORE DUP3 PUSH1 0x80 DUP3 ADD MSTORE ADD MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP1 SWAP4 AND DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE KECCAK256 SWAP1 PUSH1 0x40 MLOAD SWAP1 PUSH2 0x7C6 DUP3 PUSH2 0x108D JUMP JUMPDEST DUP3 SLOAD AND SWAP2 DUP3 DUP3 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x20 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0x40 DUP5 ADD SWAP1 DUP2 MSTORE PUSH1 0x3 DUP4 ADD SLOAD SWAP2 PUSH1 0x60 DUP6 ADD SWAP3 PUSH1 0x7 SIGNEXTEND DUP4 MSTORE PUSH1 0xA0 PUSH1 0x5 PUSH1 0x4 DUP7 ADD SLOAD SWAP6 PUSH1 0x80 DUP9 ADD SWAP7 DUP8 MSTORE ADD SLOAD SWAP6 ADD SWAP5 DUP6 MSTORE PUSH1 0x40 MLOAD SWAP6 DUP7 MSTORE MLOAD PUSH1 0x20 DUP7 ADD MSTORE MLOAD PUSH1 0x40 DUP6 ADD MSTORE MLOAD PUSH1 0x7 SIGNEXTEND PUSH1 0x60 DUP5 ADD MSTORE MLOAD PUSH1 0x80 DUP4 ADD MSTORE MLOAD PUSH1 0xA0 DUP3 ADD MSTORE RETURN JUMPDEST POP CALLVALUE PUSH2 0x136 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x136 JUMPI PUSH1 0x40 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH2 0x85B PUSH2 0xFBC JUMP JUMPDEST AND DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE DUP2 PUSH1 0xFF DUP2 DUP4 KECCAK256 SLOAD AND SWAP2 PUSH1 0x5 PUSH1 0x20 MSTORE KECCAK256 SLOAD DUP3 MLOAD SWAP2 ISZERO ISZERO DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE RETURN JUMPDEST POP PUSH1 0xA0 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x136 JUMPI PUSH1 0x4 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x758 JUMPI PUSH2 0x8AD SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xF8C JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x24 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xDBE JUMPI PUSH2 0x8CE SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xF8C JUMP JUMPDEST SWAP2 SWAP1 PUSH1 0x44 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x5AA JUMPI PUSH2 0x8EF SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xF8C JUMP JUMPDEST SWAP2 SWAP1 SWAP3 PUSH1 0x64 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0xDBA JUMPI PUSH2 0x911 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xF8C JUMP JUMPDEST SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB PUSH1 0x2 SLOAD AND CALLER EQ DUP1 ISZERO PUSH2 0xDA6 JUMPI JUMPDEST PUSH2 0x92F SWAP1 PUSH2 0x12CE JUMP JUMPDEST PUSH2 0x93A DUP8 DUP11 EQ PUSH2 0x130B JUMP JUMPDEST DUP8 SLOAD PUSH1 0x40 MLOAD PUSH4 0xD47EED45 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 SWAP1 PUSH1 0x20 DUP2 DUP1 PUSH2 0x968 DUP8 DUP7 PUSH1 0x4 DUP5 ADD PUSH2 0x11D3 JUMP JUMPDEST SUB DUP2 DUP7 GAS STATICCALL SWAP1 DUP2 ISZERO PUSH2 0xD9B JUMPI DUP11 SWAP2 PUSH2 0xD69 JUMPI JUMPDEST POP DUP1 CALLVALUE LT PUSH2 0xD2C JUMPI DUP3 EXTCODESIZE ISZERO PUSH2 0xD28 JUMPI SWAP2 PUSH2 0x9AE SWAP4 SWAP2 DUP11 SWAP4 PUSH1 0x40 MLOAD DUP1 SWAP7 DUP2 SWAP6 DUP3 SWAP5 PUSH4 0x1DF3CBC5 PUSH1 0xE3 SHL DUP5 MSTORE PUSH1 0x4 DUP5 ADD PUSH2 0x11D3 JUMP JUMPDEST SUB SWAP3 GAS CALL DUP1 ISZERO PUSH2 0xD1D JUMPI PUSH2 0xD09 JUMPI JUMPDEST POP DUP6 SLOAD PUSH1 0x40 MLOAD PUSH4 0x96834AD3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x84 CALLDATALOAD PUSH1 0x4 DUP3 ADD MSTORE SWAP7 SWAP8 SWAP6 SWAP7 SWAP6 SWAP1 PUSH1 0x80 SWAP1 DUP8 SWAP1 PUSH1 0x24 SWAP1 DUP3 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND GAS STATICCALL SWAP6 DUP7 ISZERO PUSH2 0xCFE JUMPI DUP9 SWAP7 PUSH2 0xCDD JUMPI JUMPDEST POP DUP8 JUMPDEST DUP2 DUP2 LT PUSH2 0xA0C JUMPI DUP9 DUP1 RETURN JUMPDEST PUSH2 0xA1F PUSH2 0xA1A DUP3 DUP5 DUP7 PUSH2 0x1358 JUMP JUMPDEST PUSH2 0x1368 JUMP JUMPDEST PUSH2 0xA2A DUP3 DUP11 DUP8 PUSH2 0x1358 JUMP JUMPDEST CALLDATALOAD DUP7 DUP4 LT ISZERO PUSH2 0xCC9 JUMPI DUP3 PUSH1 0x5 SHL DUP9 ADD CALLDATALOAD SWAP2 PUSH1 0x1E NOT DUP10 CALLDATASIZE SUB ADD DUP4 SLT ISZERO PUSH2 0xCC5 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 DUP11 ADD CALLDATALOAD GT PUSH2 0xCC5 JUMPI DUP3 DUP10 ADD CALLDATALOAD CALLDATASIZE SUB PUSH1 0x20 DUP5 DUP12 ADD ADD SGT PUSH2 0xCC5 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP13 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP15 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH1 0x5 DUP3 MSTORE DUP1 DUP15 KECCAK256 DUP5 SWAP1 SSTORE PUSH1 0x3 SWAP1 SWAP2 MSTORE DUP13 KECCAK256 DUP1 SLOAD DUP1 PUSH2 0xABA JUMPI JUMPDEST POP POP POP POP POP PUSH2 0xAB5 SWAP1 PUSH2 0x1349 JUMP JUMPDEST PUSH2 0xA01 JUMP JUMPDEST DUP1 PUSH1 0x0 NOT DUP2 ADD GT PUSH2 0xCB1 JUMPI PUSH2 0xAD9 PUSH1 0x20 SWAP3 PUSH2 0xADF SWAP3 PUSH1 0x0 NOT ADD SWAP1 PUSH2 0xFD2 JUMP JUMPDEST POP PUSH2 0x137C JUMP JUMPDEST ADD DUP13 DUP2 MLOAD DUP12 DUP14 PUSH1 0x60 DUP2 ADD MLOAD SWAP4 DUP5 DUP5 GT PUSH1 0x0 EQ PUSH2 0xC74 JUMPI POP POP POP DUP2 DUP2 SUB SWAP1 DUP1 DUP3 GT PUSH2 0xC5E JUMPI PUSH2 0x3E8 SWAP3 DUP3 DUP5 DUP2 MUL DIV DUP5 EQ SWAP2 EQ OR ISZERO PUSH2 0xC4A JUMPI SWAP3 DUP12 SWAP3 DUP16 DUP15 PUSH2 0xC26 SWAP2 PUSH1 0x5 PUSH2 0xAB5 SWAP12 SWAP11 SWAP10 SWAP7 PUSH32 0x3FF67EDBD0619CB026483F7AD63337D36C11E8EFA0F694BD3E0559927DBFC09F SWAP10 MUL SWAP5 JUMPDEST MLOAD SWAP2 PUSH1 0x60 DUP5 ADD MLOAD DUP5 MLOAD SWAP1 PUSH1 0x40 MLOAD SWAP5 PUSH2 0xB64 DUP7 PUSH2 0x108D JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP11 AND DUP7 MSTORE PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x40 DUP6 ADD MSTORE PUSH1 0x7 SIGNEXTEND PUSH1 0x60 DUP5 ADD MSTORE PUSH1 0x80 DUP4 ADD DUP7 DUP2 MSTORE PUSH1 0x40 PUSH1 0xA0 DUP6 ADD SWAP3 DUP11 DUP5 MSTORE PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP11 AND DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE KECCAK256 SWAP4 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP2 MLOAD AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP7 SLOAD AND OR DUP6 SSTORE PUSH1 0x20 DUP2 ADD MLOAD PUSH1 0x1 DUP7 ADD SSTORE PUSH1 0x40 DUP2 ADD MLOAD PUSH1 0x2 DUP7 ADD SSTORE PUSH1 0x60 PUSH1 0x3 DUP7 ADD SWAP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB NOT DUP3 SLOAD AND SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND OR SWAP1 SSTORE MLOAD PUSH1 0x4 DUP5 ADD SSTORE MLOAD SWAP2 ADD SSTORE MLOAD PUSH1 0x7 SIGNEXTEND SWAP7 PUSH1 0x40 MLOAD SWAP6 DUP7 SWAP6 DUP7 MSTORE PUSH1 0x80 PUSH1 0x20 DUP8 ADD MSTORE PUSH1 0x20 PUSH1 0x80 DUP8 ADD SWAP3 DUP1 DUP4 ADD CALLDATALOAD SWAP3 ADD ADD PUSH2 0x11B2 JUMP JUMPDEST PUSH1 0x40 DUP5 ADD SWAP7 SWAP1 SWAP7 MSTORE PUSH1 0x60 DUP4 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP4 SUB SWAP1 LOG2 SWAP1 CODESIZE DUP1 DUP1 DUP1 PUSH2 0xAA7 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP16 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP16 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0xAB5 SWAP10 SWAP9 SWAP8 SWAP5 POP PUSH32 0x3FF67EDBD0619CB026483F7AD63337D36C11E8EFA0F694BD3E0559927DBFC09F SWAP7 SWAP4 POP SWAP1 DUP2 PUSH1 0x5 PUSH2 0xC26 SWAP4 SWAP8 SWAP5 SWAP8 SWAP5 PUSH2 0xB4D JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP15 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP15 REVERT JUMPDEST DUP12 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP12 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 DUP12 REVERT JUMPDEST PUSH2 0xCF7 SWAP2 SWAP7 POP PUSH1 0x80 RETURNDATASIZE PUSH1 0x80 GT PUSH2 0x584 JUMPI PUSH2 0x575 DUP2 DUP4 PUSH2 0x10D1 JUMP JUMPDEST SWAP5 CODESIZE PUSH2 0x9FE JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP11 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST SWAP6 PUSH2 0xD16 PUSH1 0x24 SWAP7 SWAP8 PUSH2 0x10BE JUMP JUMPDEST SWAP6 SWAP5 PUSH2 0x9BD JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP10 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST DUP10 DUP1 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x496E73756666696369656E74205079746820666565 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 RETURNDATASIZE PUSH1 0x20 GT PUSH2 0xD93 JUMPI JUMPDEST DUP2 PUSH2 0xD84 PUSH1 0x20 SWAP4 DUP4 PUSH2 0x10D1 JUMP JUMPDEST DUP2 ADD SUB SLT PUSH2 0xD28 JUMPI MLOAD CODESIZE PUSH2 0x97B JUMP JUMPDEST RETURNDATASIZE SWAP2 POP PUSH2 0xD77 JUMP JUMPDEST PUSH1 0x40 MLOAD RETURNDATASIZE DUP13 DUP3 RETURNDATACOPY RETURNDATASIZE SWAP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x926 JUMP JUMPDEST DUP7 DUP1 REVERT JUMPDEST DUP3 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x136 JUMPI PUSH1 0x60 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x136 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x4 CALLDATALOAD DUP2 DUP2 GT PUSH2 0xDBE JUMPI PUSH2 0xDF4 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xF8C JUMP JUMPDEST SWAP2 PUSH1 0x24 CALLDATALOAD DUP2 DUP2 GT PUSH2 0x5AA JUMPI PUSH2 0xE0D SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xF8C JUMP JUMPDEST SWAP4 SWAP1 SWAP2 PUSH1 0x44 CALLDATALOAD SWAP1 DUP2 GT PUSH2 0xECC JUMPI PUSH2 0xE28 SWAP1 CALLDATASIZE SWAP1 PUSH1 0x4 ADD PUSH2 0xF8C JUMP JUMPDEST POP POP PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 SWAP1 DUP3 AND CALLER EQ DUP1 ISZERO PUSH2 0xEBF JUMPI JUMPDEST PUSH2 0xE4B SWAP1 PUSH2 0x12CE JUMP JUMPDEST PUSH2 0xE56 DUP6 DUP3 EQ PUSH2 0x130B JUMP JUMPDEST DUP6 JUMPDEST DUP2 DUP2 LT PUSH2 0xE63 JUMPI DUP7 DUP1 RETURN JUMPDEST DUP1 DUP4 PUSH2 0xE76 PUSH2 0xA1A PUSH2 0xEBA SWAP5 DUP7 DUP11 PUSH2 0x1358 JUMP JUMPDEST AND DUP9 MSTORE PUSH1 0x20 PUSH1 0x4 DUP2 MSTORE PUSH1 0x40 DUP10 KECCAK256 PUSH1 0x1 PUSH1 0xFF NOT DUP3 SLOAD AND OR SWAP1 SSTORE PUSH1 0x5 PUSH2 0xE9B DUP4 DUP11 DUP10 PUSH2 0x1358 JUMP JUMPDEST CALLDATALOAD SWAP2 DUP7 PUSH2 0xEAC PUSH2 0xA1A DUP7 DUP10 DUP14 PUSH2 0x1358 JUMP JUMPDEST AND DUP12 MSTORE MSTORE PUSH1 0x40 DUP10 KECCAK256 SSTORE PUSH2 0x1349 JUMP JUMPDEST PUSH2 0xE58 JUMP JUMPDEST POP PUSH1 0x1 SLOAD DUP3 AND CALLER EQ PUSH2 0xE42 JUMP JUMPDEST DUP6 DUP1 REVERT JUMPDEST POP CALLVALUE PUSH2 0x136 JUMPI PUSH1 0x20 CALLDATASIZE PUSH1 0x3 NOT ADD SLT PUSH2 0x136 JUMPI PUSH1 0x4 CALLDATALOAD CALLER DUP3 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH2 0xEFE PUSH1 0xFF PUSH1 0x40 DUP5 KECCAK256 SLOAD AND ISZERO PUSH2 0x1004 JUMP JUMPDEST PUSH2 0xF09 DUP2 ISZERO ISZERO PUSH2 0x1050 JUMP JUMPDEST CALLER DUP3 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH2 0xF4B PUSH1 0x40 DUP4 KECCAK256 PUSH1 0x40 MLOAD SWAP1 PUSH2 0xF25 DUP3 PUSH2 0x108D JUMP JUMPDEST CALLER DUP3 MSTORE TIMESTAMP PUSH1 0x20 DUP4 ADD MSTORE DUP4 PUSH1 0x40 DUP4 ADD MSTORE NUMBER PUSH1 0x60 DUP4 ADD MSTORE DUP5 PUSH1 0x80 DUP4 ADD MSTORE DUP5 PUSH1 0xA0 DUP4 ADD MSTORE PUSH2 0x10F2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 TIMESTAMP DUP3 MSTORE PUSH1 0x20 DUP3 ADD MSTORE NUMBER PUSH1 0x40 DUP3 ADD MSTORE DUP2 PUSH1 0x60 DUP3 ADD MSTORE PUSH32 0x3A41B4A45381E8007ECEED209F6413255128C9FAF4A51F718825CAB30CB89FFB PUSH1 0x80 CALLER SWAP3 LOG2 DUP1 RETURN JUMPDEST SWAP2 DUP2 PUSH1 0x1F DUP5 ADD SLT ISZERO PUSH2 0x619 JUMPI DUP3 CALLDATALOAD SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP4 GT PUSH2 0x619 JUMPI PUSH1 0x20 DUP1 DUP6 ADD SWAP5 DUP5 PUSH1 0x5 SHL ADD ADD GT PUSH2 0x619 JUMPI JUMP JUMPDEST PUSH1 0x4 CALLDATALOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND DUP3 SUB PUSH2 0x619 JUMPI JUMP JUMPDEST DUP1 SLOAD DUP3 LT ISZERO PUSH2 0xFEE JUMPI PUSH1 0x0 MSTORE PUSH1 0x5 PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP2 MUL ADD SWAP1 PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ISZERO PUSH2 0x100B JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x426F74206465746563746564202D2074726164696E6720626C6F636B65642100 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1057 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x125B9D985B1A5908185B5BDD5B9D PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0xC0 DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x10A8 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x10A8 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST SWAP1 PUSH1 0x1F DUP1 NOT SWAP2 ADD AND DUP2 ADD SWAP1 DUP2 LT PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP3 GT OR PUSH2 0x10A8 JUMPI PUSH1 0x40 MSTORE JUMP JUMPDEST DUP1 SLOAD PUSH9 0x10000000000000000 DUP2 LT ISZERO PUSH2 0x10A8 JUMPI PUSH2 0x1114 SWAP2 PUSH1 0x1 DUP3 ADD DUP2 SSTORE PUSH2 0xFD2 JUMP JUMPDEST PUSH2 0x119C JUMPI PUSH1 0x4 SWAP1 PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP4 MLOAD AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x60 SHL SUB PUSH1 0xA0 SHL DUP3 SLOAD AND OR DUP2 SSTORE PUSH1 0x20 DUP4 ADD MLOAD PUSH1 0x1 DUP3 ADD SSTORE PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x2 DUP3 ADD SSTORE PUSH1 0x60 DUP4 ADD MLOAD PUSH1 0x3 DUP3 ADD SSTORE ADD SWAP1 PUSH1 0x80 DUP2 ADD MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH16 0xFFFFFFFFFFFFFFFF0000000000000000 PUSH1 0xA0 DUP6 SLOAD SWAP4 ADD MLOAD PUSH1 0x40 SHL AND SWAP3 AND SWAP1 PUSH16 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND OR OR SWAP1 SSTORE JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 DUP1 PUSH1 0x20 SWAP4 SWAP3 DUP2 DUP5 MSTORE DUP5 DUP5 ADD CALLDATACOPY PUSH1 0x0 DUP3 DUP3 ADD DUP5 ADD MSTORE PUSH1 0x1F ADD PUSH1 0x1F NOT AND ADD ADD SWAP1 JUMP JUMPDEST SWAP2 PUSH1 0x20 DUP2 DUP2 DUP6 ADD DUP3 DUP7 MSTORE MSTORE PUSH1 0x40 DUP5 ADD SWAP4 PUSH1 0x40 DUP4 PUSH1 0x5 SHL DUP3 ADD ADD SWAP5 DUP5 PUSH1 0x0 SWAP3 JUMPDEST DUP6 DUP5 LT PUSH2 0x1203 JUMPI POP POP POP POP POP POP POP SWAP1 JUMP JUMPDEST SWAP1 SWAP2 SWAP3 SWAP4 SWAP5 SWAP6 SWAP7 PUSH1 0x3F NOT DUP3 DUP3 SUB ADD DUP5 MSTORE DUP8 CALLDATALOAD PUSH1 0x1E NOT DUP5 CALLDATASIZE SUB ADD DUP2 SLT ISZERO PUSH2 0x619 JUMPI DUP4 ADD DUP7 DUP2 ADD SWAP2 SWAP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP2 GT PUSH2 0x619 JUMPI DUP1 CALLDATASIZE SUB DUP4 SGT PUSH2 0x619 JUMPI PUSH2 0x1251 DUP9 SWAP3 DUP4 SWAP3 PUSH1 0x1 SWAP6 PUSH2 0x11B2 JUMP JUMPDEST SWAP10 ADD SWAP5 ADD SWAP5 ADD SWAP3 SWAP6 SWAP5 SWAP4 SWAP2 SWAP1 PUSH2 0x11F2 JUMP JUMPDEST SWAP1 DUP2 PUSH1 0x80 SWAP2 SUB SLT PUSH2 0x619 JUMPI PUSH1 0x40 MLOAD SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x80 DUP4 ADD DUP2 DUP2 GT DUP5 DUP3 LT OR PUSH2 0x10A8 JUMPI PUSH1 0x40 MSTORE DUP2 MLOAD DUP1 PUSH1 0x7 SIGNEXTEND DUP2 SUB PUSH2 0x619 JUMPI DUP4 MSTORE PUSH1 0x20 DUP3 ADD MLOAD SWAP1 DUP2 AND DUP2 SUB PUSH2 0x619 JUMPI PUSH1 0x20 DUP4 ADD MSTORE PUSH1 0x40 DUP2 ADD MLOAD SWAP1 DUP2 PUSH1 0x3 SIGNEXTEND DUP3 SUB PUSH2 0x619 JUMPI PUSH1 0x60 SWAP2 PUSH1 0x40 DUP5 ADD MSTORE ADD MLOAD PUSH1 0x60 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST ISZERO PUSH2 0x12D5 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x139BDD08185D5D1A1BDC9A5E9959 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST ISZERO PUSH2 0x1312 JUMPI JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x98CADCCEE8D040DAD2E6DAC2E8C6D PUSH1 0x8B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 SWAP1 REVERT JUMPDEST PUSH1 0x0 NOT DUP2 EQ PUSH2 0xC5E JUMPI PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST SWAP2 SWAP1 DUP2 LT ISZERO PUSH2 0xFEE JUMPI PUSH1 0x5 SHL ADD SWAP1 JUMP JUMPDEST CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 SUB PUSH2 0x619 JUMPI SWAP1 JUMP JUMPDEST SWAP1 PUSH1 0x40 MLOAD PUSH2 0x1389 DUP2 PUSH2 0x108D JUMP JUMPDEST PUSH1 0xA0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x4 DUP4 SWAP6 PUSH1 0x1 DUP1 DUP6 SHL SUB DUP2 SLOAD AND DUP6 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x20 DUP7 ADD MSTORE PUSH1 0x2 DUP2 ADD SLOAD PUSH1 0x40 DUP7 ADD MSTORE PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0x60 DUP7 ADD MSTORE ADD SLOAD DUP1 PUSH1 0x7 SIGNEXTEND PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0x40 SHR AND SWAP2 ADD MSTORE JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA9 0x4F PUSH29 0x6EDF7C206307F1E5245A7BB0D9C9918C55E0F81C8D99415613CC5D6E05 PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ","sourceMap":"166:6135:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;166:6135:3;;;;;;:::i;:::-;1312:11;166:6135;-1:-1:-1;;;;;166:6135:3;;;;1298:10;:25;:48;;;;166:6135;1277:109;;;:::i;:::-;166:6135;;;;;;;;;;;;;;;;5695:8;166:6135;;;;;;;;;1298:48;-1:-1:-1;166:6135:3;;;;1298:10;1327:19;1298:48;;166:6135;;;;;;;;;;-1:-1:-1;;166:6135:3;;;;;;;;;;-1:-1:-1;;;;;166:6135:3;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;166:6135:3;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;166:6135:3;;;;;;;;;;;;;;;-1:-1:-1;;166:6135:3;;;;;;;;-1:-1:-1;;;;;166:6135:3;;:::i;:::-;;;;795:43;166:6135;;;;;;;;;;;;;;;;;;;;;;;250:26;166:6135;;;-1:-1:-1;;;;;166:6135:3;;;;;;;;;;;;;;;-1:-1:-1;;166:6135:3;;;;;;-1:-1:-1;;;;;166:6135:3;;;;;;:::i;:::-;;;;844:55;166:6135;;;;;;;844:55;166:6135;844:55;;166:6135;844:55;;;;166:6135;;844:55;;166:6135;;;844:55;;166:6135;844:55;;166:6135;844:55;;166:6135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;166:6135:3;;;;;;:::i;:::-;-1:-1:-1;;;;;166:6135:3;;;;;;;;;;;;;;;;;687:51;;;;;;;166:6135;687:51;-1:-1:-1;;;;;687:51:3;;:::i;:::-;166:6135;;;;;687:51;166:6135;687:51;;166:6135;687:51;;;;166:6135;;;687:51;;166:6135;687:51;;166:6135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;166:6135:3;;;;;;:::i;:::-;;;-1:-1:-1;;;;;166:6135:3;;;;6222:10;:19;166:6135;;;-1:-1:-1;;;;;166:6135:3;;6266:26;166:6135;;;6266:26;166:6135;;;;;;-1:-1:-1;;;166:6135:3;;;;;;;;;;;;-1:-1:-1;;;166:6135:3;;;;;;;;-1:-1:-1;166:6135:3;;-1:-1:-1;;166:6135:3;;;;-1:-1:-1;;;;;166:6135:3;;;;;;;;;;;;;;;;:::i;:::-;2419:10;;;166:6135;;;;;;;2396:70;166:6135;;;;;;2404:26;2396:70;:::i;:::-;2476:37;2484:10;;;2476:37;:::i;:::-;166:6135;;;;-1:-1:-1;;;2535:34:3;;-1:-1:-1;;;;;166:6135:3;;;;;2535:34;166:6135;;2535:34;166:6135;2535:34;166:6135;2535:34;;;:::i;:::-;;;;;;;;;;;;;;;166:6135;2587:9;;;:16;166:6135;;2635:50;;;;;;;;;;166:6135;;-1:-1:-1;;;2635:50:3;;166:6135;;;;;;;;;2635:50;;166:6135;2635:50;;;:::i;:::-;;;;;;;;;;;166:6135;;;;2729:37;166:6135;;;;;;;;;;;;2729:37;;166:6135;;;2729:37;;166:6135;2763:2;166:6135;;;;2729:37;;;;;;;;;;;166:6135;2419:10;2777:338;2419:10;;166:6135;;;;;;;;;;3072:17;166:6135;3072:17;;166:6135;;;;;;;;:::i;:::-;2419:10;166:6135;;2893:15;2818:287;;;166:6135;2818:287;166:6135;2818:287;;166:6135;2971:12;166:6135;2818:287;;166:6135;;;2729:37;2818:287;;166:6135;;2818:287;;166:6135;2777:338;:::i;:::-;166:6135;;;;;;2893:15;;166:6135;;;;;2971:12;166:6135;;;;;;;;3131:147;2729:37;2419:10;3131:147;;166:6135;;2729:37;2777:338;2729:37;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;166:6135;;;;;;;;;2635:50;;;;:::i;:::-;166:6135;;2635:50;;;;166:6135;;;;2635:50;166:6135;;;;;;;;;;;;-1:-1:-1;;;166:6135:3;;;;;;;;;;;;;-1:-1:-1;;;166:6135:3;;;;;;;2535:34;;;;;;;;;;;;;;;;;:::i;:::-;;;166:6135;;;;;2535:34;;;;166:6135;;;;2535:34;;;;;;166:6135;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;166:6135:3;;;;:::i;:::-;;;;;;;;;;;;;;-1:-1:-1;;;;;166:6135:3;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;-1:-1:-1;;;166:6135:3;;;;;;;;;;;;;;;;;;;-1:-1:-1;;166:6135:3;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6114:16;166:6135;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;166:6135:3;;;;;;-1:-1:-1;;;;;166:6135:3;;:::i;:::-;;;;;;;;;;;;;;;5974:8;166:6135;;;;;;;;;;;;;;;;;-1:-1:-1;166:6135:3;;-1:-1:-1;;166:6135:3;;;;;;-1:-1:-1;;;;;166:6135:3;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;166:6135:3;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;166:6135:3;;;;;;;;;;;:::i;:::-;;;;;;-1:-1:-1;;;;;166:6135:3;;;;;;;;;;;:::i;:::-;;;;;;;1312:11;166:6135;;1298:10;:25;:48;;;;166:6135;1277:109;;;:::i;:::-;3539:57;3547:29;;;3539:57;:::i;:::-;166:6135;;;;-1:-1:-1;;;3618:34:3;;-1:-1:-1;;;;;166:6135:3;;;;;;;;3618:34;;166:6135;;3618:34;;;:::i;:::-;;;;;;;;;;;;;;;166:6135;3670:9;;;:16;166:6135;;3723:50;;;;;166:6135;3723:50;166:6135;;;;;;;;;;;;;;;3723:50;;166:6135;3723:50;;;:::i;:::-;;;;;;;;;;;166:6135;-1:-1:-1;166:6135:3;;;;-1:-1:-1;;;3824:28:3;;166:6135;;;3824:28;;166:6135;;;;;;;;;;;;;;;-1:-1:-1;;;;;166:6135:3;3824:28;;;;;;;;;;;166:6135;3868:10;;3880:16;;;;;;166:6135;;;3898:3;3938:8;;;;;;:::i;:::-;;:::i;:::-;3948:9;;;;;:::i;:::-;166:6135;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;166:6135:3;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;166:6135:3;;;;;;;;;;;;;;;-1:-1:-1;;166:6135:3;;;;;;;;;;;;;;;;;;;;;;;4379:823;;3898:3;;;;;;;;;:::i;:::-;3868:10;;4379:823;166:6135;;;;;;;;4447:25;166:6135;;;;;;;4447:25;;:::i;:::-;166:6135;;:::i;:::-;4510:19;166:6135;;;4548:24;;166:6135;4548:24;;166:6135;4510:156;:62;;;:156;:62;;;166:6135;;;;;;;;;;;;4642:4;166:6135;;;;;;;;;;;;;;;;;;;;;;3898:3;166:6135;;;;5023:168;166:6135;;4510:156;;166:6135;4548:24;166:6135;4548:24;;166:6135;;;;;;;;;;:::i;:::-;;;;;;;;;;;4706:297;;166:6135;;4706:297;;166:6135;;;;4706:297;;166:6135;;4706:297;;166:6135;;;;;4706:297;;166:6135;;;;;;;;;;;;;4681:16;166:6135;;;;;;;;;;;;-1:-1:-1;;;;;166:6135:3;;;;;;;;;4706:297;;166:6135;;;;;;4706:297;;166:6135;1312:11;166:6135;;;;;;;4706:297;;166:6135;-1:-1:-1;;;;;166:6135:3;;;;;-1:-1:-1;;;;;166:6135:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;166:6135:3;;5023:168;;;4379:823;;;;;;;166:6135;-1:-1:-1;;;166:6135:3;;;;;;;;;;;;;;;;;;;;4510:156;3898:3;4510:156;;;;;5023:168;4510:156;;;;;166:6135;;4510:156;;;;;;;166:6135;-1:-1:-1;;;166:6135:3;;;;;;;;;;;;;-1:-1:-1;;;166:6135:3;;;;;;;;3824:28;;;;;166:6135;3824:28;166:6135;3824:28;;;;;;;:::i;:::-;;;;;;166:6135;;;;;;;;;3723:50;;;166:6135;3723:50;;;:::i;:::-;;;;;;166:6135;;;;;;;;;3723:50;166:6135;;;;;;-1:-1:-1;;;166:6135:3;;;;;;;;;;;;-1:-1:-1;;;166:6135:3;;;;;;;3618:34;;;166:6135;3618:34;;166:6135;3618:34;;;;;;166:6135;3618:34;;;:::i;:::-;;;166:6135;;;;;3618:34;;;;;;-1:-1:-1;3618:34:3;;;166:6135;;;;;;;;;1298:48;-1:-1:-1;166:6135:3;;-1:-1:-1;;;;;166:6135:3;1298:10;1327:19;1298:48;;166:6135;;;;;;;;;;;;;;;-1:-1:-1;;166:6135:3;;;;-1:-1:-1;;;;;166:6135:3;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;1312:11:3;166:6135;-1:-1:-1;;;;;166:6135:3;;;;1298:10;:25;:48;;;;166:6135;1277:109;;;:::i;:::-;5374:57;5382:29;;;5374:57;:::i;:::-;5447:10;5459:16;;;;;;166:6135;;;5477:3;5510:8;;;;5477:3;5510:8;;;;:::i;:::-;166:6135;;;;;;;;;;;;;;;;;;;5540:8;5561:9;;;;;:::i;:::-;166:6135;5549:8;;;;;;;;:::i;:::-;166:6135;;;;;;;;5477:3;:::i;:::-;5447:10;;1298:48;-1:-1:-1;166:6135:3;;;;1298:10;1327:19;1298:48;;166:6135;;;;;;;;;;;-1:-1:-1;;166:6135:3;;;;;;1661:10;166:6135;;;;;1638:70;166:6135;;;;;;1646:26;1638:70;:::i;:::-;1718:37;1726:10;;;1718:37;:::i;:::-;1661:10;166:6135;;;;;1766:304;166:6135;;;;;;;;;:::i;:::-;1661:10;166:6135;;1882:15;166:6135;1807:253;;166:6135;1807:253;166:6135;1807:253;;166:6135;1960:12;1807:253;;;166:6135;1807:253;;;;166:6135;1807:253;;;;166:6135;1766:304;:::i;:::-;166:6135;;1882:15;;166:6135;;;;;;1960:12;166:6135;;;;;1807:253;166:6135;;;2086:137;1807:253;1661:10;2086:137;;166:6135;;;;;;;;;;;;;;;-1:-1:-1;;;;;166:6135:3;;;;;;;;;;;;;;;;;:::o;:::-;;;;-1:-1:-1;;;;;166:6135:3;;;;;;:::o;:::-;;;;;;;;-1:-1:-1;166:6135:3;;;-1:-1:-1;166:6135:3;;;;;-1:-1:-1;166:6135:3;:::o;:::-;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;166:6135:3;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;166:6135:3;;;;;;;;;;;;-1:-1:-1;;;166:6135:3;;;;;;;;;;;;;;-1:-1:-1;;;;;166:6135:3;;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;166:6135:3;;;;;;:::o;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;166:6135:3;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;166:6135:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;166:6135:3;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;166:6135:3;;;;;;;;-1:-1:-1;;166:6135:3;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;166:6135:3;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;166:6135:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;:::o;:::-;;;-1:-1:-1;;;166:6135:3;;;;;;;;;;;;-1:-1:-1;;;166:6135:3;;;;;;;;;;;:::o;:::-;;;-1:-1:-1;;;166:6135:3;;;;;;;;;;;;-1:-1:-1;;;166:6135:3;;;;;;;;-1:-1:-1;;166:6135:3;;;;;;;:::o;:::-;;;;;;;;;;;;:::o;:::-;;-1:-1:-1;;;;;166:6135:3;;;;;;;:::o;:::-;;;;;;;:::i;:::-;;-1:-1:-1;;;;;166:6135:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o"},"methodIdentifiers":{"admin()":"f851a440","botAnalyzer()":"c35fc524","botEvidenceProof(address)":"c32d2a02","botScore(address)":"cae2b31e","executeTrade(uint256)":"02d2838b","executeTradeWithPriceProof(uint256,bytes[],bytes32)":"9cda8908","flagBots(address[],uint256[],string[])":"09e07dbe","flagBotsWithPythProof(address[],uint256[],string[],bytes[],bytes32)":"1ca1b065","flaggedAsBots(address)":"fbec1560","getBotEvidence(address)":"4d4ca309","getUserTrades(address)":"927c7742","isBot(address)":"3bbac579","pyth()":"f98d06f0","setBotAnalyzer(address)":"aa2ca71b","unflagBot(address)":"fed20c78","userTrades(address,uint256)":"b1b1ffab"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_pythContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_botAnalyzer\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"score\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int64\",\"name\":\"priceUsed\",\"type\":\"int64\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reactionTimeMs\",\"type\":\"uint256\"}],\"name\":\"BotFlaggedWithProof\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"int64\",\"name\":\"btcPrice\",\"type\":\"int64\"}],\"name\":\"TradeExecuted\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"botAnalyzer\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"botEvidenceProof\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tradeTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pricePublishTime\",\"type\":\"uint256\"},{\"internalType\":\"int64\",\"name\":\"priceAtTrade\",\"type\":\"int64\"},{\"internalType\":\"uint256\",\"name\":\"reactionTimeMs\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"botScore\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"botScore\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"executeTrade\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes[]\",\"name\":\"priceUpdateData\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes32\",\"name\":\"priceId\",\"type\":\"bytes32\"}],\"name\":\"executeTradeWithPriceProof\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"users\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"scores\",\"type\":\"uint256[]\"},{\"internalType\":\"string[]\",\"name\":\"reasons\",\"type\":\"string[]\"}],\"name\":\"flagBots\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"users\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"scores\",\"type\":\"uint256[]\"},{\"internalType\":\"string[]\",\"name\":\"reasons\",\"type\":\"string[]\"},{\"internalType\":\"bytes[]\",\"name\":\"priceUpdateData\",\"type\":\"bytes[]\"},{\"internalType\":\"bytes32\",\"name\":\"priceId\",\"type\":\"bytes32\"}],\"name\":\"flagBotsWithPythProof\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"flaggedAsBots\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getBotEvidence\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tradeTimestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"pricePublishTime\",\"type\":\"uint256\"},{\"internalType\":\"int64\",\"name\":\"priceAtTrade\",\"type\":\"int64\"},{\"internalType\":\"uint256\",\"name\":\"reactionTimeMs\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"botScore\",\"type\":\"uint256\"}],\"internalType\":\"struct BotDetectorWithPyth.BotEvidence\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getUserTrades\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"int64\",\"name\":\"btcPriceAtTrade\",\"type\":\"int64\"},{\"internalType\":\"uint64\",\"name\":\"pricePublishTime\",\"type\":\"uint64\"}],\"internalType\":\"struct BotDetectorWithPyth.TradeRecord[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"isBot\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pyth\",\"outputs\":[{\"internalType\":\"contract IPyth\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newAnalyzer\",\"type\":\"address\"}],\"name\":\"setBotAnalyzer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"unflagBot\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"userTrades\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"int64\",\"name\":\"btcPriceAtTrade\",\"type\":\"int64\"},{\"internalType\":\"uint64\",\"name\":\"pricePublishTime\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BotDetector.sol\":\"BotDetectorWithPyth\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[],\"viaIR\":true},\"sources\":{\"@pythnetwork/pyth-sdk-solidity/IPyth.sol\":{\"keccak256\":\"0xada6a1f4898b056d2804409ecad466b786dc6a12bc6f8f247e7f1471c1b86fcd\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ecee3c205896236fc11bfb1367f033353448fa462b08e5212a32e767f72022c9\",\"dweb:/ipfs/QmeEQpRRza2Swm2gCCC61TDxQ2GNLjqPhdtbSznADMuMni\"]},\"@pythnetwork/pyth-sdk-solidity/IPythEvents.sol\":{\"keccak256\":\"0xd67239becd2c39bd9d065830be24e70606f5747ab31b8818bea849d09ac17ddc\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://e719bd2d8c1d8d46713aeb700dd6b5ddd766a77830ea9ae3cc9327f67ed775d1\",\"dweb:/ipfs/QmNQYyRVFLEvLsCSTkHkAemTvvZm4CzLN7hUdMidMcBS7u\"]},\"@pythnetwork/pyth-sdk-solidity/PythStructs.sol\":{\"keccak256\":\"0x474436bf0d558cc9b2c00a9d0ce318147acdf7963f34ef4acadb9248e65bbc7b\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://2b8f9bd9de35e67c7bdbf04d8c2e771718fcc8666456ca5f92dbd914e4a5f2b3\",\"dweb:/ipfs/QmNP3ShBYRp4RiVbAudMB7rNHAqgtwn8pPBzb8JTUaViRh\"]},\"contracts/BotDetector.sol\":{\"keccak256\":\"0x0ccc865ceabdc38c8157c319be807c94373a0141dd4135517312cc1c5cbebbe0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b75c152b3fe9c5a41e7e8e7d4e7e418a9c0f9522ae48a717a572934634c2a5b9\",\"dweb:/ipfs/QmVZdx9NmDaegz1RBHs9WFDM9Hm6G6YAPp4btTXqfSbV53\"]}},\"version\":1}"}}}}}